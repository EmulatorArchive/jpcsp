/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class UtilsForKernel implements HLEModule {

    @Override
    public final String getName() {
        return "UtilsForKernel";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceUtilsKernelDcacheWBinvRange, 0x80FE032E);

        mm.add(sceKernelUtilsMd5Digest, 0xC8186A58);

        mm.add(sceKernelUtilsMd5BlockInit, 0x9E5C5086);

        mm.add(sceKernelUtilsMd5BlockUpdate, 0x61E1E525);

        mm.add(sceKernelUtilsMd5BlockResult, 0xB8D24E78);

        mm.add(sceKernelUtilsSha1Digest, 0x840259F1);

        mm.add(sceKernelUtilsSha1BlockInit, 0xF8FCD5BA);

        mm.add(sceKernelUtilsSha1BlockUpdate, 0x346F6DA8);

        mm.add(sceKernelUtilsSha1BlockResult, 0x585F1C09);

        mm.add(sceKernelUtilsMt19937Init, 0xE860E75E);

        mm.add(sceKernelUtilsMt19937UInt, 0x06FB8A63);

        mm.add(sceKernelSetGPIMask, 0x193D4036);

        mm.add(sceKernelSetGPOMask, 0x95035FEF);

        mm.add(sceKernelGetGPI, 0x37FB5C42);

        mm.add(sceKernelSetGPO, 0x6AD345D7);

        mm.add(sceKernelRegisterLibcRtcFunc, 0x7B7ED3FD);

        mm.add(sceKernelReleaseLibcRtcFunc, 0x6151A7C3);

        mm.add(sceKernelLibcClock, 0x91E4F6A7);

        mm.add(sceKernelLibcTime, 0x27CC57F0);

        mm.add(sceKernelLibcGettimeofday, 0x71EC4271);

        mm.add(sceKernelDcacheWritebackAll, 0x79D1C3FA);

        mm.add(sceKernelDcacheWritebackInvalidateAll, 0xB435DEC5);

        mm.add(sceKernelDcacheInvalidateAll, 0x864A9D72);

        mm.add(sceKernelDcacheWritebackRange, 0x3EE30821);

        mm.add(sceKernelDcacheWritebackInvalidateRange, 0x34B9FA9E);

        mm.add(sceKernelDcacheInvalidateRange, 0xBFA98062);

        mm.add(sceKernelDcacheProbe, 0x80001C4C);

        mm.add(sceKernelDcacheReadTag, 0x16641D70);

        mm.add(sceKernelIcacheInvalidateAll, 0x920F104A);

        mm.add(sceKernelIcacheInvalidateRange, 0xC2DF770E);

        mm.add(sceKernelIcacheProbe, 0x4FD31C9D);

        mm.add(sceKernelIcacheReadTag, 0xFB05FAD0);

        mm.add(sceKernelGzipDecompress, 0x78934841);

        mm.add(sceKernelGzipIsValid, 0xE0CE3E29);

        mm.add(sceKernelGzipGetInfo, 0xB0E9C31F);

        mm.add(sceKernelGzipGetName, 0xE0E6BA96);

        mm.add(sceKernelGzipGetComment, 0x8C1FBE04);

        mm.add(sceKernelGzipGetCompressedData, 0x23FFC828);

        mm.add(sceKernelDeflateDecompress, 0xE8DB3CE6);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceUtilsKernelDcacheWBinvRange);

        mm.remove(sceKernelUtilsMd5Digest);

        mm.remove(sceKernelUtilsMd5BlockInit);

        mm.remove(sceKernelUtilsMd5BlockUpdate);

        mm.remove(sceKernelUtilsMd5BlockResult);

        mm.remove(sceKernelUtilsSha1Digest);

        mm.remove(sceKernelUtilsSha1BlockInit);

        mm.remove(sceKernelUtilsSha1BlockUpdate);

        mm.remove(sceKernelUtilsSha1BlockResult);

        mm.remove(sceKernelUtilsMt19937Init);

        mm.remove(sceKernelUtilsMt19937UInt);

        mm.remove(sceKernelSetGPIMask);

        mm.remove(sceKernelSetGPOMask);

        mm.remove(sceKernelGetGPI);

        mm.remove(sceKernelSetGPO);

        mm.remove(sceKernelRegisterLibcRtcFunc);

        mm.remove(sceKernelReleaseLibcRtcFunc);

        mm.remove(sceKernelLibcClock);

        mm.remove(sceKernelLibcTime);

        mm.remove(sceKernelLibcGettimeofday);

        mm.remove(sceKernelDcacheWritebackAll);

        mm.remove(sceKernelDcacheWritebackInvalidateAll);

        mm.remove(sceKernelDcacheInvalidateAll);

        mm.remove(sceKernelDcacheWritebackRange);

        mm.remove(sceKernelDcacheWritebackInvalidateRange);

        mm.remove(sceKernelDcacheInvalidateRange);

        mm.remove(sceKernelDcacheProbe);

        mm.remove(sceKernelDcacheReadTag);

        mm.remove(sceKernelIcacheInvalidateAll);

        mm.remove(sceKernelIcacheInvalidateRange);

        mm.remove(sceKernelIcacheProbe);

        mm.remove(sceKernelIcacheReadTag);

        mm.remove(sceKernelGzipDecompress);

        mm.remove(sceKernelGzipIsValid);

        mm.remove(sceKernelGzipGetInfo);

        mm.remove(sceKernelGzipGetName);

        mm.remove(sceKernelGzipGetComment);

        mm.remove(sceKernelGzipGetCompressedData);

        mm.remove(sceKernelDeflateDecompress);

    }
    public static final HLEModuleFunction sceUtilsKernelDcacheWBinvRange = new HLEModuleFunction("UtilsForKernel", "sceUtilsKernelDcacheWBinvRange") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceUtilsKernelDcacheWBinvRange [0x80FE032E]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsMd5Digest = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsMd5Digest") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsMd5Digest [0xC8186A58]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsMd5BlockInit = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsMd5BlockInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsMd5BlockInit [0x9E5C5086]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsMd5BlockUpdate = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsMd5BlockUpdate") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsMd5BlockUpdate [0x61E1E525]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsMd5BlockResult = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsMd5BlockResult") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsMd5BlockResult [0xB8D24E78]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsSha1Digest = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsSha1Digest") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsSha1Digest [0x840259F1]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsSha1BlockInit = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsSha1BlockInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsSha1BlockInit [0xF8FCD5BA]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsSha1BlockUpdate = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsSha1BlockUpdate") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsSha1BlockUpdate [0x346F6DA8]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsSha1BlockResult = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsSha1BlockResult") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsSha1BlockResult [0x585F1C09]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsMt19937Init = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsMt19937Init") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsMt19937Init [0xE860E75E]");
        }
    };
    public static final HLEModuleFunction sceKernelUtilsMt19937UInt = new HLEModuleFunction("UtilsForKernel", "sceKernelUtilsMt19937UInt") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUtilsMt19937UInt [0x06FB8A63]");
        }
    };
    public static final HLEModuleFunction sceKernelSetGPIMask = new HLEModuleFunction("UtilsForKernel", "sceKernelSetGPIMask") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelSetGPIMask [0x193D4036]");
        }
    };
    public static final HLEModuleFunction sceKernelSetGPOMask = new HLEModuleFunction("UtilsForKernel", "sceKernelSetGPOMask") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelSetGPOMask [0x95035FEF]");
        }
    };
    public static final HLEModuleFunction sceKernelGetGPI = new HLEModuleFunction("UtilsForKernel", "sceKernelGetGPI") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGetGPI [0x37FB5C42]");
        }
    };
    public static final HLEModuleFunction sceKernelSetGPO = new HLEModuleFunction("UtilsForKernel", "sceKernelSetGPO") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelSetGPO [0x6AD345D7]");
        }
    };
    public static final HLEModuleFunction sceKernelRegisterLibcRtcFunc = new HLEModuleFunction("UtilsForKernel", "sceKernelRegisterLibcRtcFunc") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterLibcRtcFunc [0x7B7ED3FD]");
        }
    };
    public static final HLEModuleFunction sceKernelReleaseLibcRtcFunc = new HLEModuleFunction("UtilsForKernel", "sceKernelReleaseLibcRtcFunc") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelReleaseLibcRtcFunc [0x6151A7C3]");
        }
    };
    public static final HLEModuleFunction sceKernelLibcClock = new HLEModuleFunction("UtilsForKernel", "sceKernelLibcClock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLibcClock [0x91E4F6A7]");
        }
    };
    public static final HLEModuleFunction sceKernelLibcTime = new HLEModuleFunction("UtilsForKernel", "sceKernelLibcTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLibcTime [0x27CC57F0]");
        }
    };
    public static final HLEModuleFunction sceKernelLibcGettimeofday = new HLEModuleFunction("UtilsForKernel", "sceKernelLibcGettimeofday") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLibcGettimeofday [0x71EC4271]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheWritebackAll = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheWritebackAll") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheWritebackAll [0x79D1C3FA]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheWritebackInvalidateAll = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheWritebackInvalidateAll") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheWritebackInvalidateAll [0xB435DEC5]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheInvalidateAll = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheInvalidateAll") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheInvalidateAll [0x864A9D72]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheWritebackRange = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheWritebackRange") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheWritebackRange [0x3EE30821]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheWritebackInvalidateRange = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheWritebackInvalidateRange") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheWritebackInvalidateRange [0x34B9FA9E]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheInvalidateRange = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheInvalidateRange") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheInvalidateRange [0xBFA98062]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheProbe = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheProbe") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheProbe [0x80001C4C]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheReadTag = new HLEModuleFunction("UtilsForKernel", "sceKernelDcacheReadTag") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheReadTag [0x16641D70]");
        }
    };
    public static final HLEModuleFunction sceKernelIcacheInvalidateAll = new HLEModuleFunction("UtilsForKernel", "sceKernelIcacheInvalidateAll") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelIcacheInvalidateAll [0x920F104A]");
        }
    };
    public static final HLEModuleFunction sceKernelIcacheInvalidateRange = new HLEModuleFunction("UtilsForKernel", "sceKernelIcacheInvalidateRange") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelIcacheInvalidateRange [0xC2DF770E]");
        }
    };
    public static final HLEModuleFunction sceKernelIcacheProbe = new HLEModuleFunction("UtilsForKernel", "sceKernelIcacheProbe") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelIcacheProbe [0x4FD31C9D]");
        }
    };
    public static final HLEModuleFunction sceKernelIcacheReadTag = new HLEModuleFunction("UtilsForKernel", "sceKernelIcacheReadTag") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelIcacheReadTag [0xFB05FAD0]");
        }
    };
    public static final HLEModuleFunction sceKernelGzipDecompress = new HLEModuleFunction("UtilsForKernel", "sceKernelGzipDecompress") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGzipDecompress [0x78934841]");
        }
    };
    public static final HLEModuleFunction sceKernelGzipIsValid = new HLEModuleFunction("UtilsForKernel", "sceKernelGzipIsValid") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGzipIsValid [0xE0CE3E29]");
        }
    };
    public static final HLEModuleFunction sceKernelGzipGetInfo = new HLEModuleFunction("UtilsForKernel", "sceKernelGzipGetInfo") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGzipGetInfo [0xB0E9C31F]");
        }
    };
    public static final HLEModuleFunction sceKernelGzipGetName = new HLEModuleFunction("UtilsForKernel", "sceKernelGzipGetName") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGzipGetName [0xE0E6BA96]");
        }
    };
    public static final HLEModuleFunction sceKernelGzipGetComment = new HLEModuleFunction("UtilsForKernel", "sceKernelGzipGetComment") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGzipGetComment [0x8C1FBE04]");
        }
    };
    public static final HLEModuleFunction sceKernelGzipGetCompressedData = new HLEModuleFunction("UtilsForKernel", "sceKernelGzipGetCompressedData") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGzipGetCompressedData [0x23FFC828]");
        }
    };
    public static final HLEModuleFunction sceKernelDeflateDecompress = new HLEModuleFunction("UtilsForKernel", "sceKernelDeflateDecompress") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDeflateDecompress [0xE8DB3CE6]");
        }
    };
};
