/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class sceSyscon_driver implements HLEModule {

    @Override
    public final String getName() {
        return "sceSyscon_driver";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceSysconInit, 0x0A771482);

        mm.add(sceSysconEnd, 0x92D16FC7);

        mm.add(sceSysconSuspend, 0x081826B4);

        mm.add(sceSysconResume, 0x56931095);

        mm.add(sceSysconSetDebugHandlers, 0x5EE92F3C);

        mm.add(sceSysconSetPollingMode, 0x5FF1D610);

        mm.add(sceSysconSetLowBatteryCallback, 0xAD555CE5);

        mm.add(sceSysconSetPowerSwitchCallback, 0xF281805D);

        mm.add(sceSysconSetAlarmCallback, 0xA068B3D0);

        mm.add(sceSysconSetAcSupplyCallback, 0xE540E532);

        mm.add(sceSysconSetHPConnectCallback, 0xBBFB70C0);

        mm.add(sceSysconSetHRPowerCallback, 0x805180D1);

        mm.add(sceSysconSetWlanSwitchCallback, 0x53072985);

        mm.add(sceSysconSetWlanPowerCallback, 0xF9193EC3);

        mm.add(sceSysconSetHoldSwitchCallback, 0x7479DB05);

        mm.add(sceSysconSetUmdSwitchCallback, 0x6848D817);

        mm.add(sceSysconCmdExec, 0x5B9ACC97);

        mm.add(sceSysconCmdExecAsync, 0x3AC3D2A4);

        mm.add(sceSysconCmdCancel, 0x1602ED0D);

        mm.add(sceSysconCmdSync, 0xF350F666);

        mm.add(sceSysconGetBaryonStatus, 0x86D4CAD8);

        mm.add(sceSysconIsLowBattery, 0x32CFD20F);

        mm.add(sceSysconGetPowerSwitch, 0xEC0DE439);

        mm.add(sceSysconIsAlarmed, 0xEA5B9823);

        mm.add(sceSyscon_driver_E20D08FE, 0xE20D08FE);

        mm.add(sceSysconGetHPConnect, 0xE0DDFE18);

        mm.add(sceSysconGetWlanSwitch, 0xBDA16E46);

        mm.add(sceSysconGetHoldSwitch, 0xF6BB4649);

        mm.add(sceSysconGetUmdSwitch, 0x138747DE);

        mm.add(sceSysconGetHRPowerStatus, 0x71AE1BCE);

        mm.add(sceSysconGetWlanPowerStatus, 0x7016161C);

        mm.add(sceSysconGetLeptonPowerCtrl, 0x48AB0E44);

        mm.add(sceSysconGetMsPowerCtrl, 0x628F2351);

        mm.add(sceSysconGetHRPowerCtrl, 0x3C739F57);

        mm.add(sceSysconGetWlanPowerCtrl, 0xEC37C549);

        mm.add(sceSysconGetTachyonVmePowerCtrl, 0x8DDA4CA6);

        mm.add(sceSysconGetTachyonAwPowerCtrl, 0x52B74B6C);

        mm.add(sceSysconGetTachyonAvcPowerCtrl, 0x1B17D3E3);

        mm.add(sceSysconGetLcdPowerCtrl, 0x5F19C00F);

        mm.add(sceSysconGetWlanLedCtrl, 0xCC04A978);

        mm.add(sceSysconNop, 0xE6B74CB9);

        mm.add(sceSysconGetBaryonVersion, 0x7EC5A957);

        mm.add(sceSysconGetTimeStamp, 0x7BCC5EAE);

        mm.add(sceSysconGetTachyonTemp, 0x3B657A27);

        mm.add(sceSysconGetPowerSupplyStatus, 0xFC32141A);

        mm.add(sceSysconGetWakeUpFactor, 0xF775BC34);

        mm.add(sceSysconGetWakeUpReq, 0xA9AEF39F);

        mm.add(sceSysconReadClock, 0xC4D66C1D);

        mm.add(sceSysconWriteClock, 0xC7634A7A);

        mm.add(sceSysconReadAlarm, 0x7A805EE4);

        mm.add(sceSysconWriteAlarm, 0x6C911742);

        mm.add(sceSyscon_driver_65EB6096, 0x65EB6096);

        mm.add(sceSyscon_driver_EB277C88, 0xEB277C88);

        mm.add(sceSysconSendSetParam, 0x992C22C2);

        mm.add(sceSysconReceiveSetParam, 0x08234E6D);

        mm.add(sceSysconGetTachyonWDTStatus, 0x882F0AAB);

        mm.add(sceSysconCtrlTachyonWDT, 0x2EE82492);

        mm.add(sceSysconResetDevice, 0x8CBC7987);

        mm.add(sceSysconCtrlAnalogXYPolling, 0x00E7B6C2);

        mm.add(sceSysconCtrlHRPower, 0x44439604);

        mm.add(sceSysconPowerStandby, 0xC8439C57);

        mm.add(sceSysconPowerSuspend, 0x91E183CB);

        mm.add(sceSysconGetPommelVersion, 0xE7E87741);

        mm.add(sceSyscon_driver_FB148FB6, 0xFB148FB6);

        mm.add(sceSysconCtrlVoltage, 0x01677F91);

        mm.add(sceSysconCtrlPower, 0xBE27FE66);

        mm.add(sceSysconGetPowerStatus, 0x09721F7F);

        mm.add(sceSysconCtrlLED, 0x18BFBE65);

        mm.add(sceSysconWritePommelReg, 0xD1B501E8);

        mm.add(sceSysconReadPommelReg, 0x3DE38336);

        mm.add(sceSysconGetPowerError, 0x2B9E6A06);

        mm.add(sceSysconCtrlLeptonPower, 0x8A4519F5);

        mm.add(sceSysconCtrlMsPower, 0x99BBB24C);

        mm.add(sceSysconCtrlWlanPower, 0xF0ED3255);

        mm.add(sceSysconCtrlTachyonVmePower, 0x3C6DB1C5);

        mm.add(sceSysconCtrlTachyonAwPower, 0xB2558E37);

        mm.add(sceSysconCtrlTachyonAvcPower, 0xE5E35721);

        mm.add(sceSysconCtrlLcdPower, 0x9478F399);

        mm.add(sceSyscon_driver_806D4D6C, 0x806D4D6C);

        mm.add(sceSyscon_driver_D8471760, 0xD8471760);

        mm.add(sceSysconPermitChargeBattery, 0xEAB13FBE);

        mm.add(sceSysconForbidChargeBattery, 0xC5075828);

        mm.add(sceSysconBatteryNop, 0xE448FD3F);

        mm.add(sceSysconBatteryGetStatusCap, 0x6A53F3F8);

        mm.add(sceSysconBatteryGetTemp, 0x70C10E61);

        mm.add(sceSysconBatteryGetVolt, 0x8BDEBB1E);

        mm.add(sceSysconBatteryGetElec, 0x373EC933);

        mm.add(sceSysconBatteryGetRCap, 0x82861DE2);

        mm.add(sceSysconBatteryGetCap, 0x876CA580);

        mm.add(sceSysconBatteryGetFullCap, 0x71135D7D);

        mm.add(sceSysconBatteryGetIFC, 0x7CBD4522);

        mm.add(sceSysconBatteryGetLimitTime, 0x284FE366);

        mm.add(sceSysconBatteryGetStatus, 0x75025299);

        mm.add(sceSysconBatteryGetCycle, 0xB5105D51);

        mm.add(sceSysconBatteryGetSerial, 0xD5340103);

        mm.add(sceSysconBatteryGetInfo, 0xFA4C4518);

        mm.add(sceSysconBatteryGetTempAD, 0xB71B98A8);

        mm.add(sceSysconBatteryGetVoltAD, 0x87671B18);

        mm.add(sceSysconBatteryGetElecAD, 0x75D22BF8);

        mm.add(sceSysconBatteryGetTotalElec, 0x4C539345);

        mm.add(sceSysconBatteryGetChargeTime, 0x4C0EE2FA);

        mm.add(sceSysconBatteryWriteNVM, 0x1165C864);

        mm.add(sceSysconBatteryReadNVM, 0x68EF0BEF);

        mm.add(sceSysconBatteryAuth, 0x36E28C5F);

        mm.add(sceSysconCtrlTachyonVoltage, 0x08DA3752);

        mm.add(sceSyscon_driver_9C4E3CA9, 0x9C4E3CA9);

        mm.add(sceSysconGetDigitalKey, 0x34C36FF9);

        mm.add(sceSysconMsOn, 0xB8919D79);

        mm.add(sceSysconMsOff, 0x7BE86143);

        mm.add(sceSysconWlanOn, 0x0E8560F9);

        mm.add(sceSysconWlanOff, 0x1B60C8AD);

        mm.add(sceSyscon_driver_E00BFC9E, 0xE00BFC9E);

        mm.add(sceSyscon_driver_C8D97773, 0xC8D97773);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceSysconInit);

        mm.remove(sceSysconEnd);

        mm.remove(sceSysconSuspend);

        mm.remove(sceSysconResume);

        mm.remove(sceSysconSetDebugHandlers);

        mm.remove(sceSysconSetPollingMode);

        mm.remove(sceSysconSetLowBatteryCallback);

        mm.remove(sceSysconSetPowerSwitchCallback);

        mm.remove(sceSysconSetAlarmCallback);

        mm.remove(sceSysconSetAcSupplyCallback);

        mm.remove(sceSysconSetHPConnectCallback);

        mm.remove(sceSysconSetHRPowerCallback);

        mm.remove(sceSysconSetWlanSwitchCallback);

        mm.remove(sceSysconSetWlanPowerCallback);

        mm.remove(sceSysconSetHoldSwitchCallback);

        mm.remove(sceSysconSetUmdSwitchCallback);

        mm.remove(sceSysconCmdExec);

        mm.remove(sceSysconCmdExecAsync);

        mm.remove(sceSysconCmdCancel);

        mm.remove(sceSysconCmdSync);

        mm.remove(sceSysconGetBaryonStatus);

        mm.remove(sceSysconIsLowBattery);

        mm.remove(sceSysconGetPowerSwitch);

        mm.remove(sceSysconIsAlarmed);

        mm.remove(sceSyscon_driver_E20D08FE);

        mm.remove(sceSysconGetHPConnect);

        mm.remove(sceSysconGetWlanSwitch);

        mm.remove(sceSysconGetHoldSwitch);

        mm.remove(sceSysconGetUmdSwitch);

        mm.remove(sceSysconGetHRPowerStatus);

        mm.remove(sceSysconGetWlanPowerStatus);

        mm.remove(sceSysconGetLeptonPowerCtrl);

        mm.remove(sceSysconGetMsPowerCtrl);

        mm.remove(sceSysconGetHRPowerCtrl);

        mm.remove(sceSysconGetWlanPowerCtrl);

        mm.remove(sceSysconGetTachyonVmePowerCtrl);

        mm.remove(sceSysconGetTachyonAwPowerCtrl);

        mm.remove(sceSysconGetTachyonAvcPowerCtrl);

        mm.remove(sceSysconGetLcdPowerCtrl);

        mm.remove(sceSysconGetWlanLedCtrl);

        mm.remove(sceSysconNop);

        mm.remove(sceSysconGetBaryonVersion);

        mm.remove(sceSysconGetTimeStamp);

        mm.remove(sceSysconGetTachyonTemp);

        mm.remove(sceSysconGetPowerSupplyStatus);

        mm.remove(sceSysconGetWakeUpFactor);

        mm.remove(sceSysconGetWakeUpReq);

        mm.remove(sceSysconReadClock);

        mm.remove(sceSysconWriteClock);

        mm.remove(sceSysconReadAlarm);

        mm.remove(sceSysconWriteAlarm);

        mm.remove(sceSyscon_driver_65EB6096);

        mm.remove(sceSyscon_driver_EB277C88);

        mm.remove(sceSysconSendSetParam);

        mm.remove(sceSysconReceiveSetParam);

        mm.remove(sceSysconGetTachyonWDTStatus);

        mm.remove(sceSysconCtrlTachyonWDT);

        mm.remove(sceSysconResetDevice);

        mm.remove(sceSysconCtrlAnalogXYPolling);

        mm.remove(sceSysconCtrlHRPower);

        mm.remove(sceSysconPowerStandby);

        mm.remove(sceSysconPowerSuspend);

        mm.remove(sceSysconGetPommelVersion);

        mm.remove(sceSyscon_driver_FB148FB6);

        mm.remove(sceSysconCtrlVoltage);

        mm.remove(sceSysconCtrlPower);

        mm.remove(sceSysconGetPowerStatus);

        mm.remove(sceSysconCtrlLED);

        mm.remove(sceSysconWritePommelReg);

        mm.remove(sceSysconReadPommelReg);

        mm.remove(sceSysconGetPowerError);

        mm.remove(sceSysconCtrlLeptonPower);

        mm.remove(sceSysconCtrlMsPower);

        mm.remove(sceSysconCtrlWlanPower);

        mm.remove(sceSysconCtrlTachyonVmePower);

        mm.remove(sceSysconCtrlTachyonAwPower);

        mm.remove(sceSysconCtrlTachyonAvcPower);

        mm.remove(sceSysconCtrlLcdPower);

        mm.remove(sceSyscon_driver_806D4D6C);

        mm.remove(sceSyscon_driver_D8471760);

        mm.remove(sceSysconPermitChargeBattery);

        mm.remove(sceSysconForbidChargeBattery);

        mm.remove(sceSysconBatteryNop);

        mm.remove(sceSysconBatteryGetStatusCap);

        mm.remove(sceSysconBatteryGetTemp);

        mm.remove(sceSysconBatteryGetVolt);

        mm.remove(sceSysconBatteryGetElec);

        mm.remove(sceSysconBatteryGetRCap);

        mm.remove(sceSysconBatteryGetCap);

        mm.remove(sceSysconBatteryGetFullCap);

        mm.remove(sceSysconBatteryGetIFC);

        mm.remove(sceSysconBatteryGetLimitTime);

        mm.remove(sceSysconBatteryGetStatus);

        mm.remove(sceSysconBatteryGetCycle);

        mm.remove(sceSysconBatteryGetSerial);

        mm.remove(sceSysconBatteryGetInfo);

        mm.remove(sceSysconBatteryGetTempAD);

        mm.remove(sceSysconBatteryGetVoltAD);

        mm.remove(sceSysconBatteryGetElecAD);

        mm.remove(sceSysconBatteryGetTotalElec);

        mm.remove(sceSysconBatteryGetChargeTime);

        mm.remove(sceSysconBatteryWriteNVM);

        mm.remove(sceSysconBatteryReadNVM);

        mm.remove(sceSysconBatteryAuth);

        mm.remove(sceSysconCtrlTachyonVoltage);

        mm.remove(sceSyscon_driver_9C4E3CA9);

        mm.remove(sceSysconGetDigitalKey);

        mm.remove(sceSysconMsOn);

        mm.remove(sceSysconMsOff);

        mm.remove(sceSysconWlanOn);

        mm.remove(sceSysconWlanOff);

        mm.remove(sceSyscon_driver_E00BFC9E);

        mm.remove(sceSyscon_driver_C8D97773);

    }
    public static final HLEModuleFunction sceSysconInit = new HLEModuleFunction("sceSyscon_driver", "sceSysconInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconInit [0x0A771482]");
        }
    };
    public static final HLEModuleFunction sceSysconEnd = new HLEModuleFunction("sceSyscon_driver", "sceSysconEnd") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconEnd [0x92D16FC7]");
        }
    };
    public static final HLEModuleFunction sceSysconSuspend = new HLEModuleFunction("sceSyscon_driver", "sceSysconSuspend") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSuspend [0x081826B4]");
        }
    };
    public static final HLEModuleFunction sceSysconResume = new HLEModuleFunction("sceSyscon_driver", "sceSysconResume") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconResume [0x56931095]");
        }
    };
    public static final HLEModuleFunction sceSysconSetDebugHandlers = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetDebugHandlers") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetDebugHandlers [0x5EE92F3C]");
        }
    };
    public static final HLEModuleFunction sceSysconSetPollingMode = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetPollingMode") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetPollingMode [0x5FF1D610]");
        }
    };
    public static final HLEModuleFunction sceSysconSetLowBatteryCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetLowBatteryCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetLowBatteryCallback [0xAD555CE5]");
        }
    };
    public static final HLEModuleFunction sceSysconSetPowerSwitchCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetPowerSwitchCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetPowerSwitchCallback [0xF281805D]");
        }
    };
    public static final HLEModuleFunction sceSysconSetAlarmCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetAlarmCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetAlarmCallback [0xA068B3D0]");
        }
    };
    public static final HLEModuleFunction sceSysconSetAcSupplyCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetAcSupplyCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetAcSupplyCallback [0xE540E532]");
        }
    };
    public static final HLEModuleFunction sceSysconSetHPConnectCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetHPConnectCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetHPConnectCallback [0xBBFB70C0]");
        }
    };
    public static final HLEModuleFunction sceSysconSetHRPowerCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetHRPowerCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetHRPowerCallback [0x805180D1]");
        }
    };
    public static final HLEModuleFunction sceSysconSetWlanSwitchCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetWlanSwitchCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetWlanSwitchCallback [0x53072985]");
        }
    };
    public static final HLEModuleFunction sceSysconSetWlanPowerCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetWlanPowerCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetWlanPowerCallback [0xF9193EC3]");
        }
    };
    public static final HLEModuleFunction sceSysconSetHoldSwitchCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetHoldSwitchCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetHoldSwitchCallback [0x7479DB05]");
        }
    };
    public static final HLEModuleFunction sceSysconSetUmdSwitchCallback = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetUmdSwitchCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSetUmdSwitchCallback [0x6848D817]");
        }
    };
    public static final HLEModuleFunction sceSysconCmdExec = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdExec") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCmdExec [0x5B9ACC97]");
        }
    };
    public static final HLEModuleFunction sceSysconCmdExecAsync = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdExecAsync") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCmdExecAsync [0x3AC3D2A4]");
        }
    };
    public static final HLEModuleFunction sceSysconCmdCancel = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdCancel") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCmdCancel [0x1602ED0D]");
        }
    };
    public static final HLEModuleFunction sceSysconCmdSync = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdSync") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCmdSync [0xF350F666]");
        }
    };
    public static final HLEModuleFunction sceSysconGetBaryonStatus = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetBaryonStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetBaryonStatus [0x86D4CAD8]");
        }
    };
    public static final HLEModuleFunction sceSysconIsLowBattery = new HLEModuleFunction("sceSyscon_driver", "sceSysconIsLowBattery") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconIsLowBattery [0x32CFD20F]");
        }
    };
    public static final HLEModuleFunction sceSysconGetPowerSwitch = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerSwitch") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetPowerSwitch [0xEC0DE439]");
        }
    };
    public static final HLEModuleFunction sceSysconIsAlarmed = new HLEModuleFunction("sceSyscon_driver", "sceSysconIsAlarmed") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconIsAlarmed [0xEA5B9823]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_E20D08FE = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_E20D08FE") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_E20D08FE [0xE20D08FE]");
        }
    };
    public static final HLEModuleFunction sceSysconGetHPConnect = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHPConnect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetHPConnect [0xE0DDFE18]");
        }
    };
    public static final HLEModuleFunction sceSysconGetWlanSwitch = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanSwitch") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetWlanSwitch [0xBDA16E46]");
        }
    };
    public static final HLEModuleFunction sceSysconGetHoldSwitch = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHoldSwitch") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetHoldSwitch [0xF6BB4649]");
        }
    };
    public static final HLEModuleFunction sceSysconGetUmdSwitch = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetUmdSwitch") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetUmdSwitch [0x138747DE]");
        }
    };
    public static final HLEModuleFunction sceSysconGetHRPowerStatus = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHRPowerStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetHRPowerStatus [0x71AE1BCE]");
        }
    };
    public static final HLEModuleFunction sceSysconGetWlanPowerStatus = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanPowerStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetWlanPowerStatus [0x7016161C]");
        }
    };
    public static final HLEModuleFunction sceSysconGetLeptonPowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetLeptonPowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetLeptonPowerCtrl [0x48AB0E44]");
        }
    };
    public static final HLEModuleFunction sceSysconGetMsPowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetMsPowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetMsPowerCtrl [0x628F2351]");
        }
    };
    public static final HLEModuleFunction sceSysconGetHRPowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHRPowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetHRPowerCtrl [0x3C739F57]");
        }
    };
    public static final HLEModuleFunction sceSysconGetWlanPowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanPowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetWlanPowerCtrl [0xEC37C549]");
        }
    };
    public static final HLEModuleFunction sceSysconGetTachyonVmePowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonVmePowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetTachyonVmePowerCtrl [0x8DDA4CA6]");
        }
    };
    public static final HLEModuleFunction sceSysconGetTachyonAwPowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonAwPowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetTachyonAwPowerCtrl [0x52B74B6C]");
        }
    };
    public static final HLEModuleFunction sceSysconGetTachyonAvcPowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonAvcPowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetTachyonAvcPowerCtrl [0x1B17D3E3]");
        }
    };
    public static final HLEModuleFunction sceSysconGetLcdPowerCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetLcdPowerCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetLcdPowerCtrl [0x5F19C00F]");
        }
    };
    public static final HLEModuleFunction sceSysconGetWlanLedCtrl = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanLedCtrl") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetWlanLedCtrl [0xCC04A978]");
        }
    };
    public static final HLEModuleFunction sceSysconNop = new HLEModuleFunction("sceSyscon_driver", "sceSysconNop") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconNop [0xE6B74CB9]");
        }
    };
    public static final HLEModuleFunction sceSysconGetBaryonVersion = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetBaryonVersion") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetBaryonVersion [0x7EC5A957]");
        }
    };
    public static final HLEModuleFunction sceSysconGetTimeStamp = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTimeStamp") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetTimeStamp [0x7BCC5EAE]");
        }
    };
    public static final HLEModuleFunction sceSysconGetTachyonTemp = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonTemp") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetTachyonTemp [0x3B657A27]");
        }
    };
    public static final HLEModuleFunction sceSysconGetPowerSupplyStatus = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerSupplyStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetPowerSupplyStatus [0xFC32141A]");
        }
    };
    public static final HLEModuleFunction sceSysconGetWakeUpFactor = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWakeUpFactor") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetWakeUpFactor [0xF775BC34]");
        }
    };
    public static final HLEModuleFunction sceSysconGetWakeUpReq = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWakeUpReq") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetWakeUpReq [0xA9AEF39F]");
        }
    };
    public static final HLEModuleFunction sceSysconReadClock = new HLEModuleFunction("sceSyscon_driver", "sceSysconReadClock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconReadClock [0xC4D66C1D]");
        }
    };
    public static final HLEModuleFunction sceSysconWriteClock = new HLEModuleFunction("sceSyscon_driver", "sceSysconWriteClock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconWriteClock [0xC7634A7A]");
        }
    };
    public static final HLEModuleFunction sceSysconReadAlarm = new HLEModuleFunction("sceSyscon_driver", "sceSysconReadAlarm") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconReadAlarm [0x7A805EE4]");
        }
    };
    public static final HLEModuleFunction sceSysconWriteAlarm = new HLEModuleFunction("sceSyscon_driver", "sceSysconWriteAlarm") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconWriteAlarm [0x6C911742]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_65EB6096 = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_65EB6096") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_65EB6096 [0x65EB6096]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_EB277C88 = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_EB277C88") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_EB277C88 [0xEB277C88]");
        }
    };
    public static final HLEModuleFunction sceSysconSendSetParam = new HLEModuleFunction("sceSyscon_driver", "sceSysconSendSetParam") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconSendSetParam [0x992C22C2]");
        }
    };
    public static final HLEModuleFunction sceSysconReceiveSetParam = new HLEModuleFunction("sceSyscon_driver", "sceSysconReceiveSetParam") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconReceiveSetParam [0x08234E6D]");
        }
    };
    public static final HLEModuleFunction sceSysconGetTachyonWDTStatus = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonWDTStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetTachyonWDTStatus [0x882F0AAB]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlTachyonWDT = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonWDT") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlTachyonWDT [0x2EE82492]");
        }
    };
    public static final HLEModuleFunction sceSysconResetDevice = new HLEModuleFunction("sceSyscon_driver", "sceSysconResetDevice") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconResetDevice [0x8CBC7987]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlAnalogXYPolling = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlAnalogXYPolling") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlAnalogXYPolling [0x00E7B6C2]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlHRPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlHRPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlHRPower [0x44439604]");
        }
    };
    public static final HLEModuleFunction sceSysconPowerStandby = new HLEModuleFunction("sceSyscon_driver", "sceSysconPowerStandby") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconPowerStandby [0xC8439C57]");
        }
    };
    public static final HLEModuleFunction sceSysconPowerSuspend = new HLEModuleFunction("sceSyscon_driver", "sceSysconPowerSuspend") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconPowerSuspend [0x91E183CB]");
        }
    };
    public static final HLEModuleFunction sceSysconGetPommelVersion = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPommelVersion") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetPommelVersion [0xE7E87741]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_FB148FB6 = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_FB148FB6") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_FB148FB6 [0xFB148FB6]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlVoltage = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlVoltage") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlVoltage [0x01677F91]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlPower [0xBE27FE66]");
        }
    };
    public static final HLEModuleFunction sceSysconGetPowerStatus = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetPowerStatus [0x09721F7F]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlLED = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlLED") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlLED [0x18BFBE65]");
        }
    };
    public static final HLEModuleFunction sceSysconWritePommelReg = new HLEModuleFunction("sceSyscon_driver", "sceSysconWritePommelReg") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconWritePommelReg [0xD1B501E8]");
        }
    };
    public static final HLEModuleFunction sceSysconReadPommelReg = new HLEModuleFunction("sceSyscon_driver", "sceSysconReadPommelReg") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconReadPommelReg [0x3DE38336]");
        }
    };
    public static final HLEModuleFunction sceSysconGetPowerError = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerError") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetPowerError [0x2B9E6A06]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlLeptonPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlLeptonPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlLeptonPower [0x8A4519F5]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlMsPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlMsPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlMsPower [0x99BBB24C]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlWlanPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlWlanPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlWlanPower [0xF0ED3255]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlTachyonVmePower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonVmePower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlTachyonVmePower [0x3C6DB1C5]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlTachyonAwPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonAwPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlTachyonAwPower [0xB2558E37]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlTachyonAvcPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonAvcPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlTachyonAvcPower [0xE5E35721]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlLcdPower = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlLcdPower") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlLcdPower [0x9478F399]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_806D4D6C = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_806D4D6C") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_806D4D6C [0x806D4D6C]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_D8471760 = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_D8471760") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_D8471760 [0xD8471760]");
        }
    };
    public static final HLEModuleFunction sceSysconPermitChargeBattery = new HLEModuleFunction("sceSyscon_driver", "sceSysconPermitChargeBattery") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconPermitChargeBattery [0xEAB13FBE]");
        }
    };
    public static final HLEModuleFunction sceSysconForbidChargeBattery = new HLEModuleFunction("sceSyscon_driver", "sceSysconForbidChargeBattery") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconForbidChargeBattery [0xC5075828]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryNop = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryNop") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryNop [0xE448FD3F]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetStatusCap = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetStatusCap") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetStatusCap [0x6A53F3F8]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetTemp = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetTemp") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetTemp [0x70C10E61]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetVolt = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetVolt") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetVolt [0x8BDEBB1E]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetElec = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetElec") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetElec [0x373EC933]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetRCap = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetRCap") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetRCap [0x82861DE2]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetCap = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetCap") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetCap [0x876CA580]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetFullCap = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetFullCap") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetFullCap [0x71135D7D]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetIFC = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetIFC") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetIFC [0x7CBD4522]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetLimitTime = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetLimitTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetLimitTime [0x284FE366]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetStatus = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetStatus [0x75025299]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetCycle = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetCycle") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetCycle [0xB5105D51]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetSerial = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetSerial") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetSerial [0xD5340103]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetInfo = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetInfo") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetInfo [0xFA4C4518]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetTempAD = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetTempAD") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetTempAD [0xB71B98A8]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetVoltAD = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetVoltAD") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetVoltAD [0x87671B18]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetElecAD = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetElecAD") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetElecAD [0x75D22BF8]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetTotalElec = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetTotalElec") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetTotalElec [0x4C539345]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryGetChargeTime = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetChargeTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryGetChargeTime [0x4C0EE2FA]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryWriteNVM = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryWriteNVM") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryWriteNVM [0x1165C864]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryReadNVM = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryReadNVM") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryReadNVM [0x68EF0BEF]");
        }
    };
    public static final HLEModuleFunction sceSysconBatteryAuth = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryAuth") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconBatteryAuth [0x36E28C5F]");
        }
    };
    public static final HLEModuleFunction sceSysconCtrlTachyonVoltage = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonVoltage") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconCtrlTachyonVoltage [0x08DA3752]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_9C4E3CA9 = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_9C4E3CA9") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_9C4E3CA9 [0x9C4E3CA9]");
        }
    };
    public static final HLEModuleFunction sceSysconGetDigitalKey = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetDigitalKey") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconGetDigitalKey [0x34C36FF9]");
        }
    };
    public static final HLEModuleFunction sceSysconMsOn = new HLEModuleFunction("sceSyscon_driver", "sceSysconMsOn") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconMsOn [0xB8919D79]");
        }
    };
    public static final HLEModuleFunction sceSysconMsOff = new HLEModuleFunction("sceSyscon_driver", "sceSysconMsOff") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconMsOff [0x7BE86143]");
        }
    };
    public static final HLEModuleFunction sceSysconWlanOn = new HLEModuleFunction("sceSyscon_driver", "sceSysconWlanOn") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconWlanOn [0x0E8560F9]");
        }
    };
    public static final HLEModuleFunction sceSysconWlanOff = new HLEModuleFunction("sceSyscon_driver", "sceSysconWlanOff") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysconWlanOff [0x1B60C8AD]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_E00BFC9E = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_E00BFC9E") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_E00BFC9E [0xE00BFC9E]");
        }
    };
    public static final HLEModuleFunction sceSyscon_driver_C8D97773 = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_C8D97773") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSyscon_driver_C8D97773 [0xC8D97773]");
        }
    };
};
