/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class sceHprm_driver implements HLEModule {

    @Override
    public final String getName() {
        return "sceHprm_driver";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceHprmInit, 0x1C5BC5A0);

        mm.add(sceHprmEnd, 0x588845DA);

        mm.add(sceHprmSuspend, 0x526BB7F4);

        mm.add(sceHprmResume, 0x2C7B8B05);

        mm.add(sceHprmSetConnectCallback, 0xD22913DB);

        mm.add(sceHprmRegisterCallback, 0xC7154136);

        mm.add(sceHprmUnregisterCallback, 0x444ED0B7);

        mm.add(sceHprm_driver_71B5FB67, 0x71B5FB67);

        mm.add(sceHprmIsRemoteExist, 0x208DB1BD);

        mm.add(sceHprmIsHeadphoneExist, 0x7E69EDA4);

        mm.add(sceHprmIsMicrophoneExist, 0x219C58F1);

        mm.add(sceHprmReset, 0x4D1E622C);

        mm.add(sceHprmGetInternalState, 0x7B038374);

        mm.add(sceHprm_driver_F04591FA, 0xF04591FA);

        mm.add(sceHprm_driver_971AE8FB, 0x971AE8FB);

        mm.add(sceHprmGetModel, 0xBAD0828E);

        mm.add(sceHprmPeekCurrentKey, 0x1910B327);

        mm.add(sceHprmPeekLatch, 0x2BCEC83E);

        mm.add(sceHprmReadLatch, 0x40D2F9F0);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceHprmInit);

        mm.remove(sceHprmEnd);

        mm.remove(sceHprmSuspend);

        mm.remove(sceHprmResume);

        mm.remove(sceHprmSetConnectCallback);

        mm.remove(sceHprmRegisterCallback);

        mm.remove(sceHprmUnregisterCallback);

        mm.remove(sceHprm_driver_71B5FB67);

        mm.remove(sceHprmIsRemoteExist);

        mm.remove(sceHprmIsHeadphoneExist);

        mm.remove(sceHprmIsMicrophoneExist);

        mm.remove(sceHprmReset);

        mm.remove(sceHprmGetInternalState);

        mm.remove(sceHprm_driver_F04591FA);

        mm.remove(sceHprm_driver_971AE8FB);

        mm.remove(sceHprmGetModel);

        mm.remove(sceHprmPeekCurrentKey);

        mm.remove(sceHprmPeekLatch);

        mm.remove(sceHprmReadLatch);

    }
    public static final HLEModuleFunction sceHprmInit = new HLEModuleFunction("sceHprm_driver", "sceHprmInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmInit [0x1C5BC5A0]");
        }
    };
    public static final HLEModuleFunction sceHprmEnd = new HLEModuleFunction("sceHprm_driver", "sceHprmEnd") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmEnd [0x588845DA]");
        }
    };
    public static final HLEModuleFunction sceHprmSuspend = new HLEModuleFunction("sceHprm_driver", "sceHprmSuspend") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmSuspend [0x526BB7F4]");
        }
    };
    public static final HLEModuleFunction sceHprmResume = new HLEModuleFunction("sceHprm_driver", "sceHprmResume") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmResume [0x2C7B8B05]");
        }
    };
    public static final HLEModuleFunction sceHprmSetConnectCallback = new HLEModuleFunction("sceHprm_driver", "sceHprmSetConnectCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmSetConnectCallback [0xD22913DB]");
        }
    };
    public static final HLEModuleFunction sceHprmRegisterCallback = new HLEModuleFunction("sceHprm_driver", "sceHprmRegisterCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmRegisterCallback [0xC7154136]");
        }
    };
    public static final HLEModuleFunction sceHprmUnregisterCallback = new HLEModuleFunction("sceHprm_driver", "sceHprmUnregisterCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmUnregisterCallback [0x444ED0B7]");
        }
    };
    public static final HLEModuleFunction sceHprm_driver_71B5FB67 = new HLEModuleFunction("sceHprm_driver", "sceHprm_driver_71B5FB67") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprm_driver_71B5FB67 [0x71B5FB67]");
        }
    };
    public static final HLEModuleFunction sceHprmIsRemoteExist = new HLEModuleFunction("sceHprm_driver", "sceHprmIsRemoteExist") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmIsRemoteExist [0x208DB1BD]");
        }
    };
    public static final HLEModuleFunction sceHprmIsHeadphoneExist = new HLEModuleFunction("sceHprm_driver", "sceHprmIsHeadphoneExist") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmIsHeadphoneExist [0x7E69EDA4]");
        }
    };
    public static final HLEModuleFunction sceHprmIsMicrophoneExist = new HLEModuleFunction("sceHprm_driver", "sceHprmIsMicrophoneExist") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmIsMicrophoneExist [0x219C58F1]");
        }
    };
    public static final HLEModuleFunction sceHprmReset = new HLEModuleFunction("sceHprm_driver", "sceHprmReset") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmReset [0x4D1E622C]");
        }
    };
    public static final HLEModuleFunction sceHprmGetInternalState = new HLEModuleFunction("sceHprm_driver", "sceHprmGetInternalState") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmGetInternalState [0x7B038374]");
        }
    };
    public static final HLEModuleFunction sceHprm_driver_F04591FA = new HLEModuleFunction("sceHprm_driver", "sceHprm_driver_F04591FA") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprm_driver_F04591FA [0xF04591FA]");
        }
    };
    public static final HLEModuleFunction sceHprm_driver_971AE8FB = new HLEModuleFunction("sceHprm_driver", "sceHprm_driver_971AE8FB") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprm_driver_971AE8FB [0x971AE8FB]");
        }
    };
    public static final HLEModuleFunction sceHprmGetModel = new HLEModuleFunction("sceHprm_driver", "sceHprmGetModel") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmGetModel [0xBAD0828E]");
        }
    };
    public static final HLEModuleFunction sceHprmPeekCurrentKey = new HLEModuleFunction("sceHprm_driver", "sceHprmPeekCurrentKey") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmPeekCurrentKey [0x1910B327]");
        }
    };
    public static final HLEModuleFunction sceHprmPeekLatch = new HLEModuleFunction("sceHprm_driver", "sceHprmPeekLatch") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmPeekLatch [0x2BCEC83E]");
        }
    };
    public static final HLEModuleFunction sceHprmReadLatch = new HLEModuleFunction("sceHprm_driver", "sceHprmReadLatch") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceHprmReadLatch [0x40D2F9F0]");
        }
    };
};
