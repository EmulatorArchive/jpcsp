/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class LoadCoreForKernel implements HLEModule {

    @Override
    public final String getName() {
        return "LoadCoreForKernel";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceKernelCheckPspConfig, 0xACE23476);

        mm.add(sceKernelCheckExecFile, 0x7BE1421C);

        mm.add(sceKernelProbeExecutableObject, 0xBF983EF2);

        mm.add(sceKernelLoadExecutableObject, 0x7068E6BA);

        mm.add(sceKernelApplyElfRelSection, 0xB4D6FECC);

        mm.add(sceKernelApplyPspRelSection, 0x54AB2675);

        mm.add(sceKernelDcacheWBinvAll, 0x2952F5AC);

        mm.add(sceKernelIcacheClearAll, 0xD8779AC6);

        mm.add(sceKernelRegisterLibrary, 0x99A695F0);

        mm.add(sceKernelRegisterLibraryForUser, 0x5873A31F);

        mm.add(sceKernelReleaseLibrary, 0x0B464512);

        mm.add(sceKernelCanReleaseLibrary, 0x9BAF90F6);

        mm.add(sceKernelLinkLibraryEntries, 0x0E760DBA);

        mm.add(sceKernelLinkLibraryEntriesForUser, 0x0DE1F600);

        mm.add(sceKernelUnLinkLibraryEntries, 0xDA1B09AA);

        mm.add(sceKernelQueryLoadCoreCB, 0xC99DD47A);

        mm.add(sceKernelSetBootCallbackLevel, 0x616FCCCD);

        mm.add(sceKernelGetModuleFromUID, 0x52A86C21);

        mm.add(sceKernelCreateModule, 0xCD0F3BAC);

        mm.add(sceKernelDeleteModule, 0x6B2371C2);

        mm.add(sceKernelAssignModule, 0x8D8A8ACE);

        mm.add(sceKernelCreateAssignModule, 0xAFF947D4);

        mm.add(sceKernelRegisterModule, 0xAE7C6E76);

        mm.add(sceKernelReleaseModule, 0x74CF001A);

        mm.add(sceKernelFindModuleByName, 0xCF8A41B1);

        mm.add(sceKernelFindModuleByAddress, 0xFB8AE27D);

        mm.add(sceKernelFindModuleByUID, 0xCCE4A157);

        mm.add(sceKernelGetModuleListWithAlloc, 0x929B5C69);

        mm.add(sceKernelGetModuleIdListForKernel, 0x05D915DB);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceKernelCheckPspConfig);

        mm.remove(sceKernelCheckExecFile);

        mm.remove(sceKernelProbeExecutableObject);

        mm.remove(sceKernelLoadExecutableObject);

        mm.remove(sceKernelApplyElfRelSection);

        mm.remove(sceKernelApplyPspRelSection);

        mm.remove(sceKernelDcacheWBinvAll);

        mm.remove(sceKernelIcacheClearAll);

        mm.remove(sceKernelRegisterLibrary);

        mm.remove(sceKernelRegisterLibraryForUser);

        mm.remove(sceKernelReleaseLibrary);

        mm.remove(sceKernelCanReleaseLibrary);

        mm.remove(sceKernelLinkLibraryEntries);

        mm.remove(sceKernelLinkLibraryEntriesForUser);

        mm.remove(sceKernelUnLinkLibraryEntries);

        mm.remove(sceKernelQueryLoadCoreCB);

        mm.remove(sceKernelSetBootCallbackLevel);

        mm.remove(sceKernelGetModuleFromUID);

        mm.remove(sceKernelCreateModule);

        mm.remove(sceKernelDeleteModule);

        mm.remove(sceKernelAssignModule);

        mm.remove(sceKernelCreateAssignModule);

        mm.remove(sceKernelRegisterModule);

        mm.remove(sceKernelReleaseModule);

        mm.remove(sceKernelFindModuleByName);

        mm.remove(sceKernelFindModuleByAddress);

        mm.remove(sceKernelFindModuleByUID);

        mm.remove(sceKernelGetModuleListWithAlloc);

        mm.remove(sceKernelGetModuleIdListForKernel);

    }
    public static final HLEModuleFunction sceKernelCheckPspConfig = new HLEModuleFunction("LoadCoreForKernel", "sceKernelCheckPspConfig") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelCheckPspConfig [0xACE23476]");
        }
    };
    public static final HLEModuleFunction sceKernelCheckExecFile = new HLEModuleFunction("LoadCoreForKernel", "sceKernelCheckExecFile") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelCheckExecFile [0x7BE1421C]");
        }
    };
    public static final HLEModuleFunction sceKernelProbeExecutableObject = new HLEModuleFunction("LoadCoreForKernel", "sceKernelProbeExecutableObject") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelProbeExecutableObject [0xBF983EF2]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecutableObject = new HLEModuleFunction("LoadCoreForKernel", "sceKernelLoadExecutableObject") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecutableObject [0x7068E6BA]");
        }
    };
    public static final HLEModuleFunction sceKernelApplyElfRelSection = new HLEModuleFunction("LoadCoreForKernel", "sceKernelApplyElfRelSection") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelApplyElfRelSection [0xB4D6FECC]");
        }
    };
    public static final HLEModuleFunction sceKernelApplyPspRelSection = new HLEModuleFunction("LoadCoreForKernel", "sceKernelApplyPspRelSection") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelApplyPspRelSection [0x54AB2675]");
        }
    };
    public static final HLEModuleFunction sceKernelDcacheWBinvAll = new HLEModuleFunction("LoadCoreForKernel", "sceKernelDcacheWBinvAll") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDcacheWBinvAll [0x2952F5AC]");
        }
    };
    public static final HLEModuleFunction sceKernelIcacheClearAll = new HLEModuleFunction("LoadCoreForKernel", "sceKernelIcacheClearAll") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelIcacheClearAll [0xD8779AC6]");
        }
    };
    public static final HLEModuleFunction sceKernelRegisterLibrary = new HLEModuleFunction("LoadCoreForKernel", "sceKernelRegisterLibrary") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterLibrary [0x99A695F0]");
        }
    };
    public static final HLEModuleFunction sceKernelRegisterLibraryForUser = new HLEModuleFunction("LoadCoreForKernel", "sceKernelRegisterLibraryForUser") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterLibraryForUser [0x5873A31F]");
        }
    };
    public static final HLEModuleFunction sceKernelReleaseLibrary = new HLEModuleFunction("LoadCoreForKernel", "sceKernelReleaseLibrary") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelReleaseLibrary [0x0B464512]");
        }
    };
    public static final HLEModuleFunction sceKernelCanReleaseLibrary = new HLEModuleFunction("LoadCoreForKernel", "sceKernelCanReleaseLibrary") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelCanReleaseLibrary [0x9BAF90F6]");
        }
    };
    public static final HLEModuleFunction sceKernelLinkLibraryEntries = new HLEModuleFunction("LoadCoreForKernel", "sceKernelLinkLibraryEntries") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLinkLibraryEntries [0x0E760DBA]");
        }
    };
    public static final HLEModuleFunction sceKernelLinkLibraryEntriesForUser = new HLEModuleFunction("LoadCoreForKernel", "sceKernelLinkLibraryEntriesForUser") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLinkLibraryEntriesForUser [0x0DE1F600]");
        }
    };
    public static final HLEModuleFunction sceKernelUnLinkLibraryEntries = new HLEModuleFunction("LoadCoreForKernel", "sceKernelUnLinkLibraryEntries") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUnLinkLibraryEntries [0xDA1B09AA]");
        }
    };
    public static final HLEModuleFunction sceKernelQueryLoadCoreCB = new HLEModuleFunction("LoadCoreForKernel", "sceKernelQueryLoadCoreCB") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelQueryLoadCoreCB [0xC99DD47A]");
        }
    };
    public static final HLEModuleFunction sceKernelSetBootCallbackLevel = new HLEModuleFunction("LoadCoreForKernel", "sceKernelSetBootCallbackLevel") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelSetBootCallbackLevel [0x616FCCCD]");
        }
    };
    public static final HLEModuleFunction sceKernelGetModuleFromUID = new HLEModuleFunction("LoadCoreForKernel", "sceKernelGetModuleFromUID") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGetModuleFromUID [0x52A86C21]");
        }
    };
    public static final HLEModuleFunction sceKernelCreateModule = new HLEModuleFunction("LoadCoreForKernel", "sceKernelCreateModule") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelCreateModule [0xCD0F3BAC]");
        }
    };
    public static final HLEModuleFunction sceKernelDeleteModule = new HLEModuleFunction("LoadCoreForKernel", "sceKernelDeleteModule") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDeleteModule [0x6B2371C2]");
        }
    };
    public static final HLEModuleFunction sceKernelAssignModule = new HLEModuleFunction("LoadCoreForKernel", "sceKernelAssignModule") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelAssignModule [0x8D8A8ACE]");
        }
    };
    public static final HLEModuleFunction sceKernelCreateAssignModule = new HLEModuleFunction("LoadCoreForKernel", "sceKernelCreateAssignModule") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelCreateAssignModule [0xAFF947D4]");
        }
    };
    public static final HLEModuleFunction sceKernelRegisterModule = new HLEModuleFunction("LoadCoreForKernel", "sceKernelRegisterModule") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterModule [0xAE7C6E76]");
        }
    };
    public static final HLEModuleFunction sceKernelReleaseModule = new HLEModuleFunction("LoadCoreForKernel", "sceKernelReleaseModule") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelReleaseModule [0x74CF001A]");
        }
    };
    public static final HLEModuleFunction sceKernelFindModuleByName = new HLEModuleFunction("LoadCoreForKernel", "sceKernelFindModuleByName") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelFindModuleByName [0xCF8A41B1]");
        }
    };
    public static final HLEModuleFunction sceKernelFindModuleByAddress = new HLEModuleFunction("LoadCoreForKernel", "sceKernelFindModuleByAddress") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelFindModuleByAddress [0xFB8AE27D]");
        }
    };
    public static final HLEModuleFunction sceKernelFindModuleByUID = new HLEModuleFunction("LoadCoreForKernel", "sceKernelFindModuleByUID") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelFindModuleByUID [0xCCE4A157]");
        }
    };
    public static final HLEModuleFunction sceKernelGetModuleListWithAlloc = new HLEModuleFunction("LoadCoreForKernel", "sceKernelGetModuleListWithAlloc") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGetModuleListWithAlloc [0x929B5C69]");
        }
    };
    public static final HLEModuleFunction sceKernelGetModuleIdListForKernel = new HLEModuleFunction("LoadCoreForKernel", "sceKernelGetModuleIdListForKernel") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelGetModuleIdListForKernel [0x05D915DB]");
        }
    };
};
