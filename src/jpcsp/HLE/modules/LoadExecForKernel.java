/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class LoadExecForKernel implements HLEModule {

    @Override
    public final String getName() {
        return "LoadExecForKernel";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceKernelLoadExec, 0xBD2F1094);

        mm.add(sceKernelExitGameWithStatus, 0x2AC9954B);

        mm.add(sceKernelExitGame, 0x05572A5F);

        mm.add(sceKernelLoadExecVSHFromHost, 0xAC085B9E);

        mm.add(sceKernelLoadExecVSHDisc, 0x1B97BDB3);

        mm.add(sceKernelLoadExecVSHDiscUpdater, 0x821BE114);

        mm.add(sceKernelLoadExecVSHDiscDebug, 0x7B7C47EF);

        mm.add(sceKernelLoadExecBufferVSHUsbWlan, 0x015DA036);

        mm.add(sceKernelLoadExecBufferVSHUsbWlanDebug, 0x4F41E75E);

        mm.add(sceKernelLoadExecVSHMs1, 0x31DF42BF);

        mm.add(sceKernelLoadExecVSHMs2, 0x28D0D249);

        mm.add(sceKernelLoadExecVSHMs3, 0x70901231);

        mm.add(sceKernelExitVSHVSH, 0xA3D5E142);

        mm.add(sceKernelLoadExecBufferVSHPlain, 0x62C459E1);

        mm.add(sceKernelLoadExecBufferVSHFromHost, 0x918782E8);

        mm.add(sceKernelLoadExecBufferPlain0, 0xBB28E9B7);

        mm.add(sceKernelLoadExecBufferPlain, 0x71A1D738);

        mm.add(sceKernelLoadExecFromHost, 0x4D5C75BE);

        mm.add(sceKernelRegisterExitCallback, 0x4AC57943);

        mm.add(sceKernelUnregisterExitCallback, 0xD9739B89);

        mm.add(sceKernelCheckExitCallback, 0x659188E1);

        mm.add(sceKernelInvokeExitCallback, 0x62A27008);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceKernelLoadExec);

        mm.remove(sceKernelExitGameWithStatus);

        mm.remove(sceKernelExitGame);

        mm.remove(sceKernelLoadExecVSHFromHost);

        mm.remove(sceKernelLoadExecVSHDisc);

        mm.remove(sceKernelLoadExecVSHDiscUpdater);

        mm.remove(sceKernelLoadExecVSHDiscDebug);

        mm.remove(sceKernelLoadExecBufferVSHUsbWlan);

        mm.remove(sceKernelLoadExecBufferVSHUsbWlanDebug);

        mm.remove(sceKernelLoadExecVSHMs1);

        mm.remove(sceKernelLoadExecVSHMs2);

        mm.remove(sceKernelLoadExecVSHMs3);

        mm.remove(sceKernelExitVSHVSH);

        mm.remove(sceKernelLoadExecBufferVSHPlain);

        mm.remove(sceKernelLoadExecBufferVSHFromHost);

        mm.remove(sceKernelLoadExecBufferPlain0);

        mm.remove(sceKernelLoadExecBufferPlain);

        mm.remove(sceKernelLoadExecFromHost);

        mm.remove(sceKernelRegisterExitCallback);

        mm.remove(sceKernelUnregisterExitCallback);

        mm.remove(sceKernelCheckExitCallback);

        mm.remove(sceKernelInvokeExitCallback);

    }
    public static final HLEModuleFunction sceKernelLoadExec = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExec") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExec [0xBD2F1094]");
        }
    };
    public static final HLEModuleFunction sceKernelExitGameWithStatus = new HLEModuleFunction("LoadExecForKernel", "sceKernelExitGameWithStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelExitGameWithStatus [0x2AC9954B]");
        }
    };
    public static final HLEModuleFunction sceKernelExitGame = new HLEModuleFunction("LoadExecForKernel", "sceKernelExitGame") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelExitGame [0x05572A5F]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecVSHFromHost = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecVSHFromHost") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecVSHFromHost [0xAC085B9E]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecVSHDisc = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecVSHDisc") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecVSHDisc [0x1B97BDB3]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecVSHDiscUpdater = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecVSHDiscUpdater") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecVSHDiscUpdater [0x821BE114]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecVSHDiscDebug = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecVSHDiscDebug") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecVSHDiscDebug [0x7B7C47EF]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecBufferVSHUsbWlan = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecBufferVSHUsbWlan") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecBufferVSHUsbWlan [0x015DA036]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecBufferVSHUsbWlanDebug = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecBufferVSHUsbWlanDebug") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecBufferVSHUsbWlanDebug [0x4F41E75E]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecVSHMs1 = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecVSHMs1") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecVSHMs1 [0x31DF42BF]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecVSHMs2 = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecVSHMs2") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecVSHMs2 [0x28D0D249]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecVSHMs3 = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecVSHMs3") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecVSHMs3 [0x70901231]");
        }
    };
    public static final HLEModuleFunction sceKernelExitVSHVSH = new HLEModuleFunction("LoadExecForKernel", "sceKernelExitVSHVSH") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelExitVSHVSH [0xA3D5E142]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecBufferVSHPlain = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecBufferVSHPlain") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecBufferVSHPlain [0x62C459E1]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecBufferVSHFromHost = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecBufferVSHFromHost") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecBufferVSHFromHost [0x918782E8]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecBufferPlain0 = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecBufferPlain0") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecBufferPlain0 [0xBB28E9B7]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecBufferPlain = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecBufferPlain") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecBufferPlain [0x71A1D738]");
        }
    };
    public static final HLEModuleFunction sceKernelLoadExecFromHost = new HLEModuleFunction("LoadExecForKernel", "sceKernelLoadExecFromHost") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelLoadExecFromHost [0x4D5C75BE]");
        }
    };
    public static final HLEModuleFunction sceKernelRegisterExitCallback = new HLEModuleFunction("LoadExecForKernel", "sceKernelRegisterExitCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterExitCallback [0x4AC57943]");
        }
    };
    public static final HLEModuleFunction sceKernelUnregisterExitCallback = new HLEModuleFunction("LoadExecForKernel", "sceKernelUnregisterExitCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelUnregisterExitCallback [0xD9739B89]");
        }
    };
    public static final HLEModuleFunction sceKernelCheckExitCallback = new HLEModuleFunction("LoadExecForKernel", "sceKernelCheckExitCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelCheckExitCallback [0x659188E1]");
        }
    };
    public static final HLEModuleFunction sceKernelInvokeExitCallback = new HLEModuleFunction("LoadExecForKernel", "sceKernelInvokeExitCallback") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelInvokeExitCallback [0x62A27008]");
        }
    };
};
