/*
 * MemoryViewer.java
 *
 * Created on 28 Ιούλιος 2008, 7:19 μμ
 */

package jpcsp.Debugger;

import jpcsp.Memory;
import jpcsp.Processor;

/**
 *
 * @author  George
 */
public class MemoryViewer extends javax.swing.JInternalFrame {
    Processor cpu;
    int startaddress; 
    /** Creates new form MemoryViewer */
    public MemoryViewer(Processor c) {
        this.cpu = c;
        startaddress=c.pc;
        initComponents();
        
        RefreshMemory();
    }
    public void RefreshMemory()
    {
      for(int y=0; y<21; y++)//21 lines
      {
            int memread = Memory.get_instance().read32((int) startaddress);
            //if (memread == 0) {
            //    memoryview.append(String.format("%08x : 00 ", startaddress));
            //    if(y !=20) memoryview.append("\n");
               
           // } else {
                //int memread8 = Memory.get_instance().read8(startaddress);
                memoryview.append(String.format("%08x : %02x %02x", startaddress,
                                               Memory.get_instance().read8(startaddress),
                                               Memory.get_instance().read8(startaddress+1)
                                               )
                                               );
                if(y !=20) memoryview.append("\n");
           // }
            startaddress +=16;
          
      }
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        memoryview = new javax.swing.JTextArea();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Memory Viewer");

        memoryview.setColumns(20);
        memoryview.setEditable(false);
        memoryview.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        memoryview.setRows(5);
        jScrollPane1.setViewportView(memoryview);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea memoryview;
    // End of variables declaration//GEN-END:variables

}
