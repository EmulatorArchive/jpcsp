/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class sceAudio_driver implements HLEModule {

    @Override
    public final String getName() {
        return "sceAudio_driver";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceAudioInit, 0x80F1F7E0);

        mm.add(sceAudioEnd, 0x210567F7);

        mm.add(sceAudioSetFrequency, 0xA2BEAA6C);

        mm.add(sceAudioLoopbackTest, 0xB61595C0);

        mm.add(sceAudioSetVolumeOffset, 0x927AC32B);

        mm.add(sceAudioOutput, 0x8C1009B2);

        mm.add(sceAudioOutputBlocking, 0x136CAF51);

        mm.add(sceAudioOutputPanned, 0xE2D56B2D);

        mm.add(sceAudioOutputPannedBlocking, 0x13F592BC);

        mm.add(sceAudioChReserve, 0x5EC81C55);

        mm.add(sceAudioOneshotOutput, 0x41EFADE7);

        mm.add(sceAudioChRelease, 0x6FC46853);

        mm.add(sceAudioGetChannelRestLength, 0xB011922F);

        mm.add(sceAudioSetChannelDataLen, 0xCB2E439E);

        mm.add(sceAudioChangeChannelConfig, 0x95FD0C2D);

        mm.add(sceAudioChangeChannelVolume, 0xB7E1D8E7);

        mm.add(sceAudioSRCChReserve, 0x38553111);

        mm.add(sceAudioSRCChRelease, 0x5C37C0AE);

        mm.add(sceAudioSRCOutputBlocking, 0xE0727056);

        mm.add(sceAudioInputBlocking, 0x086E5895);

        mm.add(sceAudioInput, 0x6D4BEC68);

        mm.add(sceAudioGetInputLength, 0xA708C6A6);

        mm.add(sceAudioWaitInputEnd, 0x87B2E651);

        mm.add(sceAudioInputInit, 0x7DE61688);

        mm.add(sceAudioInputInitEx, 0xE926D3FB);

        mm.add(sceAudioPollInputEnd, 0xA633048E);

        mm.add(sceAudioGetChannelRestLen, 0xE9D97901);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceAudioInit);

        mm.remove(sceAudioEnd);

        mm.remove(sceAudioSetFrequency);

        mm.remove(sceAudioLoopbackTest);

        mm.remove(sceAudioSetVolumeOffset);

        mm.remove(sceAudioOutput);

        mm.remove(sceAudioOutputBlocking);

        mm.remove(sceAudioOutputPanned);

        mm.remove(sceAudioOutputPannedBlocking);

        mm.remove(sceAudioChReserve);

        mm.remove(sceAudioOneshotOutput);

        mm.remove(sceAudioChRelease);

        mm.remove(sceAudioGetChannelRestLength);

        mm.remove(sceAudioSetChannelDataLen);

        mm.remove(sceAudioChangeChannelConfig);

        mm.remove(sceAudioChangeChannelVolume);

        mm.remove(sceAudioSRCChReserve);

        mm.remove(sceAudioSRCChRelease);

        mm.remove(sceAudioSRCOutputBlocking);

        mm.remove(sceAudioInputBlocking);

        mm.remove(sceAudioInput);

        mm.remove(sceAudioGetInputLength);

        mm.remove(sceAudioWaitInputEnd);

        mm.remove(sceAudioInputInit);

        mm.remove(sceAudioInputInitEx);

        mm.remove(sceAudioPollInputEnd);

        mm.remove(sceAudioGetChannelRestLen);

    }
    public static final HLEModuleFunction sceAudioInit = new HLEModuleFunction("sceAudio_driver", "sceAudioInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioInit [0x80F1F7E0]");
        }
    };
    public static final HLEModuleFunction sceAudioEnd = new HLEModuleFunction("sceAudio_driver", "sceAudioEnd") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioEnd [0x210567F7]");
        }
    };
    public static final HLEModuleFunction sceAudioSetFrequency = new HLEModuleFunction("sceAudio_driver", "sceAudioSetFrequency") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioSetFrequency [0xA2BEAA6C]");
        }
    };
    public static final HLEModuleFunction sceAudioLoopbackTest = new HLEModuleFunction("sceAudio_driver", "sceAudioLoopbackTest") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioLoopbackTest [0xB61595C0]");
        }
    };
    public static final HLEModuleFunction sceAudioSetVolumeOffset = new HLEModuleFunction("sceAudio_driver", "sceAudioSetVolumeOffset") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioSetVolumeOffset [0x927AC32B]");
        }
    };
    public static final HLEModuleFunction sceAudioOutput = new HLEModuleFunction("sceAudio_driver", "sceAudioOutput") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioOutput [0x8C1009B2]");
        }
    };
    public static final HLEModuleFunction sceAudioOutputBlocking = new HLEModuleFunction("sceAudio_driver", "sceAudioOutputBlocking") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioOutputBlocking [0x136CAF51]");
        }
    };
    public static final HLEModuleFunction sceAudioOutputPanned = new HLEModuleFunction("sceAudio_driver", "sceAudioOutputPanned") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioOutputPanned [0xE2D56B2D]");
        }
    };
    public static final HLEModuleFunction sceAudioOutputPannedBlocking = new HLEModuleFunction("sceAudio_driver", "sceAudioOutputPannedBlocking") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioOutputPannedBlocking [0x13F592BC]");
        }
    };
    public static final HLEModuleFunction sceAudioChReserve = new HLEModuleFunction("sceAudio_driver", "sceAudioChReserve") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioChReserve [0x5EC81C55]");
        }
    };
    public static final HLEModuleFunction sceAudioOneshotOutput = new HLEModuleFunction("sceAudio_driver", "sceAudioOneshotOutput") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioOneshotOutput [0x41EFADE7]");
        }
    };
    public static final HLEModuleFunction sceAudioChRelease = new HLEModuleFunction("sceAudio_driver", "sceAudioChRelease") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioChRelease [0x6FC46853]");
        }
    };
    public static final HLEModuleFunction sceAudioGetChannelRestLength = new HLEModuleFunction("sceAudio_driver", "sceAudioGetChannelRestLength") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioGetChannelRestLength [0xB011922F]");
        }
    };
    public static final HLEModuleFunction sceAudioSetChannelDataLen = new HLEModuleFunction("sceAudio_driver", "sceAudioSetChannelDataLen") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioSetChannelDataLen [0xCB2E439E]");
        }
    };
    public static final HLEModuleFunction sceAudioChangeChannelConfig = new HLEModuleFunction("sceAudio_driver", "sceAudioChangeChannelConfig") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioChangeChannelConfig [0x95FD0C2D]");
        }
    };
    public static final HLEModuleFunction sceAudioChangeChannelVolume = new HLEModuleFunction("sceAudio_driver", "sceAudioChangeChannelVolume") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioChangeChannelVolume [0xB7E1D8E7]");
        }
    };
    public static final HLEModuleFunction sceAudioSRCChReserve = new HLEModuleFunction("sceAudio_driver", "sceAudioSRCChReserve") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioSRCChReserve [0x38553111]");
        }
    };
    public static final HLEModuleFunction sceAudioSRCChRelease = new HLEModuleFunction("sceAudio_driver", "sceAudioSRCChRelease") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioSRCChRelease [0x5C37C0AE]");
        }
    };
    public static final HLEModuleFunction sceAudioSRCOutputBlocking = new HLEModuleFunction("sceAudio_driver", "sceAudioSRCOutputBlocking") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioSRCOutputBlocking [0xE0727056]");
        }
    };
    public static final HLEModuleFunction sceAudioInputBlocking = new HLEModuleFunction("sceAudio_driver", "sceAudioInputBlocking") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioInputBlocking [0x086E5895]");
        }
    };
    public static final HLEModuleFunction sceAudioInput = new HLEModuleFunction("sceAudio_driver", "sceAudioInput") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioInput [0x6D4BEC68]");
        }
    };
    public static final HLEModuleFunction sceAudioGetInputLength = new HLEModuleFunction("sceAudio_driver", "sceAudioGetInputLength") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioGetInputLength [0xA708C6A6]");
        }
    };
    public static final HLEModuleFunction sceAudioWaitInputEnd = new HLEModuleFunction("sceAudio_driver", "sceAudioWaitInputEnd") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioWaitInputEnd [0x87B2E651]");
        }
    };
    public static final HLEModuleFunction sceAudioInputInit = new HLEModuleFunction("sceAudio_driver", "sceAudioInputInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioInputInit [0x7DE61688]");
        }
    };
    public static final HLEModuleFunction sceAudioInputInitEx = new HLEModuleFunction("sceAudio_driver", "sceAudioInputInitEx") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioInputInitEx [0xE926D3FB]");
        }
    };
    public static final HLEModuleFunction sceAudioPollInputEnd = new HLEModuleFunction("sceAudio_driver", "sceAudioPollInputEnd") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioPollInputEnd [0xA633048E]");
        }
    };
    public static final HLEModuleFunction sceAudioGetChannelRestLen = new HLEModuleFunction("sceAudio_driver", "sceAudioGetChannelRestLen") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceAudioGetChannelRestLen [0xE9D97901]");
        }
    };
};
