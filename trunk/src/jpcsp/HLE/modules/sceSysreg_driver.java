/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class sceSysreg_driver implements HLEModule {

    @Override
    public final String getName() {
        return "sceSysreg_driver";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceSysregInit, 0x9C863542);

        mm.add(sceSysregEnd, 0xF2DEAA14);

        mm.add(sceSysreg_driver_E88B77ED, 0xE88B77ED);

        mm.add(sceSysregDoTimerEvent, 0xCD0F6715);

        mm.add(sceSysreg_driver_844AF6BD, 0x844AF6BD);

        mm.add(sceSysregGetTachyonVersion, 0xE2A5D1EE);

        mm.add(sceSysregGetFuseId, 0x4F46EEDE);

        mm.add(sceSysregGetFuseConfig, 0x8F4F4E96);

        mm.add(sceSysregTopResetEnable, 0xC29D614E);

        mm.add(sceSysregScResetEnable, 0xDC6139A4);

        mm.add(sceSysregMeResetEnable, 0xDE59DACB);

        mm.add(sceSysregMeResetDisable, 0x2DB0EB28);

        mm.add(sceSysregAwResetEnable, 0x26283A6F);

        mm.add(sceSysregAwResetDisable, 0xA374195E);

        mm.add(sceSysregVmeResetEnable, 0xD20581EA);

        mm.add(sceSysregVmeResetDisable, 0x7558064A);

        mm.add(sceSysregAvcResetEnable, 0x9BB70D34);

        mm.add(sceSysregAvcResetDisable, 0xFD6C562B);

        mm.add(sceSysregUsbResetEnable, 0xCD4FB614);

        mm.add(sceSysregUsbResetDisable, 0x69EECBE5);

        mm.add(sceSysregAtaResetEnable, 0xF5B80837);

        mm.add(sceSysregAtaResetDisable, 0x8075303F);

        mm.add(sceSysregMsifResetEnable, 0x00C2628E);

        mm.add(sceSysregMsifResetDisable, 0xEC4BF81F);

        mm.add(sceSysregKirkResetEnable, 0x8A7F9EB4);

        mm.add(sceSysregKirkResetDisable, 0xC32F2491);

        mm.add(sceSysregPllGetFrequency, 0xB21B6CBF);

        mm.add(sceSysregPllUpdateFrequency, 0xBB3623DF);

        mm.add(sceSysregPllGetBaseFrequency, 0x53A6838B);

        mm.add(sceSysregPllGetOutSelect, 0xB4560C45);

        mm.add(sceSysregPllSetOutSelect, 0xDCA57573);

        mm.add(sceSysregMeBusClockEnable, 0x44F6CDA7);

        mm.add(sceSysregMeBusClockDisable, 0x158AD4FC);

        mm.add(sceSysregAwRegABusClockEnable, 0x4D4CE2B8);

        mm.add(sceSysregAwRegABusClockDisable, 0x789BD609);

        mm.add(sceSysregAwRegBBusClockEnable, 0x391CE1C0);

        mm.add(sceSysregAwRegBBusClockDisable, 0x82D35024);

        mm.add(sceSysregAwEdramBusClockEnable, 0xAF904657);

        mm.add(sceSysregAwEdramBusClockDisable, 0x438AECE9);

        mm.add(sceSysregDmacplusBusClockEnable, 0x678AD3ED);

        mm.add(sceSysregDmacplusBusClockDisable, 0x168C09B8);

        mm.add(sceSysregDmacBusClockEnable, 0x7E7EBC20);

        mm.add(sceSysregDmacBusClockDisable, 0xA265C719);

        mm.add(sceSysregKirkBusClockEnable, 0x4F5AFBBE);

        mm.add(sceSysregKirkBusClockDisable, 0x845DD1A6);

        mm.add(sceSysregAtaBusClockEnable, 0x16909002);

        mm.add(sceSysregAtaBusClockDisable, 0xB6C10DF0);

        mm.add(sceSysregUsbBusClockEnable, 0x3E216017);

        mm.add(sceSysregUsbBusClockDisable, 0xBFBABB63);

        mm.add(sceSysregMsifBusClockEnable, 0x4716E71E);

        mm.add(sceSysregMsifBusClockDisable, 0x826430C0);

        mm.add(sceSysregEmcddrBusClockEnable, 0x7CC6CBFD);

        mm.add(sceSysregEmcddrBusClockDisable, 0xEE6B9411);

        mm.add(sceSysregEmcsmBusClockEnable, 0xF97D9D73);

        mm.add(sceSysregEmcsmBusClockDisable, 0x2D0F7755);

        mm.add(sceSysregApbBusClockEnable, 0x63B9EB65);

        mm.add(sceSysregApbBusClockDisable, 0xE1AA9788);

        mm.add(sceSysregAudioBusClockEnable, 0xAA63C8BD);

        mm.add(sceSysregAudioBusClockDisable, 0x054AC8C6);

        mm.add(sceSysregAtaClkEnable, 0x6B01D71B);

        mm.add(sceSysregAtaClkDisable, 0xFC186A83);

        mm.add(sceSysregUsbClkEnable, 0x7234EA80);

        mm.add(sceSysregUsbClkDisable, 0x38EC3281);

        mm.add(sceSysregMsifClkEnable, 0x31154490);

        mm.add(sceSysregMsifClkDisable, 0x8E2D835D);

        mm.add(sceSysregSpiClkEnable, 0x8835D1E1);

        mm.add(sceSysregSpiClkDisable, 0x8B90B8B5);

        mm.add(sceSysregUartClkEnable, 0x7725CA08);

        mm.add(sceSysregUartClkDisable, 0xA3E4154C);

        mm.add(sceSysregApbTimerClkEnable, 0xE8533DCA);

        mm.add(sceSysregApbTimerClkDisable, 0xF6D83AD0);

        mm.add(sceSysregAudioClkEnable, 0xA9CD1C1F);

        mm.add(sceSysregAudioClkDisable, 0x2F216F38);

        mm.add(sceSysregLcdcClkEnable, 0xA24C242A);

        mm.add(sceSysregLcdcClkDisable, 0xE89243BE);

        mm.add(sceSysregPwmClkEnable, 0x7DCA8302);

        mm.add(sceSysregPwmClkDisable, 0x45225F8F);

        mm.add(sceSysregKeyClkEnable, 0xD74D3AB6);

        mm.add(sceSysregKeyClkDisable, 0xAD7C4ACB);

        mm.add(sceSysregIicClkEnable, 0xDC68A93F);

        mm.add(sceSysregIicClkDisable, 0x94B0323C);

        mm.add(sceSysregSircsClkEnable, 0x6417CDD6);

        mm.add(sceSysregSircsClkDisable, 0x20388C9E);

        mm.add(sceSysregGpioClkEnable, 0xE3AECFFA);

        mm.add(sceSysregGpioClkDisable, 0x3BBD0C0C);

        mm.add(sceSysregAudioClkoutClkEnable, 0xC1DA05D2);

        mm.add(sceSysregAudioClkoutClkDisable, 0xDE170397);

        mm.add(sceSysregMsifClkSelect, 0x1969E840);

        mm.add(sceSysregMsifDelaySelect, 0x1D382514);

        mm.add(sceSysregAtaClkSelect, 0x833E6FB1);

        mm.add(sceSysregApbTimerClkSelect, 0x03340297);

        mm.add(sceSysregAudioClkSelect, 0x9100B4E5);

        mm.add(sceSysregAudioClkoutClkSelect, 0x0A83FC7B);

        mm.add(sceSysregSpiClkSelect, 0xD6628A48);

        mm.add(sceSysregLcdcClkSelect, 0x1E18EA43);

        mm.add(sceSysregEmcsmIoEnable, 0x9DD1F821);

        mm.add(sceSysregEmcsmIoDisable, 0x1C4C4C7A);

        mm.add(sceSysregUsbIoEnable, 0xBC68D9B6);

        mm.add(sceSysregUsbIoDisable, 0xA3C8E075);

        mm.add(sceSysregAtaIoEnable, 0x79338EA3);

        mm.add(sceSysregAtaIoDisable, 0xCADB92AA);

        mm.add(sceSysregMsifIoEnable, 0xD74F1D48);

        mm.add(sceSysregMsifIoDisable, 0x18172C6A);

        mm.add(sceSysregLcdcIoEnable, 0x63B1AADF);

        mm.add(sceSysregLcdcIoDisable, 0xF74F14E9);

        mm.add(sceSysregAudioIoEnable, 0xBB26CF1F);

        mm.add(sceSysregAudioIoDisable, 0x8E2FB536);

        mm.add(sceSysregIicIoEnable, 0x0436B60F);

        mm.add(sceSysregIicIoDisable, 0x58F47EFD);

        mm.add(sceSysregSircsIoEnable, 0x4C49A8BC);

        mm.add(sceSysregSircsIoDisable, 0x26FA0928);

        mm.add(sceSysregAudioClkoutIoEnable, 0xF844DDF3);

        mm.add(sceSysregAudioClkoutIoDisable, 0x29A119A1);

        mm.add(sceSysregKeyIoEnable, 0x77DED992);

        mm.add(sceSysregKeyIoDisable, 0x6879790B);

        mm.add(sceSysregPwmIoEnable, 0x7A5D2D15);

        mm.add(sceSysregPwmIoDisable, 0x25B0AC52);

        mm.add(sceSysregUartIoEnable, 0x7FD7A631);

        mm.add(sceSysregUartIoDisable, 0xBB823481);

        mm.add(sceSysregSpiIoEnable, 0x8C5C53DE);

        mm.add(sceSysregSpiIoDisable, 0xA16E55F4);

        mm.add(sceSysregGpioIoEnable, 0xB627582E);

        mm.add(sceSysregGpioIoDisable, 0x1E9C3607);

        mm.add(sceSysreg_driver_55B18B84, 0x55B18B84);

        mm.add(sceSysreg_driver_2112E686, 0x2112E686);

        mm.add(sceSysreg_driver_7B9E9A53, 0x7B9E9A53);

        mm.add(sceSysreg_driver_7BDF0556, 0x7BDF0556);

        mm.add(sceSysreg_driver_8D0FED1E, 0x8D0FED1E);

        mm.add(sceSysreg_driver_A46E9CA8, 0xA46E9CA8);

        mm.add(sceSysregUsbGetConnectStatus, 0x633595F2);

        mm.add(sceSysregUsbQueryIntr, 0x32471457);

        mm.add(sceSysregUsbAcquireIntr, 0x692F31FF);

        mm.add(sceSysregMsifGetConnectStatus, 0xD43E98F6);

        mm.add(sceSysregMsifQueryConnectIntr, 0xBF91FBDA);

        mm.add(sceSysregMsifAcquireConnectIntr, 0x36A75390);

        mm.add(sceSysregIntrInit, 0x25673620);

        mm.add(sceSysregIntrEnd, 0x4EE8E2C8);

        mm.add(sceSysregInterruptToOther, 0x61BFF85F);

        mm.add(sceSysregSemaTryLock, 0x9FC87ED4);

        mm.add(sceSysregSemaUnlock, 0x8BE2D520);

        mm.add(sceSysregEnableIntr, 0x083F56E2);

        mm.add(sceSysregDisableIntr, 0x7C5B543C);

        mm.add(sceSysregRequestIntr, 0x3EA188AD);

        mm.add(sceSysreg_driver_5664F8B5, 0x5664F8B5);

        mm.add(sceSysreg_driver_44704E1D, 0x44704E1D);

        mm.add(sceSysreg_driver_584AD989, 0x584AD989);

        mm.add(sceSysreg_driver_377F035F, 0x377F035F);

        mm.add(sceSysreg_driver_AB3185FD, 0xAB3185FD);

        mm.add(sceSysreg_driver_0EA487FA, 0x0EA487FA);

        mm.add(sceSysreg_driver_136E8F5A, 0x136E8F5A);

        mm.add(sceSysreg_driver_F4811E00, 0xF4811E00);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceSysregInit);

        mm.remove(sceSysregEnd);

        mm.remove(sceSysreg_driver_E88B77ED);

        mm.remove(sceSysregDoTimerEvent);

        mm.remove(sceSysreg_driver_844AF6BD);

        mm.remove(sceSysregGetTachyonVersion);

        mm.remove(sceSysregGetFuseId);

        mm.remove(sceSysregGetFuseConfig);

        mm.remove(sceSysregTopResetEnable);

        mm.remove(sceSysregScResetEnable);

        mm.remove(sceSysregMeResetEnable);

        mm.remove(sceSysregMeResetDisable);

        mm.remove(sceSysregAwResetEnable);

        mm.remove(sceSysregAwResetDisable);

        mm.remove(sceSysregVmeResetEnable);

        mm.remove(sceSysregVmeResetDisable);

        mm.remove(sceSysregAvcResetEnable);

        mm.remove(sceSysregAvcResetDisable);

        mm.remove(sceSysregUsbResetEnable);

        mm.remove(sceSysregUsbResetDisable);

        mm.remove(sceSysregAtaResetEnable);

        mm.remove(sceSysregAtaResetDisable);

        mm.remove(sceSysregMsifResetEnable);

        mm.remove(sceSysregMsifResetDisable);

        mm.remove(sceSysregKirkResetEnable);

        mm.remove(sceSysregKirkResetDisable);

        mm.remove(sceSysregPllGetFrequency);

        mm.remove(sceSysregPllUpdateFrequency);

        mm.remove(sceSysregPllGetBaseFrequency);

        mm.remove(sceSysregPllGetOutSelect);

        mm.remove(sceSysregPllSetOutSelect);

        mm.remove(sceSysregMeBusClockEnable);

        mm.remove(sceSysregMeBusClockDisable);

        mm.remove(sceSysregAwRegABusClockEnable);

        mm.remove(sceSysregAwRegABusClockDisable);

        mm.remove(sceSysregAwRegBBusClockEnable);

        mm.remove(sceSysregAwRegBBusClockDisable);

        mm.remove(sceSysregAwEdramBusClockEnable);

        mm.remove(sceSysregAwEdramBusClockDisable);

        mm.remove(sceSysregDmacplusBusClockEnable);

        mm.remove(sceSysregDmacplusBusClockDisable);

        mm.remove(sceSysregDmacBusClockEnable);

        mm.remove(sceSysregDmacBusClockDisable);

        mm.remove(sceSysregKirkBusClockEnable);

        mm.remove(sceSysregKirkBusClockDisable);

        mm.remove(sceSysregAtaBusClockEnable);

        mm.remove(sceSysregAtaBusClockDisable);

        mm.remove(sceSysregUsbBusClockEnable);

        mm.remove(sceSysregUsbBusClockDisable);

        mm.remove(sceSysregMsifBusClockEnable);

        mm.remove(sceSysregMsifBusClockDisable);

        mm.remove(sceSysregEmcddrBusClockEnable);

        mm.remove(sceSysregEmcddrBusClockDisable);

        mm.remove(sceSysregEmcsmBusClockEnable);

        mm.remove(sceSysregEmcsmBusClockDisable);

        mm.remove(sceSysregApbBusClockEnable);

        mm.remove(sceSysregApbBusClockDisable);

        mm.remove(sceSysregAudioBusClockEnable);

        mm.remove(sceSysregAudioBusClockDisable);

        mm.remove(sceSysregAtaClkEnable);

        mm.remove(sceSysregAtaClkDisable);

        mm.remove(sceSysregUsbClkEnable);

        mm.remove(sceSysregUsbClkDisable);

        mm.remove(sceSysregMsifClkEnable);

        mm.remove(sceSysregMsifClkDisable);

        mm.remove(sceSysregSpiClkEnable);

        mm.remove(sceSysregSpiClkDisable);

        mm.remove(sceSysregUartClkEnable);

        mm.remove(sceSysregUartClkDisable);

        mm.remove(sceSysregApbTimerClkEnable);

        mm.remove(sceSysregApbTimerClkDisable);

        mm.remove(sceSysregAudioClkEnable);

        mm.remove(sceSysregAudioClkDisable);

        mm.remove(sceSysregLcdcClkEnable);

        mm.remove(sceSysregLcdcClkDisable);

        mm.remove(sceSysregPwmClkEnable);

        mm.remove(sceSysregPwmClkDisable);

        mm.remove(sceSysregKeyClkEnable);

        mm.remove(sceSysregKeyClkDisable);

        mm.remove(sceSysregIicClkEnable);

        mm.remove(sceSysregIicClkDisable);

        mm.remove(sceSysregSircsClkEnable);

        mm.remove(sceSysregSircsClkDisable);

        mm.remove(sceSysregGpioClkEnable);

        mm.remove(sceSysregGpioClkDisable);

        mm.remove(sceSysregAudioClkoutClkEnable);

        mm.remove(sceSysregAudioClkoutClkDisable);

        mm.remove(sceSysregMsifClkSelect);

        mm.remove(sceSysregMsifDelaySelect);

        mm.remove(sceSysregAtaClkSelect);

        mm.remove(sceSysregApbTimerClkSelect);

        mm.remove(sceSysregAudioClkSelect);

        mm.remove(sceSysregAudioClkoutClkSelect);

        mm.remove(sceSysregSpiClkSelect);

        mm.remove(sceSysregLcdcClkSelect);

        mm.remove(sceSysregEmcsmIoEnable);

        mm.remove(sceSysregEmcsmIoDisable);

        mm.remove(sceSysregUsbIoEnable);

        mm.remove(sceSysregUsbIoDisable);

        mm.remove(sceSysregAtaIoEnable);

        mm.remove(sceSysregAtaIoDisable);

        mm.remove(sceSysregMsifIoEnable);

        mm.remove(sceSysregMsifIoDisable);

        mm.remove(sceSysregLcdcIoEnable);

        mm.remove(sceSysregLcdcIoDisable);

        mm.remove(sceSysregAudioIoEnable);

        mm.remove(sceSysregAudioIoDisable);

        mm.remove(sceSysregIicIoEnable);

        mm.remove(sceSysregIicIoDisable);

        mm.remove(sceSysregSircsIoEnable);

        mm.remove(sceSysregSircsIoDisable);

        mm.remove(sceSysregAudioClkoutIoEnable);

        mm.remove(sceSysregAudioClkoutIoDisable);

        mm.remove(sceSysregKeyIoEnable);

        mm.remove(sceSysregKeyIoDisable);

        mm.remove(sceSysregPwmIoEnable);

        mm.remove(sceSysregPwmIoDisable);

        mm.remove(sceSysregUartIoEnable);

        mm.remove(sceSysregUartIoDisable);

        mm.remove(sceSysregSpiIoEnable);

        mm.remove(sceSysregSpiIoDisable);

        mm.remove(sceSysregGpioIoEnable);

        mm.remove(sceSysregGpioIoDisable);

        mm.remove(sceSysreg_driver_55B18B84);

        mm.remove(sceSysreg_driver_2112E686);

        mm.remove(sceSysreg_driver_7B9E9A53);

        mm.remove(sceSysreg_driver_7BDF0556);

        mm.remove(sceSysreg_driver_8D0FED1E);

        mm.remove(sceSysreg_driver_A46E9CA8);

        mm.remove(sceSysregUsbGetConnectStatus);

        mm.remove(sceSysregUsbQueryIntr);

        mm.remove(sceSysregUsbAcquireIntr);

        mm.remove(sceSysregMsifGetConnectStatus);

        mm.remove(sceSysregMsifQueryConnectIntr);

        mm.remove(sceSysregMsifAcquireConnectIntr);

        mm.remove(sceSysregIntrInit);

        mm.remove(sceSysregIntrEnd);

        mm.remove(sceSysregInterruptToOther);

        mm.remove(sceSysregSemaTryLock);

        mm.remove(sceSysregSemaUnlock);

        mm.remove(sceSysregEnableIntr);

        mm.remove(sceSysregDisableIntr);

        mm.remove(sceSysregRequestIntr);

        mm.remove(sceSysreg_driver_5664F8B5);

        mm.remove(sceSysreg_driver_44704E1D);

        mm.remove(sceSysreg_driver_584AD989);

        mm.remove(sceSysreg_driver_377F035F);

        mm.remove(sceSysreg_driver_AB3185FD);

        mm.remove(sceSysreg_driver_0EA487FA);

        mm.remove(sceSysreg_driver_136E8F5A);

        mm.remove(sceSysreg_driver_F4811E00);

    }
    public static final HLEModuleFunction sceSysregInit = new HLEModuleFunction("sceSysreg_driver", "sceSysregInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregInit [0x9C863542]");
        }
    };
    public static final HLEModuleFunction sceSysregEnd = new HLEModuleFunction("sceSysreg_driver", "sceSysregEnd") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEnd [0xF2DEAA14]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_E88B77ED = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_E88B77ED") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_E88B77ED [0xE88B77ED]");
        }
    };
    public static final HLEModuleFunction sceSysregDoTimerEvent = new HLEModuleFunction("sceSysreg_driver", "sceSysregDoTimerEvent") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregDoTimerEvent [0xCD0F6715]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_844AF6BD = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_844AF6BD") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_844AF6BD [0x844AF6BD]");
        }
    };
    public static final HLEModuleFunction sceSysregGetTachyonVersion = new HLEModuleFunction("sceSysreg_driver", "sceSysregGetTachyonVersion") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregGetTachyonVersion [0xE2A5D1EE]");
        }
    };
    public static final HLEModuleFunction sceSysregGetFuseId = new HLEModuleFunction("sceSysreg_driver", "sceSysregGetFuseId") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregGetFuseId [0x4F46EEDE]");
        }
    };
    public static final HLEModuleFunction sceSysregGetFuseConfig = new HLEModuleFunction("sceSysreg_driver", "sceSysregGetFuseConfig") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregGetFuseConfig [0x8F4F4E96]");
        }
    };
    public static final HLEModuleFunction sceSysregTopResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregTopResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregTopResetEnable [0xC29D614E]");
        }
    };
    public static final HLEModuleFunction sceSysregScResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregScResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregScResetEnable [0xDC6139A4]");
        }
    };
    public static final HLEModuleFunction sceSysregMeResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMeResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMeResetEnable [0xDE59DACB]");
        }
    };
    public static final HLEModuleFunction sceSysregMeResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMeResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMeResetDisable [0x2DB0EB28]");
        }
    };
    public static final HLEModuleFunction sceSysregAwResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwResetEnable [0x26283A6F]");
        }
    };
    public static final HLEModuleFunction sceSysregAwResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwResetDisable [0xA374195E]");
        }
    };
    public static final HLEModuleFunction sceSysregVmeResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregVmeResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregVmeResetEnable [0xD20581EA]");
        }
    };
    public static final HLEModuleFunction sceSysregVmeResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregVmeResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregVmeResetDisable [0x7558064A]");
        }
    };
    public static final HLEModuleFunction sceSysregAvcResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAvcResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAvcResetEnable [0x9BB70D34]");
        }
    };
    public static final HLEModuleFunction sceSysregAvcResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAvcResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAvcResetDisable [0xFD6C562B]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbResetEnable [0xCD4FB614]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbResetDisable [0x69EECBE5]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaResetEnable [0xF5B80837]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaResetDisable [0x8075303F]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifResetEnable [0x00C2628E]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifResetDisable [0xEC4BF81F]");
        }
    };
    public static final HLEModuleFunction sceSysregKirkResetEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKirkResetEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKirkResetEnable [0x8A7F9EB4]");
        }
    };
    public static final HLEModuleFunction sceSysregKirkResetDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKirkResetDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKirkResetDisable [0xC32F2491]");
        }
    };
    public static final HLEModuleFunction sceSysregPllGetFrequency = new HLEModuleFunction("sceSysreg_driver", "sceSysregPllGetFrequency") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPllGetFrequency [0xB21B6CBF]");
        }
    };
    public static final HLEModuleFunction sceSysregPllUpdateFrequency = new HLEModuleFunction("sceSysreg_driver", "sceSysregPllUpdateFrequency") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPllUpdateFrequency [0xBB3623DF]");
        }
    };
    public static final HLEModuleFunction sceSysregPllGetBaseFrequency = new HLEModuleFunction("sceSysreg_driver", "sceSysregPllGetBaseFrequency") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPllGetBaseFrequency [0x53A6838B]");
        }
    };
    public static final HLEModuleFunction sceSysregPllGetOutSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregPllGetOutSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPllGetOutSelect [0xB4560C45]");
        }
    };
    public static final HLEModuleFunction sceSysregPllSetOutSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregPllSetOutSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPllSetOutSelect [0xDCA57573]");
        }
    };
    public static final HLEModuleFunction sceSysregMeBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMeBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMeBusClockEnable [0x44F6CDA7]");
        }
    };
    public static final HLEModuleFunction sceSysregMeBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMeBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMeBusClockDisable [0x158AD4FC]");
        }
    };
    public static final HLEModuleFunction sceSysregAwRegABusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwRegABusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwRegABusClockEnable [0x4D4CE2B8]");
        }
    };
    public static final HLEModuleFunction sceSysregAwRegABusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwRegABusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwRegABusClockDisable [0x789BD609]");
        }
    };
    public static final HLEModuleFunction sceSysregAwRegBBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwRegBBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwRegBBusClockEnable [0x391CE1C0]");
        }
    };
    public static final HLEModuleFunction sceSysregAwRegBBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwRegBBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwRegBBusClockDisable [0x82D35024]");
        }
    };
    public static final HLEModuleFunction sceSysregAwEdramBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwEdramBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwEdramBusClockEnable [0xAF904657]");
        }
    };
    public static final HLEModuleFunction sceSysregAwEdramBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAwEdramBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAwEdramBusClockDisable [0x438AECE9]");
        }
    };
    public static final HLEModuleFunction sceSysregDmacplusBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregDmacplusBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregDmacplusBusClockEnable [0x678AD3ED]");
        }
    };
    public static final HLEModuleFunction sceSysregDmacplusBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregDmacplusBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregDmacplusBusClockDisable [0x168C09B8]");
        }
    };
    public static final HLEModuleFunction sceSysregDmacBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregDmacBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregDmacBusClockEnable [0x7E7EBC20]");
        }
    };
    public static final HLEModuleFunction sceSysregDmacBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregDmacBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregDmacBusClockDisable [0xA265C719]");
        }
    };
    public static final HLEModuleFunction sceSysregKirkBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKirkBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKirkBusClockEnable [0x4F5AFBBE]");
        }
    };
    public static final HLEModuleFunction sceSysregKirkBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKirkBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKirkBusClockDisable [0x845DD1A6]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaBusClockEnable [0x16909002]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaBusClockDisable [0xB6C10DF0]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbBusClockEnable [0x3E216017]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbBusClockDisable [0xBFBABB63]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifBusClockEnable [0x4716E71E]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifBusClockDisable [0x826430C0]");
        }
    };
    public static final HLEModuleFunction sceSysregEmcddrBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregEmcddrBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEmcddrBusClockEnable [0x7CC6CBFD]");
        }
    };
    public static final HLEModuleFunction sceSysregEmcddrBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregEmcddrBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEmcddrBusClockDisable [0xEE6B9411]");
        }
    };
    public static final HLEModuleFunction sceSysregEmcsmBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregEmcsmBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEmcsmBusClockEnable [0xF97D9D73]");
        }
    };
    public static final HLEModuleFunction sceSysregEmcsmBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregEmcsmBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEmcsmBusClockDisable [0x2D0F7755]");
        }
    };
    public static final HLEModuleFunction sceSysregApbBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregApbBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregApbBusClockEnable [0x63B9EB65]");
        }
    };
    public static final HLEModuleFunction sceSysregApbBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregApbBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregApbBusClockDisable [0xE1AA9788]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioBusClockEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioBusClockEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioBusClockEnable [0xAA63C8BD]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioBusClockDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioBusClockDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioBusClockDisable [0x054AC8C6]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaClkEnable [0x6B01D71B]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaClkDisable [0xFC186A83]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbClkEnable [0x7234EA80]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbClkDisable [0x38EC3281]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifClkEnable [0x31154490]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifClkDisable [0x8E2D835D]");
        }
    };
    public static final HLEModuleFunction sceSysregSpiClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSpiClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSpiClkEnable [0x8835D1E1]");
        }
    };
    public static final HLEModuleFunction sceSysregSpiClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSpiClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSpiClkDisable [0x8B90B8B5]");
        }
    };
    public static final HLEModuleFunction sceSysregUartClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUartClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUartClkEnable [0x7725CA08]");
        }
    };
    public static final HLEModuleFunction sceSysregUartClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUartClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUartClkDisable [0xA3E4154C]");
        }
    };
    public static final HLEModuleFunction sceSysregApbTimerClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregApbTimerClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregApbTimerClkEnable [0xE8533DCA]");
        }
    };
    public static final HLEModuleFunction sceSysregApbTimerClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregApbTimerClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregApbTimerClkDisable [0xF6D83AD0]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkEnable [0xA9CD1C1F]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkDisable [0x2F216F38]");
        }
    };
    public static final HLEModuleFunction sceSysregLcdcClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregLcdcClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregLcdcClkEnable [0xA24C242A]");
        }
    };
    public static final HLEModuleFunction sceSysregLcdcClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregLcdcClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregLcdcClkDisable [0xE89243BE]");
        }
    };
    public static final HLEModuleFunction sceSysregPwmClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregPwmClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPwmClkEnable [0x7DCA8302]");
        }
    };
    public static final HLEModuleFunction sceSysregPwmClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregPwmClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPwmClkDisable [0x45225F8F]");
        }
    };
    public static final HLEModuleFunction sceSysregKeyClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKeyClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKeyClkEnable [0xD74D3AB6]");
        }
    };
    public static final HLEModuleFunction sceSysregKeyClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKeyClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKeyClkDisable [0xAD7C4ACB]");
        }
    };
    public static final HLEModuleFunction sceSysregIicClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregIicClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregIicClkEnable [0xDC68A93F]");
        }
    };
    public static final HLEModuleFunction sceSysregIicClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregIicClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregIicClkDisable [0x94B0323C]");
        }
    };
    public static final HLEModuleFunction sceSysregSircsClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSircsClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSircsClkEnable [0x6417CDD6]");
        }
    };
    public static final HLEModuleFunction sceSysregSircsClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSircsClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSircsClkDisable [0x20388C9E]");
        }
    };
    public static final HLEModuleFunction sceSysregGpioClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregGpioClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregGpioClkEnable [0xE3AECFFA]");
        }
    };
    public static final HLEModuleFunction sceSysregGpioClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregGpioClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregGpioClkDisable [0x3BBD0C0C]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkoutClkEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkoutClkEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkoutClkEnable [0xC1DA05D2]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkoutClkDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkoutClkDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkoutClkDisable [0xDE170397]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifClkSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifClkSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifClkSelect [0x1969E840]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifDelaySelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifDelaySelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifDelaySelect [0x1D382514]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaClkSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaClkSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaClkSelect [0x833E6FB1]");
        }
    };
    public static final HLEModuleFunction sceSysregApbTimerClkSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregApbTimerClkSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregApbTimerClkSelect [0x03340297]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkSelect [0x9100B4E5]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkoutClkSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkoutClkSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkoutClkSelect [0x0A83FC7B]");
        }
    };
    public static final HLEModuleFunction sceSysregSpiClkSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregSpiClkSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSpiClkSelect [0xD6628A48]");
        }
    };
    public static final HLEModuleFunction sceSysregLcdcClkSelect = new HLEModuleFunction("sceSysreg_driver", "sceSysregLcdcClkSelect") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregLcdcClkSelect [0x1E18EA43]");
        }
    };
    public static final HLEModuleFunction sceSysregEmcsmIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregEmcsmIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEmcsmIoEnable [0x9DD1F821]");
        }
    };
    public static final HLEModuleFunction sceSysregEmcsmIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregEmcsmIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEmcsmIoDisable [0x1C4C4C7A]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbIoEnable [0xBC68D9B6]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbIoDisable [0xA3C8E075]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaIoEnable [0x79338EA3]");
        }
    };
    public static final HLEModuleFunction sceSysregAtaIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAtaIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAtaIoDisable [0xCADB92AA]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifIoEnable [0xD74F1D48]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifIoDisable [0x18172C6A]");
        }
    };
    public static final HLEModuleFunction sceSysregLcdcIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregLcdcIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregLcdcIoEnable [0x63B1AADF]");
        }
    };
    public static final HLEModuleFunction sceSysregLcdcIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregLcdcIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregLcdcIoDisable [0xF74F14E9]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioIoEnable [0xBB26CF1F]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioIoDisable [0x8E2FB536]");
        }
    };
    public static final HLEModuleFunction sceSysregIicIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregIicIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregIicIoEnable [0x0436B60F]");
        }
    };
    public static final HLEModuleFunction sceSysregIicIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregIicIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregIicIoDisable [0x58F47EFD]");
        }
    };
    public static final HLEModuleFunction sceSysregSircsIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSircsIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSircsIoEnable [0x4C49A8BC]");
        }
    };
    public static final HLEModuleFunction sceSysregSircsIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSircsIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSircsIoDisable [0x26FA0928]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkoutIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkoutIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkoutIoEnable [0xF844DDF3]");
        }
    };
    public static final HLEModuleFunction sceSysregAudioClkoutIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregAudioClkoutIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregAudioClkoutIoDisable [0x29A119A1]");
        }
    };
    public static final HLEModuleFunction sceSysregKeyIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKeyIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKeyIoEnable [0x77DED992]");
        }
    };
    public static final HLEModuleFunction sceSysregKeyIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregKeyIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregKeyIoDisable [0x6879790B]");
        }
    };
    public static final HLEModuleFunction sceSysregPwmIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregPwmIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPwmIoEnable [0x7A5D2D15]");
        }
    };
    public static final HLEModuleFunction sceSysregPwmIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregPwmIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregPwmIoDisable [0x25B0AC52]");
        }
    };
    public static final HLEModuleFunction sceSysregUartIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUartIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUartIoEnable [0x7FD7A631]");
        }
    };
    public static final HLEModuleFunction sceSysregUartIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregUartIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUartIoDisable [0xBB823481]");
        }
    };
    public static final HLEModuleFunction sceSysregSpiIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSpiIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSpiIoEnable [0x8C5C53DE]");
        }
    };
    public static final HLEModuleFunction sceSysregSpiIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregSpiIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSpiIoDisable [0xA16E55F4]");
        }
    };
    public static final HLEModuleFunction sceSysregGpioIoEnable = new HLEModuleFunction("sceSysreg_driver", "sceSysregGpioIoEnable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregGpioIoEnable [0xB627582E]");
        }
    };
    public static final HLEModuleFunction sceSysregGpioIoDisable = new HLEModuleFunction("sceSysreg_driver", "sceSysregGpioIoDisable") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregGpioIoDisable [0x1E9C3607]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_55B18B84 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_55B18B84") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_55B18B84 [0x55B18B84]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_2112E686 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_2112E686") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_2112E686 [0x2112E686]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_7B9E9A53 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_7B9E9A53") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_7B9E9A53 [0x7B9E9A53]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_7BDF0556 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_7BDF0556") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_7BDF0556 [0x7BDF0556]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_8D0FED1E = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_8D0FED1E") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_8D0FED1E [0x8D0FED1E]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_A46E9CA8 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_A46E9CA8") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_A46E9CA8 [0xA46E9CA8]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbGetConnectStatus = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbGetConnectStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbGetConnectStatus [0x633595F2]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbQueryIntr = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbQueryIntr") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbQueryIntr [0x32471457]");
        }
    };
    public static final HLEModuleFunction sceSysregUsbAcquireIntr = new HLEModuleFunction("sceSysreg_driver", "sceSysregUsbAcquireIntr") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregUsbAcquireIntr [0x692F31FF]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifGetConnectStatus = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifGetConnectStatus") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifGetConnectStatus [0xD43E98F6]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifQueryConnectIntr = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifQueryConnectIntr") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifQueryConnectIntr [0xBF91FBDA]");
        }
    };
    public static final HLEModuleFunction sceSysregMsifAcquireConnectIntr = new HLEModuleFunction("sceSysreg_driver", "sceSysregMsifAcquireConnectIntr") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregMsifAcquireConnectIntr [0x36A75390]");
        }
    };
    public static final HLEModuleFunction sceSysregIntrInit = new HLEModuleFunction("sceSysreg_driver", "sceSysregIntrInit") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregIntrInit [0x25673620]");
        }
    };
    public static final HLEModuleFunction sceSysregIntrEnd = new HLEModuleFunction("sceSysreg_driver", "sceSysregIntrEnd") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregIntrEnd [0x4EE8E2C8]");
        }
    };
    public static final HLEModuleFunction sceSysregInterruptToOther = new HLEModuleFunction("sceSysreg_driver", "sceSysregInterruptToOther") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregInterruptToOther [0x61BFF85F]");
        }
    };
    public static final HLEModuleFunction sceSysregSemaTryLock = new HLEModuleFunction("sceSysreg_driver", "sceSysregSemaTryLock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSemaTryLock [0x9FC87ED4]");
        }
    };
    public static final HLEModuleFunction sceSysregSemaUnlock = new HLEModuleFunction("sceSysreg_driver", "sceSysregSemaUnlock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregSemaUnlock [0x8BE2D520]");
        }
    };
    public static final HLEModuleFunction sceSysregEnableIntr = new HLEModuleFunction("sceSysreg_driver", "sceSysregEnableIntr") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregEnableIntr [0x083F56E2]");
        }
    };
    public static final HLEModuleFunction sceSysregDisableIntr = new HLEModuleFunction("sceSysreg_driver", "sceSysregDisableIntr") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregDisableIntr [0x7C5B543C]");
        }
    };
    public static final HLEModuleFunction sceSysregRequestIntr = new HLEModuleFunction("sceSysreg_driver", "sceSysregRequestIntr") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysregRequestIntr [0x3EA188AD]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_5664F8B5 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_5664F8B5") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_5664F8B5 [0x5664F8B5]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_44704E1D = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_44704E1D") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_44704E1D [0x44704E1D]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_584AD989 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_584AD989") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_584AD989 [0x584AD989]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_377F035F = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_377F035F") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_377F035F [0x377F035F]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_AB3185FD = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_AB3185FD") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_AB3185FD [0xAB3185FD]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_0EA487FA = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_0EA487FA") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_0EA487FA [0x0EA487FA]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_136E8F5A = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_136E8F5A") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_136E8F5A [0x136E8F5A]");
        }
    };
    public static final HLEModuleFunction sceSysreg_driver_F4811E00 = new HLEModuleFunction("sceSysreg_driver", "sceSysreg_driver_F4811E00") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSysreg_driver_F4811E00 [0xF4811E00]");
        }
    };
};
