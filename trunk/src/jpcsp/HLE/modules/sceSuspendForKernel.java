/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class sceSuspendForKernel implements HLEModule {

    @Override
    public final String getName() {
        return "sceSuspendForKernel";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceKernelRegisterPowerHandlers, 0xBDE686CD);

        mm.add(sceKernelPowerLock, 0xEADB1BD7);

        mm.add(sceKernelPowerLockForUser, 0xB53B2147);

        mm.add(sceKernelPowerUnlock, 0x3AEE7261);

        mm.add(sceKernelPowerUnlockForUser, 0xC7C928C7);

        mm.add(sceKernelPowerTick, 0x090CCB3F);

        mm.add(sceKernelVolatileMemLock, 0x3E0271D3);

        mm.add(sceKernelVolatileMemTryLock, 0xA14F40B2);

        mm.add(sceKernelVolatileMemUnlock, 0xA569E425);

        mm.add(sceKernelPowerRebootStart, 0x98A1D061);

        mm.add(sceKernelRegisterSuspendHandler, 0x91A77137);

        mm.add(sceKernelRegisterResumeHandler, 0xB43D1A8C);

        mm.add(sceSuspendForKernel_67B59042, 0x67B59042);

        mm.add(sceSuspendForKernel_B2C9640B, 0xB2C9640B);

        mm.add(sceKernelDispatchSuspendHandlers, 0x8F58B1EC);

        mm.add(sceKernelDispatchResumeHandlers, 0x0AB0C6F3);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceKernelRegisterPowerHandlers);

        mm.remove(sceKernelPowerLock);

        mm.remove(sceKernelPowerLockForUser);

        mm.remove(sceKernelPowerUnlock);

        mm.remove(sceKernelPowerUnlockForUser);

        mm.remove(sceKernelPowerTick);

        mm.remove(sceKernelVolatileMemLock);

        mm.remove(sceKernelVolatileMemTryLock);

        mm.remove(sceKernelVolatileMemUnlock);

        mm.remove(sceKernelPowerRebootStart);

        mm.remove(sceKernelRegisterSuspendHandler);

        mm.remove(sceKernelRegisterResumeHandler);

        mm.remove(sceSuspendForKernel_67B59042);

        mm.remove(sceSuspendForKernel_B2C9640B);

        mm.remove(sceKernelDispatchSuspendHandlers);

        mm.remove(sceKernelDispatchResumeHandlers);

    }
    public static final HLEModuleFunction sceKernelRegisterPowerHandlers = new HLEModuleFunction("sceSuspendForKernel", "sceKernelRegisterPowerHandlers") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterPowerHandlers [0xBDE686CD]");
        }
    };
    public static final HLEModuleFunction sceKernelPowerLock = new HLEModuleFunction("sceSuspendForKernel", "sceKernelPowerLock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelPowerLock [0xEADB1BD7]");
        }
    };
    public static final HLEModuleFunction sceKernelPowerLockForUser = new HLEModuleFunction("sceSuspendForKernel", "sceKernelPowerLockForUser") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelPowerLockForUser [0xB53B2147]");
        }
    };
    public static final HLEModuleFunction sceKernelPowerUnlock = new HLEModuleFunction("sceSuspendForKernel", "sceKernelPowerUnlock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelPowerUnlock [0x3AEE7261]");
        }
    };
    public static final HLEModuleFunction sceKernelPowerUnlockForUser = new HLEModuleFunction("sceSuspendForKernel", "sceKernelPowerUnlockForUser") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelPowerUnlockForUser [0xC7C928C7]");
        }
    };
    public static final HLEModuleFunction sceKernelPowerTick = new HLEModuleFunction("sceSuspendForKernel", "sceKernelPowerTick") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelPowerTick [0x090CCB3F]");
        }
    };
    public static final HLEModuleFunction sceKernelVolatileMemLock = new HLEModuleFunction("sceSuspendForKernel", "sceKernelVolatileMemLock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelVolatileMemLock [0x3E0271D3]");
        }
    };
    public static final HLEModuleFunction sceKernelVolatileMemTryLock = new HLEModuleFunction("sceSuspendForKernel", "sceKernelVolatileMemTryLock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelVolatileMemTryLock [0xA14F40B2]");
        }
    };
    public static final HLEModuleFunction sceKernelVolatileMemUnlock = new HLEModuleFunction("sceSuspendForKernel", "sceKernelVolatileMemUnlock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelVolatileMemUnlock [0xA569E425]");
        }
    };
    public static final HLEModuleFunction sceKernelPowerRebootStart = new HLEModuleFunction("sceSuspendForKernel", "sceKernelPowerRebootStart") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelPowerRebootStart [0x98A1D061]");
        }
    };
    public static final HLEModuleFunction sceKernelRegisterSuspendHandler = new HLEModuleFunction("sceSuspendForKernel", "sceKernelRegisterSuspendHandler") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterSuspendHandler [0x91A77137]");
        }
    };
    public static final HLEModuleFunction sceKernelRegisterResumeHandler = new HLEModuleFunction("sceSuspendForKernel", "sceKernelRegisterResumeHandler") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelRegisterResumeHandler [0xB43D1A8C]");
        }
    };
    public static final HLEModuleFunction sceSuspendForKernel_67B59042 = new HLEModuleFunction("sceSuspendForKernel", "sceSuspendForKernel_67B59042") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSuspendForKernel_67B59042 [0x67B59042]");
        }
    };
    public static final HLEModuleFunction sceSuspendForKernel_B2C9640B = new HLEModuleFunction("sceSuspendForKernel", "sceSuspendForKernel_B2C9640B") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceSuspendForKernel_B2C9640B [0xB2C9640B]");
        }
    };
    public static final HLEModuleFunction sceKernelDispatchSuspendHandlers = new HLEModuleFunction("sceSuspendForKernel", "sceKernelDispatchSuspendHandlers") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDispatchSuspendHandlers [0x8F58B1EC]");
        }
    };
    public static final HLEModuleFunction sceKernelDispatchResumeHandlers = new HLEModuleFunction("sceSuspendForKernel", "sceKernelDispatchResumeHandlers") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceKernelDispatchResumeHandlers [0x0AB0C6F3]");
        }
    };
};
