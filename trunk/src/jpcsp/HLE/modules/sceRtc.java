/* This autogenerated file is part of jpcsp. */
package jpcsp.HLE.modules;

import jpcsp.HLE.pspSysMem;
import jpcsp.Memory;
import jpcsp.Processor;

public class sceRtc implements HLEModule {

    @Override
    public final String getName() {
        return "sceRtc";
    }

    @Override
    public void installModule(HLEModuleManager mm, int version) {

        mm.add(sceRtcGetTickResolution, 0xC41C2853);

        mm.add(sceRtcGetCurrentTick, 0x3F7AD767);

        mm.add(sceRtcGetAccumulativeTime, 0x011F03C1);

        mm.add(sceRtc_029CA3B3, 0x029CA3B3);

        mm.add(sceRtcGetCurrentClock, 0x4CFA57B0);

        mm.add(sceRtcGetCurrentClockLocalTime, 0xE7C27D1B);

        mm.add(sceRtcConvertUtcToLocalTime, 0x34885E0D);

        mm.add(sceRtcConvertLocalTimeToUTC, 0x779242A2);

        mm.add(sceRtcIsLeapYear, 0x42307A17);

        mm.add(sceRtcGetDaysInMonth, 0x05EF322C);

        mm.add(sceRtcGetDayOfWeek, 0x57726BC1);

        mm.add(sceRtcCheckValid, 0x4B1B5E82);

        mm.add(sceRtcSetTime_t, 0x3A807CC8);

        mm.add(sceRtcGetTime_t, 0x27C4594C);

        mm.add(sceRtcSetDosTime, 0xF006F264);

        mm.add(sceRtcGetDosTime, 0x36075567);

        mm.add(sceRtcSetWin32FileTime, 0x7ACE4C04);

        mm.add(sceRtcGetWin32FileTime, 0xCF561893);

        mm.add(sceRtcSetTick, 0x7ED29E40);

        mm.add(sceRtcGetTick, 0x6FF40ACC);

        mm.add(sceRtcCompareTick, 0x9ED0AE87);

        mm.add(sceRtcTickAddTicks, 0x44F45E05);

        mm.add(sceRtcTickAddMicroseconds, 0x26D25A5D);

        mm.add(sceRtcTickAddSeconds, 0xF2A4AFE5);

        mm.add(sceRtcTickAddMinutes, 0xE6605BCA);

        mm.add(sceRtcTickAddHours, 0x26D7A24A);

        mm.add(sceRtcTickAddDays, 0xE51B4B7A);

        mm.add(sceRtcTickAddWeeks, 0xCF3A2CA8);

        mm.add(sceRtcTickAddMonths, 0xDBF74F1B);

        mm.add(sceRtcTickAddYears, 0x42842C77);

        mm.add(sceRtcFormatRFC2822, 0xC663B3B9);

        mm.add(sceRtcFormatRFC2822LocalTime, 0x7DE6711B);

        mm.add(sceRtcFormatRFC3339, 0x0498FB3C);

        mm.add(sceRtcFormatRFC3339LocalTime, 0x27F98543);

        mm.add(sceRtcParseDateTime, 0xDFBC5F16);

        mm.add(sceRtcParseRFC3339, 0x28E1E988);

    }

    @Override
    public void uninstallModule(HLEModuleManager mm, int version) {

        mm.remove(sceRtcGetTickResolution);

        mm.remove(sceRtcGetCurrentTick);

        mm.remove(sceRtcGetAccumulativeTime);

        mm.remove(sceRtc_029CA3B3);

        mm.remove(sceRtcGetCurrentClock);

        mm.remove(sceRtcGetCurrentClockLocalTime);

        mm.remove(sceRtcConvertUtcToLocalTime);

        mm.remove(sceRtcConvertLocalTimeToUTC);

        mm.remove(sceRtcIsLeapYear);

        mm.remove(sceRtcGetDaysInMonth);

        mm.remove(sceRtcGetDayOfWeek);

        mm.remove(sceRtcCheckValid);

        mm.remove(sceRtcSetTime_t);

        mm.remove(sceRtcGetTime_t);

        mm.remove(sceRtcSetDosTime);

        mm.remove(sceRtcGetDosTime);

        mm.remove(sceRtcSetWin32FileTime);

        mm.remove(sceRtcGetWin32FileTime);

        mm.remove(sceRtcSetTick);

        mm.remove(sceRtcGetTick);

        mm.remove(sceRtcCompareTick);

        mm.remove(sceRtcTickAddTicks);

        mm.remove(sceRtcTickAddMicroseconds);

        mm.remove(sceRtcTickAddSeconds);

        mm.remove(sceRtcTickAddMinutes);

        mm.remove(sceRtcTickAddHours);

        mm.remove(sceRtcTickAddDays);

        mm.remove(sceRtcTickAddWeeks);

        mm.remove(sceRtcTickAddMonths);

        mm.remove(sceRtcTickAddYears);

        mm.remove(sceRtcFormatRFC2822);

        mm.remove(sceRtcFormatRFC2822LocalTime);

        mm.remove(sceRtcFormatRFC3339);

        mm.remove(sceRtcFormatRFC3339LocalTime);

        mm.remove(sceRtcParseDateTime);

        mm.remove(sceRtcParseRFC3339);

    }
    public static final HLEModuleFunction sceRtcGetTickResolution = new HLEModuleFunction("sceRtc", "sceRtcGetTickResolution") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetTickResolution [0xC41C2853]");
        }
    };
    public static final HLEModuleFunction sceRtcGetCurrentTick = new HLEModuleFunction("sceRtc", "sceRtcGetCurrentTick") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetCurrentTick [0x3F7AD767]");
        }
    };
    public static final HLEModuleFunction sceRtcGetAccumulativeTime = new HLEModuleFunction("sceRtc", "sceRtcGetAccumulativeTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetAccumulativeTime [0x011F03C1]");
        }
    };
    public static final HLEModuleFunction sceRtc_029CA3B3 = new HLEModuleFunction("sceRtc", "sceRtc_029CA3B3") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtc_029CA3B3 [0x029CA3B3]");
        }
    };
    public static final HLEModuleFunction sceRtcGetCurrentClock = new HLEModuleFunction("sceRtc", "sceRtcGetCurrentClock") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetCurrentClock [0x4CFA57B0]");
        }
    };
    public static final HLEModuleFunction sceRtcGetCurrentClockLocalTime = new HLEModuleFunction("sceRtc", "sceRtcGetCurrentClockLocalTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetCurrentClockLocalTime [0xE7C27D1B]");
        }
    };
    public static final HLEModuleFunction sceRtcConvertUtcToLocalTime = new HLEModuleFunction("sceRtc", "sceRtcConvertUtcToLocalTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcConvertUtcToLocalTime [0x34885E0D]");
        }
    };
    public static final HLEModuleFunction sceRtcConvertLocalTimeToUTC = new HLEModuleFunction("sceRtc", "sceRtcConvertLocalTimeToUTC") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcConvertLocalTimeToUTC [0x779242A2]");
        }
    };
    public static final HLEModuleFunction sceRtcIsLeapYear = new HLEModuleFunction("sceRtc", "sceRtcIsLeapYear") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcIsLeapYear [0x42307A17]");
        }
    };
    public static final HLEModuleFunction sceRtcGetDaysInMonth = new HLEModuleFunction("sceRtc", "sceRtcGetDaysInMonth") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetDaysInMonth [0x05EF322C]");
        }
    };
    public static final HLEModuleFunction sceRtcGetDayOfWeek = new HLEModuleFunction("sceRtc", "sceRtcGetDayOfWeek") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetDayOfWeek [0x57726BC1]");
        }
    };
    public static final HLEModuleFunction sceRtcCheckValid = new HLEModuleFunction("sceRtc", "sceRtcCheckValid") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcCheckValid [0x4B1B5E82]");
        }
    };
    public static final HLEModuleFunction sceRtcSetTime_t = new HLEModuleFunction("sceRtc", "sceRtcSetTime_t") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcSetTime_t [0x3A807CC8]");
        }
    };
    public static final HLEModuleFunction sceRtcGetTime_t = new HLEModuleFunction("sceRtc", "sceRtcGetTime_t") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetTime_t [0x27C4594C]");
        }
    };
    public static final HLEModuleFunction sceRtcSetDosTime = new HLEModuleFunction("sceRtc", "sceRtcSetDosTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcSetDosTime [0xF006F264]");
        }
    };
    public static final HLEModuleFunction sceRtcGetDosTime = new HLEModuleFunction("sceRtc", "sceRtcGetDosTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetDosTime [0x36075567]");
        }
    };
    public static final HLEModuleFunction sceRtcSetWin32FileTime = new HLEModuleFunction("sceRtc", "sceRtcSetWin32FileTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcSetWin32FileTime [0x7ACE4C04]");
        }
    };
    public static final HLEModuleFunction sceRtcGetWin32FileTime = new HLEModuleFunction("sceRtc", "sceRtcGetWin32FileTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetWin32FileTime [0xCF561893]");
        }
    };
    public static final HLEModuleFunction sceRtcSetTick = new HLEModuleFunction("sceRtc", "sceRtcSetTick") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcSetTick [0x7ED29E40]");
        }
    };
    public static final HLEModuleFunction sceRtcGetTick = new HLEModuleFunction("sceRtc", "sceRtcGetTick") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcGetTick [0x6FF40ACC]");
        }
    };
    public static final HLEModuleFunction sceRtcCompareTick = new HLEModuleFunction("sceRtc", "sceRtcCompareTick") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcCompareTick [0x9ED0AE87]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddTicks = new HLEModuleFunction("sceRtc", "sceRtcTickAddTicks") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddTicks [0x44F45E05]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddMicroseconds = new HLEModuleFunction("sceRtc", "sceRtcTickAddMicroseconds") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddMicroseconds [0x26D25A5D]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddSeconds = new HLEModuleFunction("sceRtc", "sceRtcTickAddSeconds") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddSeconds [0xF2A4AFE5]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddMinutes = new HLEModuleFunction("sceRtc", "sceRtcTickAddMinutes") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddMinutes [0xE6605BCA]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddHours = new HLEModuleFunction("sceRtc", "sceRtcTickAddHours") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddHours [0x26D7A24A]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddDays = new HLEModuleFunction("sceRtc", "sceRtcTickAddDays") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddDays [0xE51B4B7A]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddWeeks = new HLEModuleFunction("sceRtc", "sceRtcTickAddWeeks") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddWeeks [0xCF3A2CA8]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddMonths = new HLEModuleFunction("sceRtc", "sceRtcTickAddMonths") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddMonths [0xDBF74F1B]");
        }
    };
    public static final HLEModuleFunction sceRtcTickAddYears = new HLEModuleFunction("sceRtc", "sceRtcTickAddYears") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcTickAddYears [0x42842C77]");
        }
    };
    public static final HLEModuleFunction sceRtcFormatRFC2822 = new HLEModuleFunction("sceRtc", "sceRtcFormatRFC2822") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcFormatRFC2822 [0xC663B3B9]");
        }
    };
    public static final HLEModuleFunction sceRtcFormatRFC2822LocalTime = new HLEModuleFunction("sceRtc", "sceRtcFormatRFC2822LocalTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcFormatRFC2822LocalTime [0x7DE6711B]");
        }
    };
    public static final HLEModuleFunction sceRtcFormatRFC3339 = new HLEModuleFunction("sceRtc", "sceRtcFormatRFC3339") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcFormatRFC3339 [0x0498FB3C]");
        }
    };
    public static final HLEModuleFunction sceRtcFormatRFC3339LocalTime = new HLEModuleFunction("sceRtc", "sceRtcFormatRFC3339LocalTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcFormatRFC3339LocalTime [0x27F98543]");
        }
    };
    public static final HLEModuleFunction sceRtcParseDateTime = new HLEModuleFunction("sceRtc", "sceRtcParseDateTime") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcParseDateTime [0xDFBC5F16]");
        }
    };
    public static final HLEModuleFunction sceRtcParseRFC3339 = new HLEModuleFunction("sceRtc", "sceRtcParseRFC3339") {

        @Override
        public void execute(Processor cpu, Memory mem) {
            System.out.println("Unimplement function sceRtcParseRFC3339 [0x28E1E988]");
        }
    };
};
