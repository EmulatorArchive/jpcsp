/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class sceHttp implements HLEModule {
	@Override
	public String getName() { return "sceHttp"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(sceHttpInitFunction, 0xAB1ABE07);
			mm.addFunction(sceHttpEndFunction, 0xD1C8945E);
			mm.addFunction(sceHttpCreateTemplateFunction, 0x9B1F1F36);
			mm.addFunction(sceHttpDeleteTemplateFunction, 0xFCF8C055);
			mm.addFunction(sceHttpCreateConnectionFunction, 0x8EEFD953);
			mm.addFunction(sceHttpCreateConnectionWithURLFunction, 0xCDF8ECB9);
			mm.addFunction(sceHttpDeleteConnectionFunction, 0x5152773B);
			mm.addFunction(sceHttpCreateRequestFunction, 0x47347B50);
			mm.addFunction(sceHttpCreateRequestWithURLFunction, 0xB509B09E);
			mm.addFunction(sceHttpDeleteRequestFunction, 0xA5512E01);
			mm.addFunction(sceHttpSetResolveTimeOutFunction, 0x47940436);
			mm.addFunction(sceHttpSetConnectTimeOutFunction, 0x8ACD1F73);
			mm.addFunction(sceHttpSetSendTimeOutFunction, 0x9988172D);
			mm.addFunction(sceHttpSetRecvTimeOutFunction, 0x1F0FC3E3);
			mm.addFunction(sceHttpEnableKeepAliveFunction, 0x78A0D3EC);
			mm.addFunction(sceHttpDisableKeepAliveFunction, 0xC7EF2559);
			mm.addFunction(sceHttpEnableRedirectFunction, 0x0809C831);
			mm.addFunction(sceHttpDisableRedirectFunction, 0x1A0EBB69);
			mm.addFunction(sceHttpEnableAuthFunction, 0x9FC5F10D);
			mm.addFunction(sceHttpDisableAuthFunction, 0xAE948FEE);
			mm.addFunction(sceHttpEnableCookieFunction, 0x0DAFA58F);
			mm.addFunction(sceHttpDisableCookieFunction, 0x0B12ABFB);
			mm.addFunction(sceHttpInitCacheFunction, 0xA6800C34);
			mm.addFunction(sceHttpEndCacheFunction, 0x78B54C09);
			mm.addFunction(sceHttpEnableCacheFunction, 0x59E6D16F);
			mm.addFunction(sceHttpDisableCacheFunction, 0xCCBD167A);
			mm.addFunction(sceHttpSendRequestFunction, 0xBB70706F);
			mm.addFunction(sceHttpAbortRequestFunction, 0xC10B6BD9);
			mm.addFunction(sceHttpGetContentLengthFunction, 0x0282A3BD);
			mm.addFunction(sceHttpGetStatusCodeFunction, 0x4CC7D78F);
			mm.addFunction(sceHttpGetAllHeaderFunction, 0xDB266CCF);
			mm.addFunction(sceHttpReadDataFunction, 0xEDEEB999);
			mm.addFunction(sceHttpSetMallocFunctionFunction, 0xF49934F6);
			mm.addFunction(sceHttpSetAuthInfoCBFunction, 0x2A6C3296);
			mm.addFunction(sceHttpDeleteHeaderFunction, 0x15540184);
			mm.addFunction(sceHttpAddExtraHeaderFunction, 0x3EABA285);
			mm.addFunction(sceHttpSetProxyFunction, 0xF0F46C62);
			mm.addFunction(sceHttpGetProxyFunction, 0xD70D4847);
			mm.addFunction(sceHttpGetNetworkErrnoFunction, 0xD081EC8F);
			mm.addFunction(sceHttpsInitFunction, 0xE4D21302);
			mm.addFunction(sceHttpsInitWithPathFunction, 0x68AB0F86);
			mm.addFunction(sceHttpsLoadDefaultCertFunction, 0x87797BDD);
			mm.addFunction(sceHttpsEndFunction, 0xF9D8EB63);
			mm.addFunction(sceHttpsEnableOptionFunction, 0xBAC31BF1);
			mm.addFunction(sceHttpsDisableOptionFunction, 0xB3FAF831);
			mm.addFunction(sceHttpsGetSslErrorFunction, 0xAB1540D5);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(sceHttpInitFunction);
			mm.removeFunction(sceHttpEndFunction);
			mm.removeFunction(sceHttpCreateTemplateFunction);
			mm.removeFunction(sceHttpDeleteTemplateFunction);
			mm.removeFunction(sceHttpCreateConnectionFunction);
			mm.removeFunction(sceHttpCreateConnectionWithURLFunction);
			mm.removeFunction(sceHttpDeleteConnectionFunction);
			mm.removeFunction(sceHttpCreateRequestFunction);
			mm.removeFunction(sceHttpCreateRequestWithURLFunction);
			mm.removeFunction(sceHttpDeleteRequestFunction);
			mm.removeFunction(sceHttpSetResolveTimeOutFunction);
			mm.removeFunction(sceHttpSetConnectTimeOutFunction);
			mm.removeFunction(sceHttpSetSendTimeOutFunction);
			mm.removeFunction(sceHttpSetRecvTimeOutFunction);
			mm.removeFunction(sceHttpEnableKeepAliveFunction);
			mm.removeFunction(sceHttpDisableKeepAliveFunction);
			mm.removeFunction(sceHttpEnableRedirectFunction);
			mm.removeFunction(sceHttpDisableRedirectFunction);
			mm.removeFunction(sceHttpEnableAuthFunction);
			mm.removeFunction(sceHttpDisableAuthFunction);
			mm.removeFunction(sceHttpEnableCookieFunction);
			mm.removeFunction(sceHttpDisableCookieFunction);
			mm.removeFunction(sceHttpInitCacheFunction);
			mm.removeFunction(sceHttpEndCacheFunction);
			mm.removeFunction(sceHttpEnableCacheFunction);
			mm.removeFunction(sceHttpDisableCacheFunction);
			mm.removeFunction(sceHttpSendRequestFunction);
			mm.removeFunction(sceHttpAbortRequestFunction);
			mm.removeFunction(sceHttpGetContentLengthFunction);
			mm.removeFunction(sceHttpGetStatusCodeFunction);
			mm.removeFunction(sceHttpGetAllHeaderFunction);
			mm.removeFunction(sceHttpReadDataFunction);
			mm.removeFunction(sceHttpSetMallocFunctionFunction);
			mm.removeFunction(sceHttpSetAuthInfoCBFunction);
			mm.removeFunction(sceHttpDeleteHeaderFunction);
			mm.removeFunction(sceHttpAddExtraHeaderFunction);
			mm.removeFunction(sceHttpSetProxyFunction);
			mm.removeFunction(sceHttpGetProxyFunction);
			mm.removeFunction(sceHttpGetNetworkErrnoFunction);
			mm.removeFunction(sceHttpsInitFunction);
			mm.removeFunction(sceHttpsInitWithPathFunction);
			mm.removeFunction(sceHttpsLoadDefaultCertFunction);
			mm.removeFunction(sceHttpsEndFunction);
			mm.removeFunction(sceHttpsEnableOptionFunction);
			mm.removeFunction(sceHttpsDisableOptionFunction);
			mm.removeFunction(sceHttpsGetSslErrorFunction);
			
		}
	}
	
	
	public void sceHttpInit(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpInit [0xAB1ABE07]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpEnd(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpEnd [0xD1C8945E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpCreateTemplate(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpCreateTemplate [0x9B1F1F36]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDeleteTemplate(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDeleteTemplate [0xFCF8C055]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpCreateConnection(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpCreateConnection [0x8EEFD953]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpCreateConnectionWithURL(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpCreateConnectionWithURL [0xCDF8ECB9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDeleteConnection(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDeleteConnection [0x5152773B]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpCreateRequest(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpCreateRequest [0x47347B50]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpCreateRequestWithURL(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpCreateRequestWithURL [0xB509B09E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDeleteRequest(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDeleteRequest [0xA5512E01]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSetResolveTimeOut(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSetResolveTimeOut [0x47940436]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSetConnectTimeOut(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSetConnectTimeOut [0x8ACD1F73]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSetSendTimeOut(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSetSendTimeOut [0x9988172D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSetRecvTimeOut(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSetRecvTimeOut [0x1F0FC3E3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpEnableKeepAlive(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpEnableKeepAlive [0x78A0D3EC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDisableKeepAlive(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDisableKeepAlive [0xC7EF2559]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpEnableRedirect(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpEnableRedirect [0x0809C831]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDisableRedirect(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDisableRedirect [0x1A0EBB69]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpEnableAuth(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpEnableAuth [0x9FC5F10D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDisableAuth(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDisableAuth [0xAE948FEE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpEnableCookie(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpEnableCookie [0x0DAFA58F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDisableCookie(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDisableCookie [0x0B12ABFB]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpInitCache(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpInitCache [0xA6800C34]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpEndCache(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpEndCache [0x78B54C09]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpEnableCache(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpEnableCache [0x59E6D16F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDisableCache(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDisableCache [0xCCBD167A]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSendRequest(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSendRequest [0xBB70706F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpAbortRequest(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpAbortRequest [0xC10B6BD9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpGetContentLength(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpGetContentLength [0x0282A3BD]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpGetStatusCode(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpGetStatusCode [0x4CC7D78F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpGetAllHeader(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpGetAllHeader [0xDB266CCF]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpReadData(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpReadData [0xEDEEB999]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSetMallocFunction(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSetMallocFunction [0xF49934F6]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSetAuthInfoCB(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSetAuthInfoCB [0x2A6C3296]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpDeleteHeader(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpDeleteHeader [0x15540184]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpAddExtraHeader(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpAddExtraHeader [0x3EABA285]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpSetProxy(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpSetProxy [0xF0F46C62]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpGetProxy(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpGetProxy [0xD70D4847]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpGetNetworkErrno(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpGetNetworkErrno [0xD081EC8F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpsInit(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpsInit [0xE4D21302]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpsInitWithPath(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpsInitWithPath [0x68AB0F86]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpsLoadDefaultCert(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpsLoadDefaultCert [0x87797BDD]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpsEnd(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpsEnd [0xF9D8EB63]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpsEnableOption(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpsEnableOption [0xBAC31BF1]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpsDisableOption(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpsDisableOption [0xB3FAF831]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceHttpsGetSslError(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceHttpsGetSslError [0xAB1540D5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction sceHttpInitFunction = new HLEModuleFunction("sceHttp", "sceHttpInit") {
		@Override
		public final void execute(Processor processor) {
			sceHttpInit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpInit(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpEndFunction = new HLEModuleFunction("sceHttp", "sceHttpEnd") {
		@Override
		public final void execute(Processor processor) {
			sceHttpEnd(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpEnd(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpCreateTemplateFunction = new HLEModuleFunction("sceHttp", "sceHttpCreateTemplate") {
		@Override
		public final void execute(Processor processor) {
			sceHttpCreateTemplate(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpCreateTemplate(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDeleteTemplateFunction = new HLEModuleFunction("sceHttp", "sceHttpDeleteTemplate") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDeleteTemplate(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDeleteTemplate(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpCreateConnectionFunction = new HLEModuleFunction("sceHttp", "sceHttpCreateConnection") {
		@Override
		public final void execute(Processor processor) {
			sceHttpCreateConnection(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpCreateConnection(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpCreateConnectionWithURLFunction = new HLEModuleFunction("sceHttp", "sceHttpCreateConnectionWithURL") {
		@Override
		public final void execute(Processor processor) {
			sceHttpCreateConnectionWithURL(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpCreateConnectionWithURL(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDeleteConnectionFunction = new HLEModuleFunction("sceHttp", "sceHttpDeleteConnection") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDeleteConnection(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDeleteConnection(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpCreateRequestFunction = new HLEModuleFunction("sceHttp", "sceHttpCreateRequest") {
		@Override
		public final void execute(Processor processor) {
			sceHttpCreateRequest(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpCreateRequest(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpCreateRequestWithURLFunction = new HLEModuleFunction("sceHttp", "sceHttpCreateRequestWithURL") {
		@Override
		public final void execute(Processor processor) {
			sceHttpCreateRequestWithURL(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpCreateRequestWithURL(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDeleteRequestFunction = new HLEModuleFunction("sceHttp", "sceHttpDeleteRequest") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDeleteRequest(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDeleteRequest(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSetResolveTimeOutFunction = new HLEModuleFunction("sceHttp", "sceHttpSetResolveTimeOut") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSetResolveTimeOut(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSetResolveTimeOut(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSetConnectTimeOutFunction = new HLEModuleFunction("sceHttp", "sceHttpSetConnectTimeOut") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSetConnectTimeOut(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSetConnectTimeOut(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSetSendTimeOutFunction = new HLEModuleFunction("sceHttp", "sceHttpSetSendTimeOut") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSetSendTimeOut(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSetSendTimeOut(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSetRecvTimeOutFunction = new HLEModuleFunction("sceHttp", "sceHttpSetRecvTimeOut") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSetRecvTimeOut(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSetRecvTimeOut(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpEnableKeepAliveFunction = new HLEModuleFunction("sceHttp", "sceHttpEnableKeepAlive") {
		@Override
		public final void execute(Processor processor) {
			sceHttpEnableKeepAlive(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpEnableKeepAlive(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDisableKeepAliveFunction = new HLEModuleFunction("sceHttp", "sceHttpDisableKeepAlive") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDisableKeepAlive(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDisableKeepAlive(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpEnableRedirectFunction = new HLEModuleFunction("sceHttp", "sceHttpEnableRedirect") {
		@Override
		public final void execute(Processor processor) {
			sceHttpEnableRedirect(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpEnableRedirect(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDisableRedirectFunction = new HLEModuleFunction("sceHttp", "sceHttpDisableRedirect") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDisableRedirect(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDisableRedirect(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpEnableAuthFunction = new HLEModuleFunction("sceHttp", "sceHttpEnableAuth") {
		@Override
		public final void execute(Processor processor) {
			sceHttpEnableAuth(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpEnableAuth(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDisableAuthFunction = new HLEModuleFunction("sceHttp", "sceHttpDisableAuth") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDisableAuth(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDisableAuth(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpEnableCookieFunction = new HLEModuleFunction("sceHttp", "sceHttpEnableCookie") {
		@Override
		public final void execute(Processor processor) {
			sceHttpEnableCookie(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpEnableCookie(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDisableCookieFunction = new HLEModuleFunction("sceHttp", "sceHttpDisableCookie") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDisableCookie(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDisableCookie(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpInitCacheFunction = new HLEModuleFunction("sceHttp", "sceHttpInitCache") {
		@Override
		public final void execute(Processor processor) {
			sceHttpInitCache(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpInitCache(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpEndCacheFunction = new HLEModuleFunction("sceHttp", "sceHttpEndCache") {
		@Override
		public final void execute(Processor processor) {
			sceHttpEndCache(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpEndCache(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpEnableCacheFunction = new HLEModuleFunction("sceHttp", "sceHttpEnableCache") {
		@Override
		public final void execute(Processor processor) {
			sceHttpEnableCache(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpEnableCache(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDisableCacheFunction = new HLEModuleFunction("sceHttp", "sceHttpDisableCache") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDisableCache(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDisableCache(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSendRequestFunction = new HLEModuleFunction("sceHttp", "sceHttpSendRequest") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSendRequest(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSendRequest(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpAbortRequestFunction = new HLEModuleFunction("sceHttp", "sceHttpAbortRequest") {
		@Override
		public final void execute(Processor processor) {
			sceHttpAbortRequest(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpAbortRequest(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpGetContentLengthFunction = new HLEModuleFunction("sceHttp", "sceHttpGetContentLength") {
		@Override
		public final void execute(Processor processor) {
			sceHttpGetContentLength(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpGetContentLength(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpGetStatusCodeFunction = new HLEModuleFunction("sceHttp", "sceHttpGetStatusCode") {
		@Override
		public final void execute(Processor processor) {
			sceHttpGetStatusCode(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpGetStatusCode(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpGetAllHeaderFunction = new HLEModuleFunction("sceHttp", "sceHttpGetAllHeader") {
		@Override
		public final void execute(Processor processor) {
			sceHttpGetAllHeader(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpGetAllHeader(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpReadDataFunction = new HLEModuleFunction("sceHttp", "sceHttpReadData") {
		@Override
		public final void execute(Processor processor) {
			sceHttpReadData(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpReadData(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSetMallocFunctionFunction = new HLEModuleFunction("sceHttp", "sceHttpSetMallocFunction") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSetMallocFunction(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSetMallocFunction(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSetAuthInfoCBFunction = new HLEModuleFunction("sceHttp", "sceHttpSetAuthInfoCB") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSetAuthInfoCB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSetAuthInfoCB(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpDeleteHeaderFunction = new HLEModuleFunction("sceHttp", "sceHttpDeleteHeader") {
		@Override
		public final void execute(Processor processor) {
			sceHttpDeleteHeader(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpDeleteHeader(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpAddExtraHeaderFunction = new HLEModuleFunction("sceHttp", "sceHttpAddExtraHeader") {
		@Override
		public final void execute(Processor processor) {
			sceHttpAddExtraHeader(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpAddExtraHeader(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpSetProxyFunction = new HLEModuleFunction("sceHttp", "sceHttpSetProxy") {
		@Override
		public final void execute(Processor processor) {
			sceHttpSetProxy(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpSetProxy(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpGetProxyFunction = new HLEModuleFunction("sceHttp", "sceHttpGetProxy") {
		@Override
		public final void execute(Processor processor) {
			sceHttpGetProxy(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpGetProxy(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpGetNetworkErrnoFunction = new HLEModuleFunction("sceHttp", "sceHttpGetNetworkErrno") {
		@Override
		public final void execute(Processor processor) {
			sceHttpGetNetworkErrno(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpGetNetworkErrno(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpsInitFunction = new HLEModuleFunction("sceHttp", "sceHttpsInit") {
		@Override
		public final void execute(Processor processor) {
			sceHttpsInit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpsInit(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpsInitWithPathFunction = new HLEModuleFunction("sceHttp", "sceHttpsInitWithPath") {
		@Override
		public final void execute(Processor processor) {
			sceHttpsInitWithPath(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpsInitWithPath(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpsLoadDefaultCertFunction = new HLEModuleFunction("sceHttp", "sceHttpsLoadDefaultCert") {
		@Override
		public final void execute(Processor processor) {
			sceHttpsLoadDefaultCert(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpsLoadDefaultCert(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpsEndFunction = new HLEModuleFunction("sceHttp", "sceHttpsEnd") {
		@Override
		public final void execute(Processor processor) {
			sceHttpsEnd(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpsEnd(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpsEnableOptionFunction = new HLEModuleFunction("sceHttp", "sceHttpsEnableOption") {
		@Override
		public final void execute(Processor processor) {
			sceHttpsEnableOption(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpsEnableOption(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpsDisableOptionFunction = new HLEModuleFunction("sceHttp", "sceHttpsDisableOption") {
		@Override
		public final void execute(Processor processor) {
			sceHttpsDisableOption(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpsDisableOption(processor);";
		}
	};
    
	public final HLEModuleFunction sceHttpsGetSslErrorFunction = new HLEModuleFunction("sceHttp", "sceHttpsGetSslError") {
		@Override
		public final void execute(Processor processor) {
			sceHttpsGetSslError(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceHttpModule.sceHttpsGetSslError(processor);";
		}
	};
    
};
