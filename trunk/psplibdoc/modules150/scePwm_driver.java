/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class scePwm_driver implements HLEModule {
	@Override
	public String getName() { return "scePwm_driver"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(scePwmInitFunction, 0x68BA9CC1);
			mm.addFunction(scePwmEndFunction, 0xB3169427);
			mm.addFunction(scePwmSuspendFunction, 0x526F94FC);
			mm.addFunction(scePwmResumeFunction, 0xE449F656);
			mm.addFunction(scePwmStartFunction, 0x850ED3D3);
			mm.addFunction(scePwmStopFunction, 0x1FC555BE);
			mm.addFunction(scePwm_driver_AB6D2E36Function, 0xAB6D2E36);
			mm.addFunction(scePwm_driver_F624C1A0Function, 0xF624C1A0);
			mm.addFunction(scePwmIsLoadingFunction, 0x93F30DAC);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(scePwmInitFunction);
			mm.removeFunction(scePwmEndFunction);
			mm.removeFunction(scePwmSuspendFunction);
			mm.removeFunction(scePwmResumeFunction);
			mm.removeFunction(scePwmStartFunction);
			mm.removeFunction(scePwmStopFunction);
			mm.removeFunction(scePwm_driver_AB6D2E36Function);
			mm.removeFunction(scePwm_driver_F624C1A0Function);
			mm.removeFunction(scePwmIsLoadingFunction);
			
		}
	}
	
	
	public void scePwmInit(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwmInit [0x68BA9CC1]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwmEnd(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwmEnd [0xB3169427]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwmSuspend(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwmSuspend [0x526F94FC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwmResume(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwmResume [0xE449F656]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwmStart(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwmStart [0x850ED3D3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwmStop(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwmStop [0x1FC555BE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwm_driver_AB6D2E36(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwm_driver_AB6D2E36 [0xAB6D2E36]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwm_driver_F624C1A0(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwm_driver_F624C1A0 [0xF624C1A0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePwmIsLoading(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePwmIsLoading [0x93F30DAC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction scePwmInitFunction = new HLEModuleFunction("scePwm_driver", "scePwmInit") {
		@Override
		public final void execute(Processor processor) {
			scePwmInit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwmInit(processor);";
		}
	};
    
	public final HLEModuleFunction scePwmEndFunction = new HLEModuleFunction("scePwm_driver", "scePwmEnd") {
		@Override
		public final void execute(Processor processor) {
			scePwmEnd(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwmEnd(processor);";
		}
	};
    
	public final HLEModuleFunction scePwmSuspendFunction = new HLEModuleFunction("scePwm_driver", "scePwmSuspend") {
		@Override
		public final void execute(Processor processor) {
			scePwmSuspend(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwmSuspend(processor);";
		}
	};
    
	public final HLEModuleFunction scePwmResumeFunction = new HLEModuleFunction("scePwm_driver", "scePwmResume") {
		@Override
		public final void execute(Processor processor) {
			scePwmResume(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwmResume(processor);";
		}
	};
    
	public final HLEModuleFunction scePwmStartFunction = new HLEModuleFunction("scePwm_driver", "scePwmStart") {
		@Override
		public final void execute(Processor processor) {
			scePwmStart(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwmStart(processor);";
		}
	};
    
	public final HLEModuleFunction scePwmStopFunction = new HLEModuleFunction("scePwm_driver", "scePwmStop") {
		@Override
		public final void execute(Processor processor) {
			scePwmStop(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwmStop(processor);";
		}
	};
    
	public final HLEModuleFunction scePwm_driver_AB6D2E36Function = new HLEModuleFunction("scePwm_driver", "scePwm_driver_AB6D2E36") {
		@Override
		public final void execute(Processor processor) {
			scePwm_driver_AB6D2E36(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwm_driver_AB6D2E36(processor);";
		}
	};
    
	public final HLEModuleFunction scePwm_driver_F624C1A0Function = new HLEModuleFunction("scePwm_driver", "scePwm_driver_F624C1A0") {
		@Override
		public final void execute(Processor processor) {
			scePwm_driver_F624C1A0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwm_driver_F624C1A0(processor);";
		}
	};
    
	public final HLEModuleFunction scePwmIsLoadingFunction = new HLEModuleFunction("scePwm_driver", "scePwmIsLoading") {
		@Override
		public final void execute(Processor processor) {
			scePwmIsLoading(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePwm_driverModule.scePwmIsLoading(processor);";
		}
	};
    
};
