/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class sceNet_lib implements HLEModule {
	@Override
	public String getName() { return "sceNet_lib"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(sceNet_lib_3B617AA0Function, 0x3B617AA0);
			mm.addFunction(sceNet_lib_DB88F458Function, 0xDB88F458);
			mm.addFunction(sceNet_lib_B6FC0A5BFunction, 0xB6FC0A5B);
			mm.addFunction(sceNet_lib_C431A214Function, 0xC431A214);
			mm.addFunction(sceNet_lib_BFCFEFF6Function, 0xBFCFEFF6);
			mm.addFunction(sceNet_lib_E1F4696FFunction, 0xE1F4696F);
			mm.addFunction(sceNetConfigUpInterfaceFunction, 0x5216CBF5);
			mm.addFunction(sceNetConfigDownInterfaceFunction, 0xD2422E4D);
			mm.addFunction(sceNetConfigGetIfEventFunction, 0xD1BE2CE9);
			mm.addFunction(sceNetConfigSetIfEventFlagFunction, 0xAB7DD9A5);
			mm.addFunction(sceNetConfigGetIfEventFlagFunction, 0x80E1933E);
			mm.addFunction(sceNet_lib_7BA3ED91Function, 0x7BA3ED91);
			mm.addFunction(sceNet_lib_03164B12Function, 0x03164B12);
			mm.addFunction(sceNet_lib_389728ABFunction, 0x389728AB);
			mm.addFunction(sceNet_lib_4BF9E1DEFunction, 0x4BF9E1DE);
			mm.addFunction(sceNet_lib_D5B64E37Function, 0xD5B64E37);
			mm.addFunction(sceNet_lib_DA02F383Function, 0xDA02F383);
			mm.addFunction(sceNet_lib_AFA11338Function, 0xAFA11338);
			mm.addFunction(sceNet_lib_B20F84F8Function, 0xB20F84F8);
			mm.addFunction(sceNet_lib_83FE280AFunction, 0x83FE280A);
			mm.addFunction(sceNet_lib_4F8F3808Function, 0x4F8F3808);
			mm.addFunction(sceNet_lib_891723D5Function, 0x891723D5);
			mm.addFunction(sceNet_lib_0DFF67F9Function, 0x0DFF67F9);
			mm.addFunction(sceNet_lib_F355C73BFunction, 0xF355C73B);
			mm.addFunction(sceNet_lib_A55C914FFunction, 0xA55C914F);
			mm.addFunction(sceNet_lib_0D633F53Function, 0x0D633F53);
			mm.addFunction(sceNetConfigGetEtherAddrFunction, 0x8D33C11D);
			mm.addFunction(_sce_pspnet_if_existFunction, 0x522A971B);
			mm.addFunction(sceNetRandFunction, 0x1858883D);
			mm.addFunction(sceNetGetSystemClockSecFunction, 0x75D9985C);
			mm.addFunction(_sce_pspnet_callout_initFunction, 0x25CC373A);
			mm.addFunction(sceNet_lib_DCBC596EFunction, 0xDCBC596E);
			mm.addFunction(_sce_pspnet_callout_resetFunction, 0x7C86FBA4);
			mm.addFunction(sceNet_lib_A8B6205AFunction, 0xA8B6205A);
			mm.addFunction(_sce_pspnet_callout_stopFunction, 0xA93A93E9);
			mm.addFunction(sceNet_lib_6B294EE4Function, 0x6B294EE4);
			mm.addFunction(sceNet_lib_51C209B2Function, 0x51C209B2);
			mm.addFunction(_sce_pspnet_tabortFunction, 0xC9C97945);
			mm.addFunction(_sce_pspnet_tiwakeupFunction, 0xB8C4A858);
			mm.addFunction(_sce_pspnet_tsleepFunction, 0x205E8D17);
			mm.addFunction(sceNet_lib_F6DB0A0BFunction, 0xF6DB0A0B);
			mm.addFunction(_sce_pspnet_wakeupFunction, 0x7574FDA1);
			mm.addFunction(_sce_pspnet_thread_enterFunction, 0xCA3CF5EB);
			mm.addFunction(sceNet_lib_757085B0Function, 0x757085B0);
			mm.addFunction(_sce_pspnet_get_thread_errnoFunction, 0x435843CB);
			mm.addFunction(_sce_pspnet_set_thread_errnoFunction, 0xD861EF33);
			mm.addFunction(_sce_pspnet_get_threadinfoFunction, 0xBB2B3DDB);
			mm.addFunction(_sce_pspnet_lock_threadinfoFunction, 0x6D5D42D7);
			mm.addFunction(_sce_pspnet_unlock_threadinfoFunction, 0xC21E18B2);
			mm.addFunction(_sce_pspnet_thread_busycountFunction, 0x45452B7B);
			mm.addFunction(_sce_pspnet_spllockFunction, 0x94B44F26);
			mm.addFunction(_sce_pspnet_splunlockFunction, 0x515B2F33);
			mm.addFunction(sceNet_lib_6DC71518Function, 0x6DC71518);
			mm.addFunction(sceNet_lib_7C3B86C5Function, 0x7C3B86C5);
			mm.addFunction(sceNet_lib_05D525E4Function, 0x05D525E4);
			mm.addFunction(_sce_pspnet_ifunitFunction, 0x1D10419C);
			mm.addFunction(sceNet_lib_C2EC2EEAFunction, 0xC2EC2EEA);
			mm.addFunction(_sce_pspnet_get_ifindexFunction, 0x710BD467);
			mm.addFunction(_sce_pspnet_if_attachFunction, 0x701DDDC3);
			mm.addFunction(_sce_pspnet_if_detachFunction, 0xD5A03BC0);
			mm.addFunction(_sce_pspnet_if_upFunction, 0xFA6DE6A6);
			mm.addFunction(_sce_pspnet_if_downFunction, 0xEDB11CB4);
			mm.addFunction(sceNet_lib_8C55B410Function, 0x8C55B410);
			mm.addFunction(_sce_pspnet_ifioctlFunction, 0x13A8B98A);
			mm.addFunction(_sce_pspnet_ifioctl_syncFunction, 0xEA42B353);
			mm.addFunction(sceNet_lib_45945E8DFunction, 0x45945E8D);
			mm.addFunction(sceNet_lib_D60225A3Function, 0xD60225A3);
			mm.addFunction(sceNet_lib_EB6DE71AFunction, 0xEB6DE71A);
			mm.addFunction(sceNet_lib_EDCC871EFunction, 0xEDCC871E);
			mm.addFunction(sceNet_lib_4B2B3416Function, 0x4B2B3416);
			mm.addFunction(sceNet_lib_2B42872FFunction, 0x2B42872F);
			mm.addFunction(_sce_pspnet_hashinitFunction, 0xC4261339);
			mm.addFunction(_sce_pspnet_hashdoneFunction, 0x41FD8B5C);
			mm.addFunction(sceNet_lib_92633D8DFunction, 0x92633D8D);
			mm.addFunction(_sce_pspnet_selwakeupFunction, 0xB9C780C7);
			mm.addFunction(sceNet_lib_B68E1EEAFunction, 0xB68E1EEA);
			mm.addFunction(sceNet_lib_E155112DFunction, 0xE155112D);
			mm.addFunction(sceNet_lib_41621EB0Function, 0x41621EB0);
			mm.addFunction(sceNet_lib_2E005032Function, 0x2E005032);
			mm.addFunction(sceNet_lib_33B230BDFunction, 0x33B230BD);
			mm.addFunction(sceNetEnablePSPWlanResetFunction, 0x976AB1E9);
			mm.addFunction(sceNet_lib_4C8FD452Function, 0x4C8FD452);
			mm.addFunction(sceNet_lib_5ED457BEFunction, 0x5ED457BE);
			mm.addFunction(sceNet_lib_31F3CDA1Function, 0x31F3CDA1);
			mm.addFunction(sceNet_lib_1F94AFD9Function, 0x1F94AFD9);
			mm.addFunction(sceNet_lib_0A5A8751Function, 0x0A5A8751);
			mm.addFunction(sceNet_lib_B3A48B7FFunction, 0xB3A48B7F);
			mm.addFunction(sceNet_lib_949F1FBBFunction, 0x949F1FBB);
			mm.addFunction(sceNet_lib_13672F83Function, 0x13672F83);
			mm.addFunction(sceNet_lib_5C7C7381Function, 0x5C7C7381);
			mm.addFunction(sceNet_lib_86B6DCD9Function, 0x86B6DCD9);
			mm.addFunction(sceNet_lib_7AE91FB4Function, 0x7AE91FB4);
			mm.addFunction(sceNet_lib_572AD6EDFunction, 0x572AD6ED);
			mm.addFunction(sceNet_lib_87DC7A7EFunction, 0x87DC7A7E);
			mm.addFunction(sceNet_lib_991FF86DFunction, 0x991FF86D);
			mm.addFunction(sceNet_lib_5505D820Function, 0x5505D820);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(sceNet_lib_3B617AA0Function);
			mm.removeFunction(sceNet_lib_DB88F458Function);
			mm.removeFunction(sceNet_lib_B6FC0A5BFunction);
			mm.removeFunction(sceNet_lib_C431A214Function);
			mm.removeFunction(sceNet_lib_BFCFEFF6Function);
			mm.removeFunction(sceNet_lib_E1F4696FFunction);
			mm.removeFunction(sceNetConfigUpInterfaceFunction);
			mm.removeFunction(sceNetConfigDownInterfaceFunction);
			mm.removeFunction(sceNetConfigGetIfEventFunction);
			mm.removeFunction(sceNetConfigSetIfEventFlagFunction);
			mm.removeFunction(sceNetConfigGetIfEventFlagFunction);
			mm.removeFunction(sceNet_lib_7BA3ED91Function);
			mm.removeFunction(sceNet_lib_03164B12Function);
			mm.removeFunction(sceNet_lib_389728ABFunction);
			mm.removeFunction(sceNet_lib_4BF9E1DEFunction);
			mm.removeFunction(sceNet_lib_D5B64E37Function);
			mm.removeFunction(sceNet_lib_DA02F383Function);
			mm.removeFunction(sceNet_lib_AFA11338Function);
			mm.removeFunction(sceNet_lib_B20F84F8Function);
			mm.removeFunction(sceNet_lib_83FE280AFunction);
			mm.removeFunction(sceNet_lib_4F8F3808Function);
			mm.removeFunction(sceNet_lib_891723D5Function);
			mm.removeFunction(sceNet_lib_0DFF67F9Function);
			mm.removeFunction(sceNet_lib_F355C73BFunction);
			mm.removeFunction(sceNet_lib_A55C914FFunction);
			mm.removeFunction(sceNet_lib_0D633F53Function);
			mm.removeFunction(sceNetConfigGetEtherAddrFunction);
			mm.removeFunction(_sce_pspnet_if_existFunction);
			mm.removeFunction(sceNetRandFunction);
			mm.removeFunction(sceNetGetSystemClockSecFunction);
			mm.removeFunction(_sce_pspnet_callout_initFunction);
			mm.removeFunction(sceNet_lib_DCBC596EFunction);
			mm.removeFunction(_sce_pspnet_callout_resetFunction);
			mm.removeFunction(sceNet_lib_A8B6205AFunction);
			mm.removeFunction(_sce_pspnet_callout_stopFunction);
			mm.removeFunction(sceNet_lib_6B294EE4Function);
			mm.removeFunction(sceNet_lib_51C209B2Function);
			mm.removeFunction(_sce_pspnet_tabortFunction);
			mm.removeFunction(_sce_pspnet_tiwakeupFunction);
			mm.removeFunction(_sce_pspnet_tsleepFunction);
			mm.removeFunction(sceNet_lib_F6DB0A0BFunction);
			mm.removeFunction(_sce_pspnet_wakeupFunction);
			mm.removeFunction(_sce_pspnet_thread_enterFunction);
			mm.removeFunction(sceNet_lib_757085B0Function);
			mm.removeFunction(_sce_pspnet_get_thread_errnoFunction);
			mm.removeFunction(_sce_pspnet_set_thread_errnoFunction);
			mm.removeFunction(_sce_pspnet_get_threadinfoFunction);
			mm.removeFunction(_sce_pspnet_lock_threadinfoFunction);
			mm.removeFunction(_sce_pspnet_unlock_threadinfoFunction);
			mm.removeFunction(_sce_pspnet_thread_busycountFunction);
			mm.removeFunction(_sce_pspnet_spllockFunction);
			mm.removeFunction(_sce_pspnet_splunlockFunction);
			mm.removeFunction(sceNet_lib_6DC71518Function);
			mm.removeFunction(sceNet_lib_7C3B86C5Function);
			mm.removeFunction(sceNet_lib_05D525E4Function);
			mm.removeFunction(_sce_pspnet_ifunitFunction);
			mm.removeFunction(sceNet_lib_C2EC2EEAFunction);
			mm.removeFunction(_sce_pspnet_get_ifindexFunction);
			mm.removeFunction(_sce_pspnet_if_attachFunction);
			mm.removeFunction(_sce_pspnet_if_detachFunction);
			mm.removeFunction(_sce_pspnet_if_upFunction);
			mm.removeFunction(_sce_pspnet_if_downFunction);
			mm.removeFunction(sceNet_lib_8C55B410Function);
			mm.removeFunction(_sce_pspnet_ifioctlFunction);
			mm.removeFunction(_sce_pspnet_ifioctl_syncFunction);
			mm.removeFunction(sceNet_lib_45945E8DFunction);
			mm.removeFunction(sceNet_lib_D60225A3Function);
			mm.removeFunction(sceNet_lib_EB6DE71AFunction);
			mm.removeFunction(sceNet_lib_EDCC871EFunction);
			mm.removeFunction(sceNet_lib_4B2B3416Function);
			mm.removeFunction(sceNet_lib_2B42872FFunction);
			mm.removeFunction(_sce_pspnet_hashinitFunction);
			mm.removeFunction(_sce_pspnet_hashdoneFunction);
			mm.removeFunction(sceNet_lib_92633D8DFunction);
			mm.removeFunction(_sce_pspnet_selwakeupFunction);
			mm.removeFunction(sceNet_lib_B68E1EEAFunction);
			mm.removeFunction(sceNet_lib_E155112DFunction);
			mm.removeFunction(sceNet_lib_41621EB0Function);
			mm.removeFunction(sceNet_lib_2E005032Function);
			mm.removeFunction(sceNet_lib_33B230BDFunction);
			mm.removeFunction(sceNetEnablePSPWlanResetFunction);
			mm.removeFunction(sceNet_lib_4C8FD452Function);
			mm.removeFunction(sceNet_lib_5ED457BEFunction);
			mm.removeFunction(sceNet_lib_31F3CDA1Function);
			mm.removeFunction(sceNet_lib_1F94AFD9Function);
			mm.removeFunction(sceNet_lib_0A5A8751Function);
			mm.removeFunction(sceNet_lib_B3A48B7FFunction);
			mm.removeFunction(sceNet_lib_949F1FBBFunction);
			mm.removeFunction(sceNet_lib_13672F83Function);
			mm.removeFunction(sceNet_lib_5C7C7381Function);
			mm.removeFunction(sceNet_lib_86B6DCD9Function);
			mm.removeFunction(sceNet_lib_7AE91FB4Function);
			mm.removeFunction(sceNet_lib_572AD6EDFunction);
			mm.removeFunction(sceNet_lib_87DC7A7EFunction);
			mm.removeFunction(sceNet_lib_991FF86DFunction);
			mm.removeFunction(sceNet_lib_5505D820Function);
			
		}
	}
	
	
	public void sceNet_lib_3B617AA0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_3B617AA0 [0x3B617AA0]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_DB88F458(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_DB88F458 [0xDB88F458]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_B6FC0A5B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_B6FC0A5B [0xB6FC0A5B]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_C431A214(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_C431A214 [0xC431A214]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_BFCFEFF6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_BFCFEFF6 [0xBFCFEFF6]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_E1F4696F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_E1F4696F [0xE1F4696F]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetConfigUpInterface(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetConfigUpInterface [0x5216CBF5]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetConfigDownInterface(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetConfigDownInterface [0xD2422E4D]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetConfigGetIfEvent(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetConfigGetIfEvent [0xD1BE2CE9]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetConfigSetIfEventFlag(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetConfigSetIfEventFlag [0xAB7DD9A5]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetConfigGetIfEventFlag(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetConfigGetIfEventFlag [0x80E1933E]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_7BA3ED91(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_7BA3ED91 [0x7BA3ED91]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_03164B12(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_03164B12 [0x03164B12]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_389728AB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_389728AB [0x389728AB]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_4BF9E1DE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_4BF9E1DE [0x4BF9E1DE]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_D5B64E37(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_D5B64E37 [0xD5B64E37]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_DA02F383(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_DA02F383 [0xDA02F383]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_AFA11338(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_AFA11338 [0xAFA11338]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_B20F84F8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_B20F84F8 [0xB20F84F8]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_83FE280A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_83FE280A [0x83FE280A]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_4F8F3808(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_4F8F3808 [0x4F8F3808]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_891723D5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_891723D5 [0x891723D5]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_0DFF67F9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_0DFF67F9 [0x0DFF67F9]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_F355C73B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_F355C73B [0xF355C73B]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_A55C914F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_A55C914F [0xA55C914F]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_0D633F53(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_0D633F53 [0x0D633F53]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetConfigGetEtherAddr(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetConfigGetEtherAddr [0x8D33C11D]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_if_exist(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_if_exist [0x522A971B]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetRand(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetRand [0x1858883D]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetGetSystemClockSec(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetGetSystemClockSec [0x75D9985C]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_callout_init(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_callout_init [0x25CC373A]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_DCBC596E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_DCBC596E [0xDCBC596E]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_callout_reset(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_callout_reset [0x7C86FBA4]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_A8B6205A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_A8B6205A [0xA8B6205A]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_callout_stop(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_callout_stop [0xA93A93E9]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_6B294EE4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_6B294EE4 [0x6B294EE4]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_51C209B2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_51C209B2 [0x51C209B2]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_tabort(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_tabort [0xC9C97945]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_tiwakeup(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_tiwakeup [0xB8C4A858]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_tsleep(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_tsleep [0x205E8D17]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_F6DB0A0B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_F6DB0A0B [0xF6DB0A0B]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_wakeup(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_wakeup [0x7574FDA1]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_thread_enter(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_thread_enter [0xCA3CF5EB]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_757085B0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_757085B0 [0x757085B0]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_get_thread_errno(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_get_thread_errno [0x435843CB]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_set_thread_errno(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_set_thread_errno [0xD861EF33]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_get_threadinfo(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_get_threadinfo [0xBB2B3DDB]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_lock_threadinfo(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_lock_threadinfo [0x6D5D42D7]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_unlock_threadinfo(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_unlock_threadinfo [0xC21E18B2]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_thread_busycount(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_thread_busycount [0x45452B7B]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_spllock(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_spllock [0x94B44F26]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_splunlock(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_splunlock [0x515B2F33]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_6DC71518(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_6DC71518 [0x6DC71518]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_7C3B86C5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_7C3B86C5 [0x7C3B86C5]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_05D525E4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_05D525E4 [0x05D525E4]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_ifunit(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_ifunit [0x1D10419C]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_C2EC2EEA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_C2EC2EEA [0xC2EC2EEA]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_get_ifindex(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_get_ifindex [0x710BD467]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_if_attach(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_if_attach [0x701DDDC3]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_if_detach(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_if_detach [0xD5A03BC0]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_if_up(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_if_up [0xFA6DE6A6]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_if_down(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_if_down [0xEDB11CB4]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_8C55B410(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_8C55B410 [0x8C55B410]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_ifioctl(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_ifioctl [0x13A8B98A]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_ifioctl_sync(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_ifioctl_sync [0xEA42B353]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_45945E8D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_45945E8D [0x45945E8D]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_D60225A3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_D60225A3 [0xD60225A3]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_EB6DE71A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_EB6DE71A [0xEB6DE71A]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_EDCC871E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_EDCC871E [0xEDCC871E]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_4B2B3416(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_4B2B3416 [0x4B2B3416]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_2B42872F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_2B42872F [0x2B42872F]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_hashinit(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_hashinit [0xC4261339]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_hashdone(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_hashdone [0x41FD8B5C]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_92633D8D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_92633D8D [0x92633D8D]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void _sce_pspnet_selwakeup(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function _sce_pspnet_selwakeup [0xB9C780C7]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_B68E1EEA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_B68E1EEA [0xB68E1EEA]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_E155112D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_E155112D [0xE155112D]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_41621EB0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_41621EB0 [0x41621EB0]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_2E005032(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_2E005032 [0x2E005032]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_33B230BD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_33B230BD [0x33B230BD]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNetEnablePSPWlanReset(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNetEnablePSPWlanReset [0x976AB1E9]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_4C8FD452(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_4C8FD452 [0x4C8FD452]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_5ED457BE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_5ED457BE [0x5ED457BE]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_31F3CDA1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_31F3CDA1 [0x31F3CDA1]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_1F94AFD9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_1F94AFD9 [0x1F94AFD9]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_0A5A8751(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_0A5A8751 [0x0A5A8751]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_B3A48B7F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_B3A48B7F [0xB3A48B7F]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_949F1FBB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_949F1FBB [0x949F1FBB]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_13672F83(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_13672F83 [0x13672F83]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_5C7C7381(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_5C7C7381 [0x5C7C7381]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_86B6DCD9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_86B6DCD9 [0x86B6DCD9]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_7AE91FB4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_7AE91FB4 [0x7AE91FB4]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_572AD6ED(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_572AD6ED [0x572AD6ED]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_87DC7A7E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_87DC7A7E [0x87DC7A7E]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_991FF86D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_991FF86D [0x991FF86D]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public void sceNet_lib_5505D820(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;
		
		/* put your own code here instead */

		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  ...  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  ... float f19 = cpu.fpr[19];

		System.out.println("Unimplemented NID function sceNet_lib_5505D820 [0x5505D820]");

		cpu.gpr[2] = 0xDEADC0DE;

		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32); cpu.fpr[0] = result;
	}
    
	public final HLEModuleFunction sceNet_lib_3B617AA0Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_3B617AA0") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_3B617AA0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_3B617AA0(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_DB88F458Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_DB88F458") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_DB88F458(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_DB88F458(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_B6FC0A5BFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_B6FC0A5B") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_B6FC0A5B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_B6FC0A5B(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_C431A214Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_C431A214") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_C431A214(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_C431A214(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_BFCFEFF6Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_BFCFEFF6") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_BFCFEFF6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_BFCFEFF6(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_E1F4696FFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_E1F4696F") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_E1F4696F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_E1F4696F(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetConfigUpInterfaceFunction = new HLEModuleFunction("sceNet_lib", "sceNetConfigUpInterface") {
		@Override
		public final void execute(Processor processor) {
			sceNetConfigUpInterface(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetConfigUpInterface(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetConfigDownInterfaceFunction = new HLEModuleFunction("sceNet_lib", "sceNetConfigDownInterface") {
		@Override
		public final void execute(Processor processor) {
			sceNetConfigDownInterface(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetConfigDownInterface(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetConfigGetIfEventFunction = new HLEModuleFunction("sceNet_lib", "sceNetConfigGetIfEvent") {
		@Override
		public final void execute(Processor processor) {
			sceNetConfigGetIfEvent(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetConfigGetIfEvent(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetConfigSetIfEventFlagFunction = new HLEModuleFunction("sceNet_lib", "sceNetConfigSetIfEventFlag") {
		@Override
		public final void execute(Processor processor) {
			sceNetConfigSetIfEventFlag(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetConfigSetIfEventFlag(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetConfigGetIfEventFlagFunction = new HLEModuleFunction("sceNet_lib", "sceNetConfigGetIfEventFlag") {
		@Override
		public final void execute(Processor processor) {
			sceNetConfigGetIfEventFlag(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetConfigGetIfEventFlag(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_7BA3ED91Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_7BA3ED91") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_7BA3ED91(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_7BA3ED91(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_03164B12Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_03164B12") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_03164B12(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_03164B12(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_389728ABFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_389728AB") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_389728AB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_389728AB(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_4BF9E1DEFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_4BF9E1DE") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_4BF9E1DE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_4BF9E1DE(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_D5B64E37Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_D5B64E37") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_D5B64E37(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_D5B64E37(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_DA02F383Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_DA02F383") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_DA02F383(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_DA02F383(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_AFA11338Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_AFA11338") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_AFA11338(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_AFA11338(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_B20F84F8Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_B20F84F8") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_B20F84F8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_B20F84F8(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_83FE280AFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_83FE280A") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_83FE280A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_83FE280A(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_4F8F3808Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_4F8F3808") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_4F8F3808(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_4F8F3808(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_891723D5Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_891723D5") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_891723D5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_891723D5(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_0DFF67F9Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_0DFF67F9") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_0DFF67F9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_0DFF67F9(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_F355C73BFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_F355C73B") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_F355C73B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_F355C73B(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_A55C914FFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_A55C914F") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_A55C914F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_A55C914F(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_0D633F53Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_0D633F53") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_0D633F53(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_0D633F53(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetConfigGetEtherAddrFunction = new HLEModuleFunction("sceNet_lib", "sceNetConfigGetEtherAddr") {
		@Override
		public final void execute(Processor processor) {
			sceNetConfigGetEtherAddr(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetConfigGetEtherAddr(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_if_existFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_if_exist") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_if_exist(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_if_exist(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetRandFunction = new HLEModuleFunction("sceNet_lib", "sceNetRand") {
		@Override
		public final void execute(Processor processor) {
			sceNetRand(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetRand(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetGetSystemClockSecFunction = new HLEModuleFunction("sceNet_lib", "sceNetGetSystemClockSec") {
		@Override
		public final void execute(Processor processor) {
			sceNetGetSystemClockSec(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetGetSystemClockSec(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_callout_initFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_callout_init") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_callout_init(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_callout_init(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_DCBC596EFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_DCBC596E") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_DCBC596E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_DCBC596E(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_callout_resetFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_callout_reset") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_callout_reset(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_callout_reset(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_A8B6205AFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_A8B6205A") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_A8B6205A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_A8B6205A(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_callout_stopFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_callout_stop") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_callout_stop(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_callout_stop(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_6B294EE4Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_6B294EE4") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_6B294EE4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_6B294EE4(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_51C209B2Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_51C209B2") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_51C209B2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_51C209B2(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_tabortFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_tabort") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_tabort(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_tabort(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_tiwakeupFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_tiwakeup") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_tiwakeup(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_tiwakeup(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_tsleepFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_tsleep") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_tsleep(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_tsleep(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_F6DB0A0BFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_F6DB0A0B") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_F6DB0A0B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_F6DB0A0B(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_wakeupFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_wakeup") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_wakeup(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_wakeup(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_thread_enterFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_thread_enter") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_thread_enter(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_thread_enter(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_757085B0Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_757085B0") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_757085B0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_757085B0(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_get_thread_errnoFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_get_thread_errno") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_get_thread_errno(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_get_thread_errno(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_set_thread_errnoFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_set_thread_errno") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_set_thread_errno(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_set_thread_errno(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_get_threadinfoFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_get_threadinfo") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_get_threadinfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_get_threadinfo(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_lock_threadinfoFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_lock_threadinfo") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_lock_threadinfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_lock_threadinfo(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_unlock_threadinfoFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_unlock_threadinfo") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_unlock_threadinfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_unlock_threadinfo(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_thread_busycountFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_thread_busycount") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_thread_busycount(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_thread_busycount(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_spllockFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_spllock") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_spllock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_spllock(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_splunlockFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_splunlock") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_splunlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_splunlock(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_6DC71518Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_6DC71518") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_6DC71518(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_6DC71518(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_7C3B86C5Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_7C3B86C5") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_7C3B86C5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_7C3B86C5(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_05D525E4Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_05D525E4") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_05D525E4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_05D525E4(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_ifunitFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_ifunit") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_ifunit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_ifunit(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_C2EC2EEAFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_C2EC2EEA") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_C2EC2EEA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_C2EC2EEA(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_get_ifindexFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_get_ifindex") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_get_ifindex(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_get_ifindex(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_if_attachFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_if_attach") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_if_attach(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_if_attach(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_if_detachFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_if_detach") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_if_detach(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_if_detach(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_if_upFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_if_up") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_if_up(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_if_up(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_if_downFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_if_down") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_if_down(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_if_down(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_8C55B410Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_8C55B410") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_8C55B410(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_8C55B410(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_ifioctlFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_ifioctl") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_ifioctl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_ifioctl(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_ifioctl_syncFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_ifioctl_sync") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_ifioctl_sync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_ifioctl_sync(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_45945E8DFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_45945E8D") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_45945E8D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_45945E8D(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_D60225A3Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_D60225A3") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_D60225A3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_D60225A3(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_EB6DE71AFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_EB6DE71A") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_EB6DE71A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_EB6DE71A(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_EDCC871EFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_EDCC871E") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_EDCC871E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_EDCC871E(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_4B2B3416Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_4B2B3416") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_4B2B3416(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_4B2B3416(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_2B42872FFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_2B42872F") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_2B42872F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_2B42872F(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_hashinitFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_hashinit") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_hashinit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_hashinit(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_hashdoneFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_hashdone") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_hashdone(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_hashdone(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_92633D8DFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_92633D8D") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_92633D8D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_92633D8D(processor);";
		}
	};
    
	public final HLEModuleFunction _sce_pspnet_selwakeupFunction = new HLEModuleFunction("sceNet_lib", "_sce_pspnet_selwakeup") {
		@Override
		public final void execute(Processor processor) {
			_sce_pspnet_selwakeup(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule._sce_pspnet_selwakeup(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_B68E1EEAFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_B68E1EEA") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_B68E1EEA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_B68E1EEA(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_E155112DFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_E155112D") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_E155112D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_E155112D(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_41621EB0Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_41621EB0") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_41621EB0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_41621EB0(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_2E005032Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_2E005032") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_2E005032(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_2E005032(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_33B230BDFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_33B230BD") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_33B230BD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_33B230BD(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetEnablePSPWlanResetFunction = new HLEModuleFunction("sceNet_lib", "sceNetEnablePSPWlanReset") {
		@Override
		public final void execute(Processor processor) {
			sceNetEnablePSPWlanReset(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNetEnablePSPWlanReset(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_4C8FD452Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_4C8FD452") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_4C8FD452(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_4C8FD452(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_5ED457BEFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_5ED457BE") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_5ED457BE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_5ED457BE(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_31F3CDA1Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_31F3CDA1") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_31F3CDA1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_31F3CDA1(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_1F94AFD9Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_1F94AFD9") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_1F94AFD9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_1F94AFD9(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_0A5A8751Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_0A5A8751") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_0A5A8751(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_0A5A8751(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_B3A48B7FFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_B3A48B7F") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_B3A48B7F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_B3A48B7F(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_949F1FBBFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_949F1FBB") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_949F1FBB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_949F1FBB(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_13672F83Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_13672F83") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_13672F83(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_13672F83(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_5C7C7381Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_5C7C7381") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_5C7C7381(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_5C7C7381(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_86B6DCD9Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_86B6DCD9") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_86B6DCD9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_86B6DCD9(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_7AE91FB4Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_7AE91FB4") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_7AE91FB4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_7AE91FB4(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_572AD6EDFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_572AD6ED") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_572AD6ED(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_572AD6ED(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_87DC7A7EFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_87DC7A7E") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_87DC7A7E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_87DC7A7E(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_991FF86DFunction = new HLEModuleFunction("sceNet_lib", "sceNet_lib_991FF86D") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_991FF86D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_991FF86D(processor);";
		}
	};
    
	public final HLEModuleFunction sceNet_lib_5505D820Function = new HLEModuleFunction("sceNet_lib", "sceNet_lib_5505D820") {
		@Override
		public final void execute(Processor processor) {
			sceNet_lib_5505D820(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNet_libModule.sceNet_lib_5505D820(processor);";
		}
	};
    
};
