/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class scePEQ implements HLEModule {
	@Override
	public String getName() { return "scePEQ"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(scePEQ_FC45514BFunction, 0xFC45514B);
			mm.addFunction(scePEQ_F7EA0632Function, 0xF7EA0632);
			mm.addFunction(scePEQ_ED13C3B5Function, 0xED13C3B5);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(scePEQ_FC45514BFunction);
			mm.removeFunction(scePEQ_F7EA0632Function);
			mm.removeFunction(scePEQ_ED13C3B5Function);
			
		}
	}
	
	
	public void scePEQ_FC45514B(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePEQ_FC45514B [0xFC45514B]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePEQ_F7EA0632(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePEQ_F7EA0632 [0xF7EA0632]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void scePEQ_ED13C3B5(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function scePEQ_ED13C3B5 [0xED13C3B5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction scePEQ_FC45514BFunction = new HLEModuleFunction("scePEQ", "scePEQ_FC45514B") {
		@Override
		public final void execute(Processor processor) {
			scePEQ_FC45514B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePEQModule.scePEQ_FC45514B(processor);";
		}
	};
    
	public final HLEModuleFunction scePEQ_F7EA0632Function = new HLEModuleFunction("scePEQ", "scePEQ_F7EA0632") {
		@Override
		public final void execute(Processor processor) {
			scePEQ_F7EA0632(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePEQModule.scePEQ_F7EA0632(processor);";
		}
	};
    
	public final HLEModuleFunction scePEQ_ED13C3B5Function = new HLEModuleFunction("scePEQ", "scePEQ_ED13C3B5") {
		@Override
		public final void execute(Processor processor) {
			scePEQ_ED13C3B5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.scePEQModule.scePEQ_ED13C3B5(processor);";
		}
	};
    
};
