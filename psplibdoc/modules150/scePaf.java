/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class scePaf implements HLEModule {
	@Override
	public String getName() { return "scePaf"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
			
			mm.addFunction(scePaf_C9831AFFFunction, 0xC9831AFF);
			
			mm.addFunction(scePaf_BFE9E90BFunction, 0xBFE9E90B);
			
			mm.addFunction(scePaf_5FAC9869Function, 0x5FAC9869);
			
			mm.addFunction(scePaf_FCB4E053Function, 0xFCB4E053);
			
			mm.addFunction(scePaf_26DE971CFunction, 0x26DE971C);
			
			mm.addFunction(scePaf_613E9AA2Function, 0x613E9AA2);
			
			mm.addFunction(scePaf_40C95283Function, 0x40C95283);
			
			mm.addFunction(scePaf_B61E88F2Function, 0xB61E88F2);
			
			mm.addFunction(scePaf_545FE2DAFunction, 0x545FE2DA);
			
			mm.addFunction(scePaf_7EC15225Function, 0x7EC15225);
			
			mm.addFunction(scePaf_60DECA7EFunction, 0x60DECA7E);
			
			mm.addFunction(scePaf_FD4C9F47Function, 0xFD4C9F47);
			
			mm.addFunction(scePaf_F95EA3F1Function, 0xF95EA3F1);
			
			mm.addFunction(scePaf_6829D7AFFunction, 0x6829D7AF);
			
			mm.addFunction(scePaf_CA79D58BFunction, 0xCA79D58B);
			
			mm.addFunction(scePaf_66FE90D7Function, 0x66FE90D7);
			
			mm.addFunction(scePaf_980228BAFunction, 0x980228BA);
			
			mm.addFunction(scePaf_296897BCFunction, 0x296897BC);
			
			mm.addFunction(scePaf_DEDF238FFunction, 0xDEDF238F);
			
			mm.addFunction(scePaf_7BED034EFunction, 0x7BED034E);
			
			mm.addFunction(scePaf_B3D58D25Function, 0xB3D58D25);
			
			mm.addFunction(scePaf_44AAF96CFunction, 0x44AAF96C);
			
			mm.addFunction(scePaf_49A81B18Function, 0x49A81B18);
			
			mm.addFunction(scePaf_FF2F98C6Function, 0xFF2F98C6);
			
			mm.addFunction(scePaf_77D981F5Function, 0x77D981F5);
			
			mm.addFunction(scePaf_45D851D1Function, 0x45D851D1);
			
			mm.addFunction(scePaf_71712601Function, 0x71712601);
			
			mm.addFunction(scePaf_71460F7CFunction, 0x71460F7C);
			
			mm.addFunction(scePaf_ABBBB335Function, 0xABBBB335);
			
			mm.addFunction(scePaf_07A5F495Function, 0x07A5F495);
			
			mm.addFunction(scePaf_F1552447Function, 0xF1552447);
			
			mm.addFunction(scePaf_83944053Function, 0x83944053);
			
			mm.addFunction(scePaf_0B4C0DB6Function, 0x0B4C0DB6);
			
			mm.addFunction(scePaf_2FDC80B3Function, 0x2FDC80B3);
			
			mm.addFunction(scePaf_993E9FDCFunction, 0x993E9FDC);
			
			mm.addFunction(scePaf_3188E7DBFunction, 0x3188E7DB);
			
			mm.addFunction(scePaf_DC38941BFunction, 0xDC38941B);
			
			mm.addFunction(scePaf_F0B4CAE7Function, 0xF0B4CAE7);
			
			mm.addFunction(scePaf_6C234A6AFunction, 0x6C234A6A);
			
			mm.addFunction(scePaf_37A98AE9Function, 0x37A98AE9);
			
			mm.addFunction(scePaf_3DD2A27BFunction, 0x3DD2A27B);
			
			mm.addFunction(scePaf_9870A25BFunction, 0x9870A25B);
			
			mm.addFunction(scePaf_503BA324Function, 0x503BA324);
			
			mm.addFunction(scePaf_2FA84441Function, 0x2FA84441);
			
			mm.addFunction(scePaf_84BD418FFunction, 0x84BD418F);
			
			mm.addFunction(scePaf_902515FBFunction, 0x902515FB);
			
			mm.addFunction(scePaf_3586BE05Function, 0x3586BE05);
			
			mm.addFunction(scePaf_2FA0EDDCFunction, 0x2FA0EDDC);
			
			mm.addFunction(scePaf_3FBD9639Function, 0x3FBD9639);
			
			mm.addFunction(scePaf_6BA9C299Function, 0x6BA9C299);
			
			mm.addFunction(scePaf_F1B52E86Function, 0xF1B52E86);
			
			mm.addFunction(scePaf_10B901E7Function, 0x10B901E7);
			
			mm.addFunction(scePaf_4370175AFunction, 0x4370175A);
			
			mm.addFunction(scePaf_809A4F83Function, 0x809A4F83);
			
			mm.addFunction(scePaf_A82E3C19Function, 0xA82E3C19);
			
			mm.addFunction(scePaf_ED2B47FAFunction, 0xED2B47FA);
			
			mm.addFunction(scePaf_26168DD3Function, 0x26168DD3);
			
			mm.addFunction(scePaf_626D68A1Function, 0x626D68A1);
			
			mm.addFunction(scePaf_FBA47E77Function, 0xFBA47E77);
			
			mm.addFunction(scePaf_44A0BCE4Function, 0x44A0BCE4);
			
			mm.addFunction(scePaf_4B1A374CFunction, 0x4B1A374C);
			
			mm.addFunction(scePaf_1D5D9A68Function, 0x1D5D9A68);
			
			mm.addFunction(scePaf_51AAAAF4Function, 0x51AAAAF4);
			
			mm.addFunction(scePaf_54C0DD23Function, 0x54C0DD23);
			
			mm.addFunction(scePaf_9F10613FFunction, 0x9F10613F);
			
			mm.addFunction(scePaf_8F12B63AFunction, 0x8F12B63A);
			
			mm.addFunction(scePaf_9D0192FDFunction, 0x9D0192FD);
			
			mm.addFunction(scePaf_FEAFC77AFunction, 0xFEAFC77A);
			
			mm.addFunction(scePaf_99A5CD38Function, 0x99A5CD38);
			
			mm.addFunction(scePaf_CE699963Function, 0xCE699963);
			
			mm.addFunction(scePaf_CB2198ABFunction, 0xCB2198AB);
			
			mm.addFunction(scePaf_11EF5210Function, 0x11EF5210);
			
			mm.addFunction(scePaf_B7E6052BFunction, 0xB7E6052B);
			
			mm.addFunction(scePaf_F13EBB78Function, 0xF13EBB78);
			
			mm.addFunction(scePaf_4E67BB08Function, 0x4E67BB08);
			
			mm.addFunction(scePaf_B3D2C3BBFunction, 0xB3D2C3BB);
			
			mm.addFunction(scePaf_962FA087Function, 0x962FA087);
			
			mm.addFunction(scePaf_D4C6CC7AFunction, 0xD4C6CC7A);
			
			mm.addFunction(scePaf_927854C5Function, 0x927854C5);
			
			mm.addFunction(scePaf_D02C0D2EFunction, 0xD02C0D2E);
			
			mm.addFunction(scePaf_2FF0A287Function, 0x2FF0A287);
			
			mm.addFunction(scePaf_F47CA1C2Function, 0xF47CA1C2);
			
			mm.addFunction(scePaf_EAA5AFF6Function, 0xEAA5AFF6);
			
			mm.addFunction(scePaf_58BFC2ACFunction, 0x58BFC2AC);
			
			mm.addFunction(scePaf_72514A05Function, 0x72514A05);
			
			mm.addFunction(scePaf_A69BABE3Function, 0xA69BABE3);
			
			mm.addFunction(scePaf_9430557BFunction, 0x9430557B);
			
			mm.addFunction(scePaf_607713A6Function, 0x607713A6);
			
			mm.addFunction(scePaf_5EFC5387Function, 0x5EFC5387);
			
			mm.addFunction(scePaf_79C3CBF7Function, 0x79C3CBF7);
			
			mm.addFunction(scePaf_3A4934E3Function, 0x3A4934E3);
			
			mm.addFunction(scePaf_4FF65BDCFunction, 0x4FF65BDC);
			
			mm.addFunction(scePaf_26DF747FFunction, 0x26DF747F);
			
			mm.addFunction(scePaf_41BCFB59Function, 0x41BCFB59);
			
			mm.addFunction(scePaf_FA05BF7BFunction, 0xFA05BF7B);
			
			mm.addFunction(scePaf_AAA8D3DAFunction, 0xAAA8D3DA);
			
			mm.addFunction(scePaf_A18DB948Function, 0xA18DB948);
			
			mm.addFunction(scePaf_2313DDCAFunction, 0x2313DDCA);
			
			mm.addFunction(scePaf_4FC2470CFunction, 0x4FC2470C);
			
			mm.addFunction(scePaf_B77039E4Function, 0xB77039E4);
			
			mm.addFunction(scePaf_0C6EEA21Function, 0x0C6EEA21);
			
			mm.addFunction(scePaf_CB7B666EFunction, 0xCB7B666E);
			
			mm.addFunction(scePaf_7B6F0E32Function, 0x7B6F0E32);
			
			mm.addFunction(scePaf_256218C2Function, 0x256218C2);
			
			mm.addFunction(scePaf_96C46364Function, 0x96C46364);
			
			mm.addFunction(scePaf_7C31F453Function, 0x7C31F453);
			
			mm.addFunction(scePaf_503FA456Function, 0x503FA456);
			
			mm.addFunction(scePaf_D5F5E68FFunction, 0xD5F5E68F);
			
			mm.addFunction(scePaf_CAE6374AFunction, 0xCAE6374A);
			
			mm.addFunction(scePaf_84A71447Function, 0x84A71447);
			
			mm.addFunction(scePaf_D2463C79Function, 0xD2463C79);
			
			mm.addFunction(scePaf_ED3E4EB1Function, 0xED3E4EB1);
			
			mm.addFunction(scePaf_8DB4B066Function, 0x8DB4B066);
			
			mm.addFunction(scePaf_B104EC1BFunction, 0xB104EC1B);
			
			mm.addFunction(scePaf_B3659499Function, 0xB3659499);
			
			mm.addFunction(scePaf_6E94BA7BFunction, 0x6E94BA7B);
			
			mm.addFunction(scePaf_FF74C932Function, 0xFF74C932);
			
			mm.addFunction(scePaf_F6F3E99EFunction, 0xF6F3E99E);
			
			mm.addFunction(scePaf_A72594EFFunction, 0xA72594EF);
			
			mm.addFunction(scePaf_86926BB9Function, 0x86926BB9);
			
			mm.addFunction(scePaf_5075C799Function, 0x5075C799);
			
			mm.addFunction(scePaf_A76B9604Function, 0xA76B9604);
			
			mm.addFunction(scePaf_E1C76B22Function, 0xE1C76B22);
			
			mm.addFunction(scePaf_44EB8C62Function, 0x44EB8C62);
			
			mm.addFunction(scePaf_C2C25056Function, 0xC2C25056);
			
			mm.addFunction(scePaf_AEEF2A7CFunction, 0xAEEF2A7C);
			
			mm.addFunction(scePaf_55CC4749Function, 0x55CC4749);
			
			mm.addFunction(scePaf_37DD37B8Function, 0x37DD37B8);
			
			mm.addFunction(scePaf_16033F84Function, 0x16033F84);
			
			mm.addFunction(scePaf_A0A25707Function, 0xA0A25707);
			
			mm.addFunction(scePaf_E5BAC873Function, 0xE5BAC873);
			
			mm.addFunction(scePaf_0A189A1AFunction, 0x0A189A1A);
			
			mm.addFunction(scePaf_CB7CCB28Function, 0xCB7CCB28);
			
			mm.addFunction(scePaf_7B099943Function, 0x7B099943);
			
			mm.addFunction(scePaf_E9BF6BEBFunction, 0xE9BF6BEB);
			
			mm.addFunction(scePaf_CEAC29F3Function, 0xCEAC29F3);
			
			mm.addFunction(scePaf_275BCDC6Function, 0x275BCDC6);
			
			mm.addFunction(scePaf_65C19AC0Function, 0x65C19AC0);
			
			mm.addFunction(scePaf_8BA04801Function, 0x8BA04801);
			
			mm.addFunction(scePaf_93A60B78Function, 0x93A60B78);
			
			mm.addFunction(scePaf_AEE1CBADFunction, 0xAEE1CBAD);
			
			mm.addFunction(scePaf_19A779E2Function, 0x19A779E2);
			
			mm.addFunction(scePaf_CDC81771Function, 0xCDC81771);
			
			mm.addFunction(scePaf_C1FAF826Function, 0xC1FAF826);
			
			mm.addFunction(scePaf_9C9B6732Function, 0x9C9B6732);
			
			mm.addFunction(scePaf_78054045Function, 0x78054045);
			
			mm.addFunction(scePaf_DF9138A8Function, 0xDF9138A8);
			
			mm.addFunction(scePaf_F7FB133EFunction, 0xF7FB133E);
			
			mm.addFunction(scePaf_CFF2B69CFunction, 0xCFF2B69C);
			
			mm.addFunction(scePaf_EF52945BFunction, 0xEF52945B);
			
			mm.addFunction(scePaf_BAA88CDAFunction, 0xBAA88CDA);
			
			mm.addFunction(scePaf_BDC894D8Function, 0xBDC894D8);
			
			mm.addFunction(scePaf_5045C01FFunction, 0x5045C01F);
			
			mm.addFunction(scePaf_A89157EEFunction, 0xA89157EE);
			
			mm.addFunction(scePaf_1F0B8678Function, 0x1F0B8678);
			
			mm.addFunction(scePaf_33096E46Function, 0x33096E46);
			
			mm.addFunction(scePaf_47E35A50Function, 0x47E35A50);
			
			mm.addFunction(scePaf_25391E36Function, 0x25391E36);
			
			mm.addFunction(scePaf_50FFFCD2Function, 0x50FFFCD2);
			
			mm.addFunction(scePaf_206C1F70Function, 0x206C1F70);
			
			mm.addFunction(scePaf_0C66B594Function, 0x0C66B594);
			
			mm.addFunction(scePaf_39F89900Function, 0x39F89900);
			
			mm.addFunction(scePaf_B6841F37Function, 0xB6841F37);
			
			mm.addFunction(scePaf_360956CCFunction, 0x360956CC);
			
			mm.addFunction(scePaf_0AEDCDA1Function, 0x0AEDCDA1);
			
			mm.addFunction(scePaf_222526B6Function, 0x222526B6);
			
			mm.addFunction(scePaf_41A7BDD2Function, 0x41A7BDD2);
			
			mm.addFunction(scePaf_D07AF3FAFunction, 0xD07AF3FA);
			
			mm.addFunction(scePaf_29DC646FFunction, 0x29DC646F);
			
			mm.addFunction(scePaf_2A6499A5Function, 0x2A6499A5);
			
			mm.addFunction(scePaf_4FCA0DE9Function, 0x4FCA0DE9);
			
			mm.addFunction(scePaf_E796C85BFunction, 0xE796C85B);
			
			mm.addFunction(scePaf_BAFF6806Function, 0xBAFF6806);
			
			mm.addFunction(scePaf_AA978F61Function, 0xAA978F61);
			
			mm.addFunction(scePaf_FCF42D6DFunction, 0xFCF42D6D);
			
			mm.addFunction(scePaf_5DB527D4Function, 0x5DB527D4);
			
			mm.addFunction(scePaf_2E6CA751Function, 0x2E6CA751);
			
			mm.addFunction(scePaf_3F52824FFunction, 0x3F52824F);
			
			mm.addFunction(scePaf_1C286704Function, 0x1C286704);
			
			mm.addFunction(scePaf_672036FEFunction, 0x672036FE);
			
			mm.addFunction(scePaf_08A02EFFFunction, 0x08A02EFF);
			
			mm.addFunction(scePaf_01A35C15Function, 0x01A35C15);
			
			mm.addFunction(scePaf_470ABD60Function, 0x470ABD60);
			
			mm.addFunction(scePaf_B42D784EFunction, 0xB42D784E);
			
			mm.addFunction(scePaf_84485F54Function, 0x84485F54);
			
			mm.addFunction(scePaf_87516C3BFunction, 0x87516C3B);
			
			mm.addFunction(scePaf_715E8DABFunction, 0x715E8DAB);
			
			mm.addFunction(scePaf_D35B454AFunction, 0xD35B454A);
			
			mm.addFunction(scePaf_CFB1A402Function, 0xCFB1A402);
			
			mm.addFunction(scePaf_5D7F1F27Function, 0x5D7F1F27);
			
			mm.addFunction(scePaf_3291BDDDFunction, 0x3291BDDD);
			
			mm.addFunction(scePaf_515EE222Function, 0x515EE222);
			
			mm.addFunction(scePaf_3987B5C4Function, 0x3987B5C4);
			
			mm.addFunction(scePaf_F89ECA28Function, 0xF89ECA28);
			
			mm.addFunction(scePaf_4AF8E417Function, 0x4AF8E417);
			
			mm.addFunction(scePaf_76D5A950Function, 0x76D5A950);
			
			mm.addFunction(scePaf_F577BC82Function, 0xF577BC82);
			
			mm.addFunction(scePaf_369E597AFunction, 0x369E597A);
			
			mm.addFunction(scePaf_293A01D8Function, 0x293A01D8);
			
			mm.addFunction(scePaf_45386654Function, 0x45386654);
			
			mm.addFunction(scePaf_73D49419Function, 0x73D49419);
			
			mm.addFunction(scePaf_AD007AB6Function, 0xAD007AB6);
			
			mm.addFunction(scePaf_F49F3C59Function, 0xF49F3C59);
			
			mm.addFunction(scePaf_05EEE8A6Function, 0x05EEE8A6);
			
			mm.addFunction(scePaf_15EF8E18Function, 0x15EF8E18);
			
			mm.addFunction(scePaf_FE84212FFunction, 0xFE84212F);
			
			mm.addFunction(scePaf_9D92765EFunction, 0x9D92765E);
			
			mm.addFunction(scePaf_98A6C193Function, 0x98A6C193);
			
			mm.addFunction(scePaf_1943B875Function, 0x1943B875);
			
			mm.addFunction(scePaf_D7074BD1Function, 0xD7074BD1);
			
			mm.addFunction(scePaf_BD49CAEFFunction, 0xBD49CAEF);
			
			mm.addFunction(scePaf_6C4976AFFunction, 0x6C4976AF);
			
			mm.addFunction(scePaf_85112756Function, 0x85112756);
			
			mm.addFunction(scePaf_FDB39519Function, 0xFDB39519);
			
			mm.addFunction(scePaf_DA3A6D88Function, 0xDA3A6D88);
			
			mm.addFunction(scePaf_199896A3Function, 0x199896A3);
			
			mm.addFunction(scePaf_5458E412Function, 0x5458E412);
			
			mm.addFunction(scePaf_43374E9EFunction, 0x43374E9E);
			
			mm.addFunction(scePaf_6797988CFunction, 0x6797988C);
			
			mm.addFunction(scePaf_449C8821Function, 0x449C8821);
			
			mm.addFunction(scePaf_6C386158Function, 0x6C386158);
			
			mm.addFunction(scePaf_8E751FCCFunction, 0x8E751FCC);
			
			mm.addFunction(scePaf_F32223ACFunction, 0xF32223AC);
			
			mm.addFunction(scePaf_40B21F4FFunction, 0x40B21F4F);
			
			mm.addFunction(scePaf_501E9BC9Function, 0x501E9BC9);
			
			mm.addFunction(scePaf_EFAC3E9FFunction, 0xEFAC3E9F);
			
			mm.addFunction(scePaf_C933B3C5Function, 0xC933B3C5);
			
			mm.addFunction(scePaf_F554C7C7Function, 0xF554C7C7);
			
			mm.addFunction(scePaf_4E60E34CFunction, 0x4E60E34C);
			
			mm.addFunction(scePaf_39C55C03Function, 0x39C55C03);
			
			mm.addFunction(scePaf_65920294Function, 0x65920294);
			
			mm.addFunction(scePaf_37DDBDD8Function, 0x37DDBDD8);
			
			mm.addFunction(scePaf_92A46B32Function, 0x92A46B32);
			
			mm.addFunction(scePaf_905347E9Function, 0x905347E9);
			
			mm.addFunction(scePaf_DF887DEDFunction, 0xDF887DED);
			
			mm.addFunction(scePaf_DC544921Function, 0xDC544921);
			
			mm.addFunction(scePaf_585B93BCFunction, 0x585B93BC);
			
			mm.addFunction(scePaf_1AD33D73Function, 0x1AD33D73);
			
			mm.addFunction(scePaf_A4F53FEDFunction, 0xA4F53FED);
			
			mm.addFunction(scePaf_01CF521EFunction, 0x01CF521E);
			
			mm.addFunction(scePaf_3C68DCB7Function, 0x3C68DCB7);
			
			mm.addFunction(scePaf_3F81333AFunction, 0x3F81333A);
			
			mm.addFunction(scePaf_9A8E343EFunction, 0x9A8E343E);
			
			mm.addFunction(scePaf_95040C08Function, 0x95040C08);
			
			mm.addFunction(scePaf_07BA4C80Function, 0x07BA4C80);
			
			mm.addFunction(scePaf_0CFDBE2FFunction, 0x0CFDBE2F);
			
			mm.addFunction(scePaf_3829AC24Function, 0x3829AC24);
			
			mm.addFunction(scePaf_1F0E9712Function, 0x1F0E9712);
			
			mm.addFunction(scePaf_D24E4016Function, 0xD24E4016);
			
			mm.addFunction(scePaf_409E25A3Function, 0x409E25A3);
			
			mm.addFunction(scePaf_DC8B0309Function, 0xDC8B0309);
			
			mm.addFunction(scePaf_EB553D60Function, 0xEB553D60);
			
			mm.addFunction(scePaf_4EA868E6Function, 0x4EA868E6);
			
			mm.addFunction(scePaf_8AB03D91Function, 0x8AB03D91);
			
			mm.addFunction(scePaf_5CA7F421Function, 0x5CA7F421);
			
			mm.addFunction(scePaf_B7865607Function, 0xB7865607);
			
			mm.addFunction(scePaf_95948FB6Function, 0x95948FB6);
			
			mm.addFunction(scePaf_BA433BEFFunction, 0xBA433BEF);
			
			mm.addFunction(scePaf_ED89C94BFunction, 0xED89C94B);
			
			mm.addFunction(scePaf_0E8A3B52Function, 0x0E8A3B52);
			
			mm.addFunction(scePaf_D587826CFunction, 0xD587826C);
			
			mm.addFunction(scePaf_61B105C0Function, 0x61B105C0);
			
			mm.addFunction(scePaf_DAD477C1Function, 0xDAD477C1);
			
			mm.addFunction(scePaf_D91B2651Function, 0xD91B2651);
			
			mm.addFunction(scePaf_A02E66FAFunction, 0xA02E66FA);
			
			mm.addFunction(scePaf_2D79697EFunction, 0x2D79697E);
			
			mm.addFunction(scePaf_EDF1C662Function, 0xEDF1C662);
			
			mm.addFunction(scePaf_A7818BCEFunction, 0xA7818BCE);
			
			mm.addFunction(scePaf_695BCD34Function, 0x695BCD34);
			
			mm.addFunction(scePaf_C4D819AAFunction, 0xC4D819AA);
			
			mm.addFunction(scePaf_70B92642Function, 0x70B92642);
			
			mm.addFunction(scePaf_447974D1Function, 0x447974D1);
			
			mm.addFunction(scePaf_63EA1815Function, 0x63EA1815);
			
			mm.addFunction(scePaf_CB65103EFunction, 0xCB65103E);
			
			mm.addFunction(scePaf_32B27ADDFunction, 0x32B27ADD);
			
			mm.addFunction(scePaf_ADC146F0Function, 0xADC146F0);
			
			mm.addFunction(scePaf_D5A254F9Function, 0xD5A254F9);
			
			mm.addFunction(scePaf_42F43213Function, 0x42F43213);
			
			mm.addFunction(scePaf_5D242D11Function, 0x5D242D11);
			
			mm.addFunction(scePaf_11361F12Function, 0x11361F12);
			
			mm.addFunction(scePaf_51FF9D24Function, 0x51FF9D24);
			
			mm.addFunction(scePaf_B2ED6CAAFunction, 0xB2ED6CAA);
			
			mm.addFunction(scePaf_79F4AE65Function, 0x79F4AE65);
			
			mm.addFunction(scePaf_905CF2A7Function, 0x905CF2A7);
			
			mm.addFunction(scePaf_E732CF74Function, 0xE732CF74);
			
			mm.addFunction(scePaf_B711DC69Function, 0xB711DC69);
			
			mm.addFunction(scePaf_0ED80B09Function, 0x0ED80B09);
			
			mm.addFunction(scePaf_BB457D6FFunction, 0xBB457D6F);
			
			mm.addFunction(scePaf_B6F52424Function, 0xB6F52424);
			
			mm.addFunction(scePaf_BA6B8B02Function, 0xBA6B8B02);
			
			mm.addFunction(scePaf_B9BE69FDFunction, 0xB9BE69FD);
			
			mm.addFunction(scePaf_FA758B05Function, 0xFA758B05);
			
			mm.addFunction(scePaf_FA87D725Function, 0xFA87D725);
			
			mm.addFunction(scePaf_FC37FABDFunction, 0xFC37FABD);
			
			mm.addFunction(scePaf_64775957Function, 0x64775957);
			
			mm.addFunction(scePaf_7F2442DCFunction, 0x7F2442DC);
			
			mm.addFunction(scePaf_86B41BA3Function, 0x86B41BA3);
			
			mm.addFunction(scePaf_541F36E9Function, 0x541F36E9);
			
			mm.addFunction(scePaf_86C87E62Function, 0x86C87E62);
			
			mm.addFunction(scePaf_F1546D14Function, 0xF1546D14);
			
			mm.addFunction(scePaf_6840D208Function, 0x6840D208);
			
			mm.addFunction(scePaf_D1EE972CFunction, 0xD1EE972C);
			
			mm.addFunction(scePaf_1232B7A3Function, 0x1232B7A3);
			
			mm.addFunction(scePaf_8D7FC7DBFunction, 0x8D7FC7DB);
			
			mm.addFunction(scePaf_5DE0445FFunction, 0x5DE0445F);
			
			mm.addFunction(scePaf_09AC6844Function, 0x09AC6844);
			
			mm.addFunction(scePaf_D2E0D705Function, 0xD2E0D705);
			
			mm.addFunction(scePaf_AE02F241Function, 0xAE02F241);
			
			mm.addFunction(scePaf_D1159069Function, 0xD1159069);
			
			mm.addFunction(scePaf_BFFAEE83Function, 0xBFFAEE83);
			
			mm.addFunction(scePaf_DDA68BE8Function, 0xDDA68BE8);
			
			mm.addFunction(scePaf_9AFD4AD4Function, 0x9AFD4AD4);
			
			mm.addFunction(scePaf_6E1B5B50Function, 0x6E1B5B50);
			
			mm.addFunction(scePaf_8DEB3DB3Function, 0x8DEB3DB3);
			
			mm.addFunction(scePaf_BA09CF46Function, 0xBA09CF46);
			
			mm.addFunction(scePaf_6DD28F44Function, 0x6DD28F44);
			
			mm.addFunction(scePaf_4ADAEF94Function, 0x4ADAEF94);
			
			mm.addFunction(scePaf_95708BC0Function, 0x95708BC0);
			
			mm.addFunction(scePaf_C85155C9Function, 0xC85155C9);
			
			mm.addFunction(scePaf_DEF9EBE7Function, 0xDEF9EBE7);
			
			mm.addFunction(scePaf_F23F3226Function, 0xF23F3226);
			
			mm.addFunction(scePaf_D153385EFunction, 0xD153385E);
			
			mm.addFunction(scePaf_86A5AE7DFunction, 0x86A5AE7D);
			
			mm.addFunction(scePaf_5A8D4BDBFunction, 0x5A8D4BDB);
			
			mm.addFunction(scePaf_2120282AFunction, 0x2120282A);
			
			mm.addFunction(scePaf_8159EB28Function, 0x8159EB28);
			
			mm.addFunction(scePaf_5CE11C03Function, 0x5CE11C03);
			
			mm.addFunction(scePaf_05073826Function, 0x05073826);
			
			mm.addFunction(scePaf_A4B48F00Function, 0xA4B48F00);
			
			mm.addFunction(scePaf_224C33F0Function, 0x224C33F0);
			
			mm.addFunction(scePaf_3DBE861FFunction, 0x3DBE861F);
			
			mm.addFunction(scePaf_FA78AF39Function, 0xFA78AF39);
			
			mm.addFunction(scePaf_A3761F27Function, 0xA3761F27);
			
			mm.addFunction(scePaf_DE75C2BAFunction, 0xDE75C2BA);
			
			mm.addFunction(scePaf_4129A915Function, 0x4129A915);
			
			mm.addFunction(scePaf_8A51BA1EFunction, 0x8A51BA1E);
			
			mm.addFunction(scePaf_0FFA3ECEFunction, 0x0FFA3ECE);
			
			mm.addFunction(scePaf_89582FD0Function, 0x89582FD0);
			
			mm.addFunction(scePaf_84913A3AFunction, 0x84913A3A);
			
			mm.addFunction(scePaf_06EA7CDEFunction, 0x06EA7CDE);
			
			mm.addFunction(scePaf_9563887DFunction, 0x9563887D);
			
			mm.addFunction(scePaf_21B885B8Function, 0x21B885B8);
			
			mm.addFunction(scePaf_B0FD305AFunction, 0xB0FD305A);
			
			mm.addFunction(scePaf_777635B9Function, 0x777635B9);
			
			mm.addFunction(scePaf_F8301DBCFunction, 0xF8301DBC);
			
			mm.addFunction(scePaf_5A818E41Function, 0x5A818E41);
			
			mm.addFunction(scePaf_A9970EF5Function, 0xA9970EF5);
			
			mm.addFunction(scePaf_6741C662Function, 0x6741C662);
			
			mm.addFunction(scePaf_14CE7F6FFunction, 0x14CE7F6F);
			
			mm.addFunction(scePaf_DFC8650CFunction, 0xDFC8650C);
			
			mm.addFunction(scePaf_ECE59E24Function, 0xECE59E24);
			
			mm.addFunction(scePaf_4D810FDCFunction, 0x4D810FDC);
			
			mm.addFunction(scePaf_ABCBC1C5Function, 0xABCBC1C5);
			
			mm.addFunction(scePaf_7C2C2742Function, 0x7C2C2742);
			
			mm.addFunction(scePaf_D0AD10FFFunction, 0xD0AD10FF);
			
			mm.addFunction(scePaf_2A2EB136Function, 0x2A2EB136);
			
			mm.addFunction(scePaf_20F5234EFunction, 0x20F5234E);
			
			mm.addFunction(scePaf_6F74F263Function, 0x6F74F263);
			
			mm.addFunction(scePaf_D6232F26Function, 0xD6232F26);
			
			mm.addFunction(scePaf_ED83B18FFunction, 0xED83B18F);
			
			mm.addFunction(scePaf_D6C1FF36Function, 0xD6C1FF36);
			
			mm.addFunction(scePaf_7952AE83Function, 0x7952AE83);
			
			mm.addFunction(scePaf_FDB98CACFunction, 0xFDB98CAC);
			
			mm.addFunction(scePaf_BA1F20EEFunction, 0xBA1F20EE);
			
			mm.addFunction(scePaf_D96449B4Function, 0xD96449B4);
			
			mm.addFunction(scePaf_71EDAD83Function, 0x71EDAD83);
			
			mm.addFunction(scePaf_2CB6FBBEFunction, 0x2CB6FBBE);
			
			mm.addFunction(scePaf_442F1731Function, 0x442F1731);
			
			mm.addFunction(scePaf_E418D7E0Function, 0xE418D7E0);
			
			mm.addFunction(scePaf_C8FD64AAFunction, 0xC8FD64AA);
			
			mm.addFunction(scePaf_DB230BE1Function, 0xDB230BE1);
			
			mm.addFunction(scePaf_0FB7D433Function, 0x0FB7D433);
			
			mm.addFunction(scePaf_C2E4423AFunction, 0xC2E4423A);
			
			mm.addFunction(scePaf_A574DB92Function, 0xA574DB92);
			
			mm.addFunction(scePaf_C6F44EF9Function, 0xC6F44EF9);
			
			mm.addFunction(scePaf_6B678D44Function, 0x6B678D44);
			
			mm.addFunction(scePaf_E15A64EAFunction, 0xE15A64EA);
			
			mm.addFunction(scePaf_6A772BF7Function, 0x6A772BF7);
			
			mm.addFunction(scePaf_D180ACBAFunction, 0xD180ACBA);
			
			mm.addFunction(scePaf_4C5F6657Function, 0x4C5F6657);
			
			mm.addFunction(scePaf_DFB912CBFunction, 0xDFB912CB);
			
			mm.addFunction(scePaf_BAA76FDEFunction, 0xBAA76FDE);
			
			mm.addFunction(scePaf_6CF44237Function, 0x6CF44237);
			
			mm.addFunction(scePaf_CFAF88ABFunction, 0xCFAF88AB);
			
			mm.addFunction(scePaf_D34D0B82Function, 0xD34D0B82);
			
			mm.addFunction(scePaf_8CDEDC6FFunction, 0x8CDEDC6F);
			
			mm.addFunction(scePaf_22B0D7D8Function, 0x22B0D7D8);
			
			mm.addFunction(scePaf_CA8CDF32Function, 0xCA8CDF32);
			
			mm.addFunction(scePaf_FCABD0E7Function, 0xFCABD0E7);
			
			mm.addFunction(scePaf_EE10AEF1Function, 0xEE10AEF1);
			
			mm.addFunction(scePaf_D99BEC81Function, 0xD99BEC81);
			
			mm.addFunction(scePaf_4D4805AFFunction, 0x4D4805AF);
			
			mm.addFunction(scePaf_28F8DE83Function, 0x28F8DE83);
			
			mm.addFunction(scePaf_B1F587EFFunction, 0xB1F587EF);
			
			mm.addFunction(scePaf_8C1ED07BFunction, 0x8C1ED07B);
			
			mm.addFunction(scePaf_04EF78CDFunction, 0x04EF78CD);
			
			mm.addFunction(scePaf_75A553A2Function, 0x75A553A2);
			
			mm.addFunction(scePaf_F4404EAFFunction, 0xF4404EAF);
			
			mm.addFunction(scePaf_D63D4561Function, 0xD63D4561);
			
			mm.addFunction(scePaf_81667058Function, 0x81667058);
			
			mm.addFunction(scePaf_149CDEB9Function, 0x149CDEB9);
			
			mm.addFunction(scePaf_62081F34Function, 0x62081F34);
			
			mm.addFunction(scePaf_BECD1827Function, 0xBECD1827);
			
			mm.addFunction(scePaf_A8711520Function, 0xA8711520);
			
			mm.addFunction(scePaf_FCDD55E3Function, 0xFCDD55E3);
			
			mm.addFunction(scePaf_2EABF548Function, 0x2EABF548);
			
			mm.addFunction(scePaf_50F72192Function, 0x50F72192);
			
			mm.addFunction(scePaf_73712598Function, 0x73712598);
			
			mm.addFunction(scePaf_8B439A23Function, 0x8B439A23);
			
			mm.addFunction(scePaf_7435C5D5Function, 0x7435C5D5);
			
			mm.addFunction(scePaf_CC103AD2Function, 0xCC103AD2);
			
			mm.addFunction(scePaf_566BC690Function, 0x566BC690);
			
			mm.addFunction(scePaf_68569AACFunction, 0x68569AAC);
			
			mm.addFunction(scePaf_76491EEAFunction, 0x76491EEA);
			
			mm.addFunction(scePaf_7771BC86Function, 0x7771BC86);
			
			mm.addFunction(scePaf_06BB62B7Function, 0x06BB62B7);
			
			mm.addFunction(scePaf_30F5E7DFFunction, 0x30F5E7DF);
			
			mm.addFunction(scePaf_97B9C21EFunction, 0x97B9C21E);
			
			mm.addFunction(scePaf_D16E5935Function, 0xD16E5935);
			
			mm.addFunction(scePaf_9D496842Function, 0x9D496842);
			
			mm.addFunction(scePaf_2750CF68Function, 0x2750CF68);
			
			mm.addFunction(scePaf_F639E5E1Function, 0xF639E5E1);
			
			mm.addFunction(scePaf_7116224CFunction, 0x7116224C);
			
			mm.addFunction(scePaf_9DD9CA07Function, 0x9DD9CA07);
			
			mm.addFunction(scePaf_FB3A9617Function, 0xFB3A9617);
			
			mm.addFunction(scePaf_35F003C0Function, 0x35F003C0);
			
			mm.addFunction(scePaf_EBDC149CFunction, 0xEBDC149C);
			
			mm.addFunction(scePaf_08DD2D50Function, 0x08DD2D50);
			
			mm.addFunction(scePaf_846E1F0AFunction, 0x846E1F0A);
			
			mm.addFunction(scePaf_4AB0D3F4Function, 0x4AB0D3F4);
			
			mm.addFunction(scePaf_9122393CFunction, 0x9122393C);
			
			mm.addFunction(scePaf_5C4BF618Function, 0x5C4BF618);
			
			mm.addFunction(scePaf_93538664Function, 0x93538664);
			
			mm.addFunction(scePaf_952CE8AFFunction, 0x952CE8AF);
			
			mm.addFunction(scePaf_21DBFF5BFunction, 0x21DBFF5B);
			
			mm.addFunction(scePaf_359CBCAFFunction, 0x359CBCAF);
			
			mm.addFunction(scePaf_3684D457Function, 0x3684D457);
			
			mm.addFunction(scePaf_0598FFD6Function, 0x0598FFD6);
			
			mm.addFunction(scePaf_CAF82B9BFunction, 0xCAF82B9B);
			
			mm.addFunction(scePaf_5B202AEDFunction, 0x5B202AED);
			
			mm.addFunction(scePaf_50DC7446Function, 0x50DC7446);
			
			mm.addFunction(scePaf_36CB5601Function, 0x36CB5601);
			
			mm.addFunction(scePaf_BA32D6E6Function, 0xBA32D6E6);
			
			mm.addFunction(scePaf_EAB7BD23Function, 0xEAB7BD23);
			
			mm.addFunction(scePaf_669DE9B1Function, 0x669DE9B1);
			
			mm.addFunction(scePaf_940D9797Function, 0x940D9797);
			
			mm.addFunction(scePaf_4708AED4Function, 0x4708AED4);
			
			mm.addFunction(scePaf_32A70C80Function, 0x32A70C80);
			
			mm.addFunction(scePaf_CAF05F1DFunction, 0xCAF05F1D);
			
			mm.addFunction(scePaf_49CE42F7Function, 0x49CE42F7);
			
			mm.addFunction(scePaf_FC6B7234Function, 0xFC6B7234);
			
			mm.addFunction(scePaf_63B24F4DFunction, 0x63B24F4D);
			
			mm.addFunction(scePaf_6F33D1DFFunction, 0x6F33D1DF);
			
			mm.addFunction(scePaf_3481F595Function, 0x3481F595);
			
			mm.addFunction(scePaf_986FEBD1Function, 0x986FEBD1);
			
			mm.addFunction(scePaf_458A9C95Function, 0x458A9C95);
			
			mm.addFunction(scePaf_D3D12890Function, 0xD3D12890);
			
			mm.addFunction(scePaf_9D1633BCFunction, 0x9D1633BC);
			
			mm.addFunction(scePaf_98E1BC87Function, 0x98E1BC87);
			
			mm.addFunction(scePaf_84240C1DFunction, 0x84240C1D);
			
			mm.addFunction(scePaf_5D786CDDFunction, 0x5D786CDD);
			
			mm.addFunction(scePaf_6E95EFAAFunction, 0x6E95EFAA);
			
			mm.addFunction(scePaf_88D73AEDFunction, 0x88D73AED);
			
			mm.addFunction(scePaf_D4FAE7D0Function, 0xD4FAE7D0);
			
			mm.addFunction(scePaf_338C3774Function, 0x338C3774);
			
			mm.addFunction(scePaf_DC2CA0F7Function, 0xDC2CA0F7);
			
			mm.addFunction(scePaf_7F7791A1Function, 0x7F7791A1);
			
			mm.addFunction(scePaf_F28A9DB3Function, 0xF28A9DB3);
			
			mm.addFunction(scePaf_BB3CBD19Function, 0xBB3CBD19);
			
			mm.addFunction(scePaf_27F64616Function, 0x27F64616);
			
			mm.addFunction(scePaf_72129CFBFunction, 0x72129CFB);
			
			mm.addFunction(scePaf_DAB59652Function, 0xDAB59652);
			
			mm.addFunction(scePaf_1A45C860Function, 0x1A45C860);
			
			mm.addFunction(scePaf_D7215544Function, 0xD7215544);
			
			mm.addFunction(scePaf_5DFB5858Function, 0x5DFB5858);
			
			mm.addFunction(scePaf_5EBC648FFunction, 0x5EBC648F);
			
			mm.addFunction(scePaf_F247A0BDFunction, 0xF247A0BD);
			
			mm.addFunction(scePaf_910A6B7BFunction, 0x910A6B7B);
			
			mm.addFunction(scePaf_5470B915Function, 0x5470B915);
			
			mm.addFunction(scePaf_D05C226FFunction, 0xD05C226F);
			
			mm.addFunction(scePaf_CE21D21FFunction, 0xCE21D21F);
			
			mm.addFunction(scePaf_8860B0FDFunction, 0x8860B0FD);
			
			mm.addFunction(scePaf_2AA842B0Function, 0x2AA842B0);
			
			mm.addFunction(scePaf_D5372E90Function, 0xD5372E90);
			
			mm.addFunction(scePaf_D7C2E0ADFunction, 0xD7C2E0AD);
			
			mm.addFunction(scePaf_F4AB3180Function, 0xF4AB3180);
			
			mm.addFunction(scePaf_EA026663Function, 0xEA026663);
			
			mm.addFunction(scePaf_F609FA81Function, 0xF609FA81);
			
			mm.addFunction(scePaf_BBDE1C17Function, 0xBBDE1C17);
			
			mm.addFunction(scePaf_8117E6C8Function, 0x8117E6C8);
			
			mm.addFunction(scePaf_1811AD32Function, 0x1811AD32);
			
			mm.addFunction(scePaf_6CE39EF8Function, 0x6CE39EF8);
			
			mm.addFunction(scePaf_B09203B0Function, 0xB09203B0);
			
			mm.addFunction(scePaf_58C69BDAFunction, 0x58C69BDA);
			
			mm.addFunction(scePaf_E32B3558Function, 0xE32B3558);
			
			mm.addFunction(scePaf_86237EB3Function, 0x86237EB3);
			
			mm.addFunction(scePaf_BEF9FF15Function, 0xBEF9FF15);
			
			mm.addFunction(scePaf_FE4D4112Function, 0xFE4D4112);
			
			mm.addFunction(scePaf_DAA609BBFunction, 0xDAA609BB);
			
			mm.addFunction(scePaf_69CA1A2DFunction, 0x69CA1A2D);
			
			mm.addFunction(scePaf_D3F5956DFunction, 0xD3F5956D);
			
			mm.addFunction(scePaf_602EB0CEFunction, 0x602EB0CE);
			
			mm.addFunction(scePaf_6A14BB04Function, 0x6A14BB04);
			
			mm.addFunction(scePaf_95960A88Function, 0x95960A88);
			
			mm.addFunction(scePaf_D6CD39AFFunction, 0xD6CD39AF);
			
			mm.addFunction(scePaf_79E57CAFFunction, 0x79E57CAF);
			
			mm.addFunction(scePaf_9DED6118Function, 0x9DED6118);
			
			mm.addFunction(scePaf_997D2809Function, 0x997D2809);
			
			mm.addFunction(scePaf_7D83FB20Function, 0x7D83FB20);
			
			mm.addFunction(scePaf_E1242646Function, 0xE1242646);
			
			mm.addFunction(scePaf_0F3527DDFunction, 0x0F3527DD);
			
			mm.addFunction(scePaf_10C1DB70Function, 0x10C1DB70);
			
			mm.addFunction(scePaf_39B36025Function, 0x39B36025);
			
			mm.addFunction(scePaf_01C2FC36Function, 0x01C2FC36);
			
			mm.addFunction(scePaf_17308FC9Function, 0x17308FC9);
			
			mm.addFunction(scePaf_F3967AF5Function, 0xF3967AF5);
			
			mm.addFunction(scePaf_34C973B6Function, 0x34C973B6);
			
			mm.addFunction(scePaf_4C8C2E25Function, 0x4C8C2E25);
			
			mm.addFunction(scePaf_81FD71A9Function, 0x81FD71A9);
			
			mm.addFunction(scePaf_BBBF145CFunction, 0xBBBF145C);
			
			mm.addFunction(scePaf_B52E43FBFunction, 0xB52E43FB);
			
			mm.addFunction(scePaf_95C97571Function, 0x95C97571);
			
			mm.addFunction(scePaf_F273FE50Function, 0xF273FE50);
			
			mm.addFunction(scePaf_AD7A45F9Function, 0xAD7A45F9);
			
			mm.addFunction(scePaf_67C7567EFunction, 0x67C7567E);
			
			mm.addFunction(scePaf_56F4D69FFunction, 0x56F4D69F);
			
			mm.addFunction(scePaf_D7E925A1Function, 0xD7E925A1);
			
			mm.addFunction(scePaf_296ED0EFFunction, 0x296ED0EF);
			
			mm.addFunction(scePaf_DBD69B7BFunction, 0xDBD69B7B);
			
			mm.addFunction(scePaf_7DDE0658Function, 0x7DDE0658);
			
			mm.addFunction(scePaf_CC3CFABFFunction, 0xCC3CFABF);
			
			mm.addFunction(scePaf_D2C94856Function, 0xD2C94856);
			
			mm.addFunction(scePaf_EF346632Function, 0xEF346632);
			
			mm.addFunction(scePaf_79293604Function, 0x79293604);
			
			mm.addFunction(scePaf_AECF91A9Function, 0xAECF91A9);
			
			mm.addFunction(scePaf_3342C5F5Function, 0x3342C5F5);
			
			mm.addFunction(scePaf_48B5C1C0Function, 0x48B5C1C0);
			
			mm.addFunction(scePaf_D188831AFunction, 0xD188831A);
			
			mm.addFunction(scePaf_2D08CA09Function, 0x2D08CA09);
			
			mm.addFunction(scePaf_55C7628AFunction, 0x55C7628A);
			
			mm.addFunction(scePaf_A9CE8FBBFunction, 0xA9CE8FBB);
			
			mm.addFunction(scePaf_D6F088EFFunction, 0xD6F088EF);
			
			mm.addFunction(scePaf_F2E5FDEBFunction, 0xF2E5FDEB);
			
			mm.addFunction(scePaf_6E3E2085Function, 0x6E3E2085);
			
			mm.addFunction(scePaf_6676FAA6Function, 0x6676FAA6);
			
			mm.addFunction(scePaf_7D9A4824Function, 0x7D9A4824);
			
			mm.addFunction(scePaf_D8739C4CFunction, 0xD8739C4C);
			
			mm.addFunction(scePaf_34C7D69AFunction, 0x34C7D69A);
			
			mm.addFunction(scePaf_CDB85442Function, 0xCDB85442);
			
			mm.addFunction(scePaf_DFD3E855Function, 0xDFD3E855);
			
			mm.addFunction(scePaf_2AA80564Function, 0x2AA80564);
			
			mm.addFunction(scePaf_6BAC756BFunction, 0x6BAC756B);
			
			mm.addFunction(scePaf_3A844B7BFunction, 0x3A844B7B);
			
			mm.addFunction(scePaf_9B8CBC5FFunction, 0x9B8CBC5F);
			
			mm.addFunction(scePaf_BE5B0791Function, 0xBE5B0791);
			
			mm.addFunction(scePaf_FCD816FAFunction, 0xFCD816FA);
			
			mm.addFunction(scePaf_548AA4E7Function, 0x548AA4E7);
			
			mm.addFunction(scePaf_21A0C6E0Function, 0x21A0C6E0);
			
			mm.addFunction(scePaf_C01BF169Function, 0xC01BF169);
			
			mm.addFunction(scePaf_AD1721B8Function, 0xAD1721B8);
			
			mm.addFunction(scePaf_910BCFE1Function, 0x910BCFE1);
			
			mm.addFunction(scePaf_75DBA857Function, 0x75DBA857);
			
			mm.addFunction(scePaf_849ED670Function, 0x849ED670);
			
			mm.addFunction(scePaf_5148EFE2Function, 0x5148EFE2);
			
			mm.addFunction(scePaf_D36F3AAAFunction, 0xD36F3AAA);
			
			mm.addFunction(scePaf_1A468B86Function, 0x1A468B86);
			
			mm.addFunction(scePaf_8E757709Function, 0x8E757709);
			
			mm.addFunction(scePaf_7BBD70F0Function, 0x7BBD70F0);
			
			mm.addFunction(scePaf_DFFE9ED6Function, 0xDFFE9ED6);
			
			mm.addFunction(scePaf_72A0044DFunction, 0x72A0044D);
			
			mm.addFunction(scePaf_4612DB4BFunction, 0x4612DB4B);
			
			mm.addFunction(scePaf_78219D10Function, 0x78219D10);
			
			mm.addFunction(scePaf_97FDA760Function, 0x97FDA760);
			
			mm.addFunction(scePaf_298246CDFunction, 0x298246CD);
			
			mm.addFunction(scePaf_12C50A9DFunction, 0x12C50A9D);
			
			mm.addFunction(scePaf_3D451DE8Function, 0x3D451DE8);
			
			mm.addFunction(scePaf_8FE88010Function, 0x8FE88010);
			
			mm.addFunction(scePaf_21A183A7Function, 0x21A183A7);
			
			mm.addFunction(scePaf_ABEBF18DFunction, 0xABEBF18D);
			
			mm.addFunction(scePaf_94136997Function, 0x94136997);
			
			mm.addFunction(scePaf_A25BDAA2Function, 0xA25BDAA2);
			
			mm.addFunction(scePaf_9F60CB01Function, 0x9F60CB01);
			
			mm.addFunction(scePaf_50B0C0A1Function, 0x50B0C0A1);
			
			mm.addFunction(scePaf_7E304DCFFunction, 0x7E304DCF);
			
			mm.addFunction(scePaf_1F43B8A2Function, 0x1F43B8A2);
			
			mm.addFunction(scePaf_891B7F7FFunction, 0x891B7F7F);
			
			mm.addFunction(scePaf_14D80C40Function, 0x14D80C40);
			
			mm.addFunction(scePaf_87E5F9C7Function, 0x87E5F9C7);
			
			mm.addFunction(scePaf_D3AB4076Function, 0xD3AB4076);
			
			mm.addFunction(scePaf_537D04C6Function, 0x537D04C6);
			
			mm.addFunction(png_create_info_structFunction, 0x7AFD6B74);
			
			mm.addFunction(png_create_read_structFunction, 0x6528115D);
			
			mm.addFunction(png_destroy_read_structFunction, 0x211A764A);
			
			mm.addFunction(png_errorFunction, 0x7894B61F);
			
			mm.addFunction(png_get_IHDRFunction, 0x38F12307);
			
			mm.addFunction(png_get_PLTEFunction, 0xE6432407);
			
			mm.addFunction(png_get_tRNSFunction, 0x07216006);
			
			mm.addFunction(png_read_endFunction, 0xB2290D1A);
			
			mm.addFunction(png_read_infoFunction, 0xE327C974);
			
			mm.addFunction(png_set_read_fnFunction, 0x1BDFF258);
			
			mm.addFunction(png_start_read_imageFunction, 0xDB1549DF);
			
			mm.addFunction(png_read_imageFunction, 0xDDD91620);
			
			mm.addFunction(png_read_update_infoFunction, 0xD4F9270D);
			
			mm.addFunction(png_set_packingFunction, 0x7333E75A);
			
			mm.addFunction(png_set_sig_bytesFunction, 0x1A1F232F);
			
			mm.addFunction(png_set_packswapFunction, 0xC6624F24);
			
			mm.addFunction(sce_png_readFunction, 0xFBC76D05);
			
			mm.addFunction(sceCccDecodeUTF8Function, 0xC6A8BEE2);
			
			mm.addFunction(sceCccEncodeUTF16Function, 0x8406F469);
			
			mm.addFunction(sceCccSetTableFunction, 0xB4D1CBBF);
			
			mm.addFunction(scePaf_8D3EAEA3Function, 0x8D3EAEA3);
			
			mm.addFunction(scePaf_C8E7B03FFunction, 0xC8E7B03F);
			
			mm.addFunction(scePaf_D4DAB044Function, 0xD4DAB044);
			
			mm.addFunction(scePaf_15939BB8Function, 0x15939BB8);
			
			mm.addFunction(scePaf_8D736C8FFunction, 0x8D736C8F);
			
			mm.addFunction(sceCccDecodeUTF16Function, 0xE0CF8091);
			
			mm.addFunction(sceCccSJIStoUTF16Function, 0xBEB47224);
			
			mm.addFunction(sceCccStrlenSJISFunction, 0xD9392CCB);
			
			mm.addFunction(sceCccUTF16toSJISFunction, 0xF1B73D12);
			
			mm.addFunction(sceCccUTF8toUTF16Function, 0x00D1378F);
			
			mm.addFunction(scePaf_D6CDB3BBFunction, 0xD6CDB3BB);
			
			mm.addFunction(scePaf_60CBB63FFunction, 0x60CBB63F);
			
			mm.addFunction(scePaf_F93D4E1FFunction, 0xF93D4E1F);
			
			mm.addFunction(scePaf_B9383A25Function, 0xB9383A25);
			
			mm.addFunction(sceCccStrlenUTF8Function, 0xB7D3C112);
			
			mm.addFunction(sceCccStrlenUTF16Function, 0x4BDEB2A8);
			
			mm.addFunction(sceCccUTF16toUTF8Function, 0x41B724A5);
			
			mm.addFunction(scePaf_D5F3BAB1Function, 0xD5F3BAB1);
			
			mm.addFunction(scePaf_EA39A7C1Function, 0xEA39A7C1);
			
			mm.addFunction(scePaf_6B1E90C7Function, 0x6B1E90C7);
			
			mm.addFunction(scePaf_66907719Function, 0x66907719);
			
			mm.addFunction(scePaf_AAD0EE78Function, 0xAAD0EE78);
			
			mm.addFunction(scePaf_E69C3B1BFunction, 0xE69C3B1B);
			
			mm.addFunction(scePaf_E618F7A8Function, 0xE618F7A8);
			
			mm.addFunction(scePaf_78F94D84Function, 0x78F94D84);
			
			mm.addFunction(scePaf_5822F12AFunction, 0x5822F12A);
			
			mm.addFunction(scePaf_FD9DE7B9Function, 0xFD9DE7B9);
			
			mm.addFunction(scePaf_AD43F865Function, 0xAD43F865);
			
			mm.addFunction(scePaf_872F948BFunction, 0x872F948B);
			
			mm.addFunction(scePaf_D726F4A2Function, 0xD726F4A2);
			
			mm.addFunction(scePaf_A044BFC0Function, 0xA044BFC0);
			
			mm.addFunction(scePaf_F1CF9579Function, 0xF1CF9579);
			
			mm.addFunction(scePaf_132148FDFunction, 0x132148FD);
			
			mm.addFunction(scePaf_533F3856Function, 0x533F3856);
			
			mm.addFunction(scePaf_139D9047Function, 0x139D9047);
			
			mm.addFunction(scePaf_8D3B3587Function, 0x8D3B3587);
			
			mm.addFunction(File_AllocLoadFunction, 0x27760582);
			
			mm.addFunction(File_SaveFunction, 0xFD3FF4AA);
			
			mm.addFunction(Job_StartFunction, 0xA0ED77C4);
			
			mm.addFunction(Job_CancelFunction, 0x35F25BA1);
			
			mm.addFunction(Job_Cancel2Function, 0x75062BCF);
			
			mm.addFunction(scePaf_79493F8FFunction, 0x79493F8F);
			
			mm.addFunction(scePaf_C1F72218Function, 0xC1F72218);
			
			mm.addFunction(scePaf_539F2583Function, 0x539F2583);
			
			mm.addFunction(scePaf_B884B031Function, 0xB884B031);
			
			mm.addFunction(scePaf_9399AF50Function, 0x9399AF50);
			
			mm.addFunction(scePaf_80E521C5Function, 0x80E521C5);
			
			mm.addFunction(scePaf_E05F3CEFFunction, 0xE05F3CEF);
			
			mm.addFunction(scePaf_E977B833Function, 0xE977B833);
			
			mm.addFunction(Heap_AllocFunction, 0x3E203AEB);
			
			mm.addFunction(Heap_FreeFunction, 0x9948CDB3);
			
			mm.addFunction(scePaf_F84A99C8Function, 0xF84A99C8);
			
			mm.addFunction(Heap_CreateFunction, 0x6D491648);
			
			mm.addFunction(Heap_DestroyFunction, 0x8A861692);
			
			mm.addFunction(scePaf_C4BAD564Function, 0xC4BAD564);
			
			mm.addFunction(scePaf_D27DE19AFunction, 0xD27DE19A);
			
			mm.addFunction(scePaf_BAE16A39Function, 0xBAE16A39);
			
			mm.addFunction(scePaf_2CFAE498Function, 0x2CFAE498);
			
			mm.addFunction(scePaf_58846DF3Function, 0x58846DF3);
			
			mm.addFunction(scePaf_E357380EFunction, 0xE357380E);
			
			mm.addFunction(sceGuDisableFunction, 0x4B4F39FC);
			
			mm.addFunction(sceGuShadeModelFunction, 0x5C5F727C);
			
			mm.addFunction(sceGuColorFunction, 0x0F2615A4);
			
			mm.addFunction(sceGumDrawArrayFunction, 0xEA4C24B3);
			
			mm.addFunction(sceGumPopMatrixFunction, 0x28C54317);
			
			mm.addFunction(sceGumPushMatrixFunction, 0xCBA9AAB1);
			
			mm.addFunction(sceGumRotateZFunction, 0x2C5D3E63);
			
			mm.addFunction(sceGumScaleFunction, 0x38316A7D);
			
			mm.addFunction(sceGumTranslateFunction, 0x96610AE6);
			
			mm.addFunction(scePaf_A08B0F31Function, 0xA08B0F31);
			
			mm.addFunction(paf_finiFunction, 0xFB3DB2FF);
			
			mm.addFunction(sinfFunction, 0xE13B6DAE);
			
			mm.addFunction(cosfFunction, 0xEB6D20A5);
			
			mm.addFunction(sqrtfFunction, 0x09F5941E);
			
			mm.addFunction(mallocFunction, 0x481C9ADA);
			
			mm.addFunction(freeFunction, 0xAD8AF84F);
			
			mm.addFunction(memcpyFunction, 0xAB7592FF);
			
			mm.addFunction(memsetFunction, 0x10F3BB61);
			
			mm.addFunction(memcmpFunction, 0x81D0D1F7);
			
			mm.addFunction(floorfFunction, 0x7EDCC45E);
			
			mm.addFunction(acosfFunction, 0x820C80E6);
			
			mm.addFunction(printfFunction, 0xCAB439DF);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
			
			mm.removeFunction(scePaf_C9831AFFFunction);
			
			mm.removeFunction(scePaf_BFE9E90BFunction);
			
			mm.removeFunction(scePaf_5FAC9869Function);
			
			mm.removeFunction(scePaf_FCB4E053Function);
			
			mm.removeFunction(scePaf_26DE971CFunction);
			
			mm.removeFunction(scePaf_613E9AA2Function);
			
			mm.removeFunction(scePaf_40C95283Function);
			
			mm.removeFunction(scePaf_B61E88F2Function);
			
			mm.removeFunction(scePaf_545FE2DAFunction);
			
			mm.removeFunction(scePaf_7EC15225Function);
			
			mm.removeFunction(scePaf_60DECA7EFunction);
			
			mm.removeFunction(scePaf_FD4C9F47Function);
			
			mm.removeFunction(scePaf_F95EA3F1Function);
			
			mm.removeFunction(scePaf_6829D7AFFunction);
			
			mm.removeFunction(scePaf_CA79D58BFunction);
			
			mm.removeFunction(scePaf_66FE90D7Function);
			
			mm.removeFunction(scePaf_980228BAFunction);
			
			mm.removeFunction(scePaf_296897BCFunction);
			
			mm.removeFunction(scePaf_DEDF238FFunction);
			
			mm.removeFunction(scePaf_7BED034EFunction);
			
			mm.removeFunction(scePaf_B3D58D25Function);
			
			mm.removeFunction(scePaf_44AAF96CFunction);
			
			mm.removeFunction(scePaf_49A81B18Function);
			
			mm.removeFunction(scePaf_FF2F98C6Function);
			
			mm.removeFunction(scePaf_77D981F5Function);
			
			mm.removeFunction(scePaf_45D851D1Function);
			
			mm.removeFunction(scePaf_71712601Function);
			
			mm.removeFunction(scePaf_71460F7CFunction);
			
			mm.removeFunction(scePaf_ABBBB335Function);
			
			mm.removeFunction(scePaf_07A5F495Function);
			
			mm.removeFunction(scePaf_F1552447Function);
			
			mm.removeFunction(scePaf_83944053Function);
			
			mm.removeFunction(scePaf_0B4C0DB6Function);
			
			mm.removeFunction(scePaf_2FDC80B3Function);
			
			mm.removeFunction(scePaf_993E9FDCFunction);
			
			mm.removeFunction(scePaf_3188E7DBFunction);
			
			mm.removeFunction(scePaf_DC38941BFunction);
			
			mm.removeFunction(scePaf_F0B4CAE7Function);
			
			mm.removeFunction(scePaf_6C234A6AFunction);
			
			mm.removeFunction(scePaf_37A98AE9Function);
			
			mm.removeFunction(scePaf_3DD2A27BFunction);
			
			mm.removeFunction(scePaf_9870A25BFunction);
			
			mm.removeFunction(scePaf_503BA324Function);
			
			mm.removeFunction(scePaf_2FA84441Function);
			
			mm.removeFunction(scePaf_84BD418FFunction);
			
			mm.removeFunction(scePaf_902515FBFunction);
			
			mm.removeFunction(scePaf_3586BE05Function);
			
			mm.removeFunction(scePaf_2FA0EDDCFunction);
			
			mm.removeFunction(scePaf_3FBD9639Function);
			
			mm.removeFunction(scePaf_6BA9C299Function);
			
			mm.removeFunction(scePaf_F1B52E86Function);
			
			mm.removeFunction(scePaf_10B901E7Function);
			
			mm.removeFunction(scePaf_4370175AFunction);
			
			mm.removeFunction(scePaf_809A4F83Function);
			
			mm.removeFunction(scePaf_A82E3C19Function);
			
			mm.removeFunction(scePaf_ED2B47FAFunction);
			
			mm.removeFunction(scePaf_26168DD3Function);
			
			mm.removeFunction(scePaf_626D68A1Function);
			
			mm.removeFunction(scePaf_FBA47E77Function);
			
			mm.removeFunction(scePaf_44A0BCE4Function);
			
			mm.removeFunction(scePaf_4B1A374CFunction);
			
			mm.removeFunction(scePaf_1D5D9A68Function);
			
			mm.removeFunction(scePaf_51AAAAF4Function);
			
			mm.removeFunction(scePaf_54C0DD23Function);
			
			mm.removeFunction(scePaf_9F10613FFunction);
			
			mm.removeFunction(scePaf_8F12B63AFunction);
			
			mm.removeFunction(scePaf_9D0192FDFunction);
			
			mm.removeFunction(scePaf_FEAFC77AFunction);
			
			mm.removeFunction(scePaf_99A5CD38Function);
			
			mm.removeFunction(scePaf_CE699963Function);
			
			mm.removeFunction(scePaf_CB2198ABFunction);
			
			mm.removeFunction(scePaf_11EF5210Function);
			
			mm.removeFunction(scePaf_B7E6052BFunction);
			
			mm.removeFunction(scePaf_F13EBB78Function);
			
			mm.removeFunction(scePaf_4E67BB08Function);
			
			mm.removeFunction(scePaf_B3D2C3BBFunction);
			
			mm.removeFunction(scePaf_962FA087Function);
			
			mm.removeFunction(scePaf_D4C6CC7AFunction);
			
			mm.removeFunction(scePaf_927854C5Function);
			
			mm.removeFunction(scePaf_D02C0D2EFunction);
			
			mm.removeFunction(scePaf_2FF0A287Function);
			
			mm.removeFunction(scePaf_F47CA1C2Function);
			
			mm.removeFunction(scePaf_EAA5AFF6Function);
			
			mm.removeFunction(scePaf_58BFC2ACFunction);
			
			mm.removeFunction(scePaf_72514A05Function);
			
			mm.removeFunction(scePaf_A69BABE3Function);
			
			mm.removeFunction(scePaf_9430557BFunction);
			
			mm.removeFunction(scePaf_607713A6Function);
			
			mm.removeFunction(scePaf_5EFC5387Function);
			
			mm.removeFunction(scePaf_79C3CBF7Function);
			
			mm.removeFunction(scePaf_3A4934E3Function);
			
			mm.removeFunction(scePaf_4FF65BDCFunction);
			
			mm.removeFunction(scePaf_26DF747FFunction);
			
			mm.removeFunction(scePaf_41BCFB59Function);
			
			mm.removeFunction(scePaf_FA05BF7BFunction);
			
			mm.removeFunction(scePaf_AAA8D3DAFunction);
			
			mm.removeFunction(scePaf_A18DB948Function);
			
			mm.removeFunction(scePaf_2313DDCAFunction);
			
			mm.removeFunction(scePaf_4FC2470CFunction);
			
			mm.removeFunction(scePaf_B77039E4Function);
			
			mm.removeFunction(scePaf_0C6EEA21Function);
			
			mm.removeFunction(scePaf_CB7B666EFunction);
			
			mm.removeFunction(scePaf_7B6F0E32Function);
			
			mm.removeFunction(scePaf_256218C2Function);
			
			mm.removeFunction(scePaf_96C46364Function);
			
			mm.removeFunction(scePaf_7C31F453Function);
			
			mm.removeFunction(scePaf_503FA456Function);
			
			mm.removeFunction(scePaf_D5F5E68FFunction);
			
			mm.removeFunction(scePaf_CAE6374AFunction);
			
			mm.removeFunction(scePaf_84A71447Function);
			
			mm.removeFunction(scePaf_D2463C79Function);
			
			mm.removeFunction(scePaf_ED3E4EB1Function);
			
			mm.removeFunction(scePaf_8DB4B066Function);
			
			mm.removeFunction(scePaf_B104EC1BFunction);
			
			mm.removeFunction(scePaf_B3659499Function);
			
			mm.removeFunction(scePaf_6E94BA7BFunction);
			
			mm.removeFunction(scePaf_FF74C932Function);
			
			mm.removeFunction(scePaf_F6F3E99EFunction);
			
			mm.removeFunction(scePaf_A72594EFFunction);
			
			mm.removeFunction(scePaf_86926BB9Function);
			
			mm.removeFunction(scePaf_5075C799Function);
			
			mm.removeFunction(scePaf_A76B9604Function);
			
			mm.removeFunction(scePaf_E1C76B22Function);
			
			mm.removeFunction(scePaf_44EB8C62Function);
			
			mm.removeFunction(scePaf_C2C25056Function);
			
			mm.removeFunction(scePaf_AEEF2A7CFunction);
			
			mm.removeFunction(scePaf_55CC4749Function);
			
			mm.removeFunction(scePaf_37DD37B8Function);
			
			mm.removeFunction(scePaf_16033F84Function);
			
			mm.removeFunction(scePaf_A0A25707Function);
			
			mm.removeFunction(scePaf_E5BAC873Function);
			
			mm.removeFunction(scePaf_0A189A1AFunction);
			
			mm.removeFunction(scePaf_CB7CCB28Function);
			
			mm.removeFunction(scePaf_7B099943Function);
			
			mm.removeFunction(scePaf_E9BF6BEBFunction);
			
			mm.removeFunction(scePaf_CEAC29F3Function);
			
			mm.removeFunction(scePaf_275BCDC6Function);
			
			mm.removeFunction(scePaf_65C19AC0Function);
			
			mm.removeFunction(scePaf_8BA04801Function);
			
			mm.removeFunction(scePaf_93A60B78Function);
			
			mm.removeFunction(scePaf_AEE1CBADFunction);
			
			mm.removeFunction(scePaf_19A779E2Function);
			
			mm.removeFunction(scePaf_CDC81771Function);
			
			mm.removeFunction(scePaf_C1FAF826Function);
			
			mm.removeFunction(scePaf_9C9B6732Function);
			
			mm.removeFunction(scePaf_78054045Function);
			
			mm.removeFunction(scePaf_DF9138A8Function);
			
			mm.removeFunction(scePaf_F7FB133EFunction);
			
			mm.removeFunction(scePaf_CFF2B69CFunction);
			
			mm.removeFunction(scePaf_EF52945BFunction);
			
			mm.removeFunction(scePaf_BAA88CDAFunction);
			
			mm.removeFunction(scePaf_BDC894D8Function);
			
			mm.removeFunction(scePaf_5045C01FFunction);
			
			mm.removeFunction(scePaf_A89157EEFunction);
			
			mm.removeFunction(scePaf_1F0B8678Function);
			
			mm.removeFunction(scePaf_33096E46Function);
			
			mm.removeFunction(scePaf_47E35A50Function);
			
			mm.removeFunction(scePaf_25391E36Function);
			
			mm.removeFunction(scePaf_50FFFCD2Function);
			
			mm.removeFunction(scePaf_206C1F70Function);
			
			mm.removeFunction(scePaf_0C66B594Function);
			
			mm.removeFunction(scePaf_39F89900Function);
			
			mm.removeFunction(scePaf_B6841F37Function);
			
			mm.removeFunction(scePaf_360956CCFunction);
			
			mm.removeFunction(scePaf_0AEDCDA1Function);
			
			mm.removeFunction(scePaf_222526B6Function);
			
			mm.removeFunction(scePaf_41A7BDD2Function);
			
			mm.removeFunction(scePaf_D07AF3FAFunction);
			
			mm.removeFunction(scePaf_29DC646FFunction);
			
			mm.removeFunction(scePaf_2A6499A5Function);
			
			mm.removeFunction(scePaf_4FCA0DE9Function);
			
			mm.removeFunction(scePaf_E796C85BFunction);
			
			mm.removeFunction(scePaf_BAFF6806Function);
			
			mm.removeFunction(scePaf_AA978F61Function);
			
			mm.removeFunction(scePaf_FCF42D6DFunction);
			
			mm.removeFunction(scePaf_5DB527D4Function);
			
			mm.removeFunction(scePaf_2E6CA751Function);
			
			mm.removeFunction(scePaf_3F52824FFunction);
			
			mm.removeFunction(scePaf_1C286704Function);
			
			mm.removeFunction(scePaf_672036FEFunction);
			
			mm.removeFunction(scePaf_08A02EFFFunction);
			
			mm.removeFunction(scePaf_01A35C15Function);
			
			mm.removeFunction(scePaf_470ABD60Function);
			
			mm.removeFunction(scePaf_B42D784EFunction);
			
			mm.removeFunction(scePaf_84485F54Function);
			
			mm.removeFunction(scePaf_87516C3BFunction);
			
			mm.removeFunction(scePaf_715E8DABFunction);
			
			mm.removeFunction(scePaf_D35B454AFunction);
			
			mm.removeFunction(scePaf_CFB1A402Function);
			
			mm.removeFunction(scePaf_5D7F1F27Function);
			
			mm.removeFunction(scePaf_3291BDDDFunction);
			
			mm.removeFunction(scePaf_515EE222Function);
			
			mm.removeFunction(scePaf_3987B5C4Function);
			
			mm.removeFunction(scePaf_F89ECA28Function);
			
			mm.removeFunction(scePaf_4AF8E417Function);
			
			mm.removeFunction(scePaf_76D5A950Function);
			
			mm.removeFunction(scePaf_F577BC82Function);
			
			mm.removeFunction(scePaf_369E597AFunction);
			
			mm.removeFunction(scePaf_293A01D8Function);
			
			mm.removeFunction(scePaf_45386654Function);
			
			mm.removeFunction(scePaf_73D49419Function);
			
			mm.removeFunction(scePaf_AD007AB6Function);
			
			mm.removeFunction(scePaf_F49F3C59Function);
			
			mm.removeFunction(scePaf_05EEE8A6Function);
			
			mm.removeFunction(scePaf_15EF8E18Function);
			
			mm.removeFunction(scePaf_FE84212FFunction);
			
			mm.removeFunction(scePaf_9D92765EFunction);
			
			mm.removeFunction(scePaf_98A6C193Function);
			
			mm.removeFunction(scePaf_1943B875Function);
			
			mm.removeFunction(scePaf_D7074BD1Function);
			
			mm.removeFunction(scePaf_BD49CAEFFunction);
			
			mm.removeFunction(scePaf_6C4976AFFunction);
			
			mm.removeFunction(scePaf_85112756Function);
			
			mm.removeFunction(scePaf_FDB39519Function);
			
			mm.removeFunction(scePaf_DA3A6D88Function);
			
			mm.removeFunction(scePaf_199896A3Function);
			
			mm.removeFunction(scePaf_5458E412Function);
			
			mm.removeFunction(scePaf_43374E9EFunction);
			
			mm.removeFunction(scePaf_6797988CFunction);
			
			mm.removeFunction(scePaf_449C8821Function);
			
			mm.removeFunction(scePaf_6C386158Function);
			
			mm.removeFunction(scePaf_8E751FCCFunction);
			
			mm.removeFunction(scePaf_F32223ACFunction);
			
			mm.removeFunction(scePaf_40B21F4FFunction);
			
			mm.removeFunction(scePaf_501E9BC9Function);
			
			mm.removeFunction(scePaf_EFAC3E9FFunction);
			
			mm.removeFunction(scePaf_C933B3C5Function);
			
			mm.removeFunction(scePaf_F554C7C7Function);
			
			mm.removeFunction(scePaf_4E60E34CFunction);
			
			mm.removeFunction(scePaf_39C55C03Function);
			
			mm.removeFunction(scePaf_65920294Function);
			
			mm.removeFunction(scePaf_37DDBDD8Function);
			
			mm.removeFunction(scePaf_92A46B32Function);
			
			mm.removeFunction(scePaf_905347E9Function);
			
			mm.removeFunction(scePaf_DF887DEDFunction);
			
			mm.removeFunction(scePaf_DC544921Function);
			
			mm.removeFunction(scePaf_585B93BCFunction);
			
			mm.removeFunction(scePaf_1AD33D73Function);
			
			mm.removeFunction(scePaf_A4F53FEDFunction);
			
			mm.removeFunction(scePaf_01CF521EFunction);
			
			mm.removeFunction(scePaf_3C68DCB7Function);
			
			mm.removeFunction(scePaf_3F81333AFunction);
			
			mm.removeFunction(scePaf_9A8E343EFunction);
			
			mm.removeFunction(scePaf_95040C08Function);
			
			mm.removeFunction(scePaf_07BA4C80Function);
			
			mm.removeFunction(scePaf_0CFDBE2FFunction);
			
			mm.removeFunction(scePaf_3829AC24Function);
			
			mm.removeFunction(scePaf_1F0E9712Function);
			
			mm.removeFunction(scePaf_D24E4016Function);
			
			mm.removeFunction(scePaf_409E25A3Function);
			
			mm.removeFunction(scePaf_DC8B0309Function);
			
			mm.removeFunction(scePaf_EB553D60Function);
			
			mm.removeFunction(scePaf_4EA868E6Function);
			
			mm.removeFunction(scePaf_8AB03D91Function);
			
			mm.removeFunction(scePaf_5CA7F421Function);
			
			mm.removeFunction(scePaf_B7865607Function);
			
			mm.removeFunction(scePaf_95948FB6Function);
			
			mm.removeFunction(scePaf_BA433BEFFunction);
			
			mm.removeFunction(scePaf_ED89C94BFunction);
			
			mm.removeFunction(scePaf_0E8A3B52Function);
			
			mm.removeFunction(scePaf_D587826CFunction);
			
			mm.removeFunction(scePaf_61B105C0Function);
			
			mm.removeFunction(scePaf_DAD477C1Function);
			
			mm.removeFunction(scePaf_D91B2651Function);
			
			mm.removeFunction(scePaf_A02E66FAFunction);
			
			mm.removeFunction(scePaf_2D79697EFunction);
			
			mm.removeFunction(scePaf_EDF1C662Function);
			
			mm.removeFunction(scePaf_A7818BCEFunction);
			
			mm.removeFunction(scePaf_695BCD34Function);
			
			mm.removeFunction(scePaf_C4D819AAFunction);
			
			mm.removeFunction(scePaf_70B92642Function);
			
			mm.removeFunction(scePaf_447974D1Function);
			
			mm.removeFunction(scePaf_63EA1815Function);
			
			mm.removeFunction(scePaf_CB65103EFunction);
			
			mm.removeFunction(scePaf_32B27ADDFunction);
			
			mm.removeFunction(scePaf_ADC146F0Function);
			
			mm.removeFunction(scePaf_D5A254F9Function);
			
			mm.removeFunction(scePaf_42F43213Function);
			
			mm.removeFunction(scePaf_5D242D11Function);
			
			mm.removeFunction(scePaf_11361F12Function);
			
			mm.removeFunction(scePaf_51FF9D24Function);
			
			mm.removeFunction(scePaf_B2ED6CAAFunction);
			
			mm.removeFunction(scePaf_79F4AE65Function);
			
			mm.removeFunction(scePaf_905CF2A7Function);
			
			mm.removeFunction(scePaf_E732CF74Function);
			
			mm.removeFunction(scePaf_B711DC69Function);
			
			mm.removeFunction(scePaf_0ED80B09Function);
			
			mm.removeFunction(scePaf_BB457D6FFunction);
			
			mm.removeFunction(scePaf_B6F52424Function);
			
			mm.removeFunction(scePaf_BA6B8B02Function);
			
			mm.removeFunction(scePaf_B9BE69FDFunction);
			
			mm.removeFunction(scePaf_FA758B05Function);
			
			mm.removeFunction(scePaf_FA87D725Function);
			
			mm.removeFunction(scePaf_FC37FABDFunction);
			
			mm.removeFunction(scePaf_64775957Function);
			
			mm.removeFunction(scePaf_7F2442DCFunction);
			
			mm.removeFunction(scePaf_86B41BA3Function);
			
			mm.removeFunction(scePaf_541F36E9Function);
			
			mm.removeFunction(scePaf_86C87E62Function);
			
			mm.removeFunction(scePaf_F1546D14Function);
			
			mm.removeFunction(scePaf_6840D208Function);
			
			mm.removeFunction(scePaf_D1EE972CFunction);
			
			mm.removeFunction(scePaf_1232B7A3Function);
			
			mm.removeFunction(scePaf_8D7FC7DBFunction);
			
			mm.removeFunction(scePaf_5DE0445FFunction);
			
			mm.removeFunction(scePaf_09AC6844Function);
			
			mm.removeFunction(scePaf_D2E0D705Function);
			
			mm.removeFunction(scePaf_AE02F241Function);
			
			mm.removeFunction(scePaf_D1159069Function);
			
			mm.removeFunction(scePaf_BFFAEE83Function);
			
			mm.removeFunction(scePaf_DDA68BE8Function);
			
			mm.removeFunction(scePaf_9AFD4AD4Function);
			
			mm.removeFunction(scePaf_6E1B5B50Function);
			
			mm.removeFunction(scePaf_8DEB3DB3Function);
			
			mm.removeFunction(scePaf_BA09CF46Function);
			
			mm.removeFunction(scePaf_6DD28F44Function);
			
			mm.removeFunction(scePaf_4ADAEF94Function);
			
			mm.removeFunction(scePaf_95708BC0Function);
			
			mm.removeFunction(scePaf_C85155C9Function);
			
			mm.removeFunction(scePaf_DEF9EBE7Function);
			
			mm.removeFunction(scePaf_F23F3226Function);
			
			mm.removeFunction(scePaf_D153385EFunction);
			
			mm.removeFunction(scePaf_86A5AE7DFunction);
			
			mm.removeFunction(scePaf_5A8D4BDBFunction);
			
			mm.removeFunction(scePaf_2120282AFunction);
			
			mm.removeFunction(scePaf_8159EB28Function);
			
			mm.removeFunction(scePaf_5CE11C03Function);
			
			mm.removeFunction(scePaf_05073826Function);
			
			mm.removeFunction(scePaf_A4B48F00Function);
			
			mm.removeFunction(scePaf_224C33F0Function);
			
			mm.removeFunction(scePaf_3DBE861FFunction);
			
			mm.removeFunction(scePaf_FA78AF39Function);
			
			mm.removeFunction(scePaf_A3761F27Function);
			
			mm.removeFunction(scePaf_DE75C2BAFunction);
			
			mm.removeFunction(scePaf_4129A915Function);
			
			mm.removeFunction(scePaf_8A51BA1EFunction);
			
			mm.removeFunction(scePaf_0FFA3ECEFunction);
			
			mm.removeFunction(scePaf_89582FD0Function);
			
			mm.removeFunction(scePaf_84913A3AFunction);
			
			mm.removeFunction(scePaf_06EA7CDEFunction);
			
			mm.removeFunction(scePaf_9563887DFunction);
			
			mm.removeFunction(scePaf_21B885B8Function);
			
			mm.removeFunction(scePaf_B0FD305AFunction);
			
			mm.removeFunction(scePaf_777635B9Function);
			
			mm.removeFunction(scePaf_F8301DBCFunction);
			
			mm.removeFunction(scePaf_5A818E41Function);
			
			mm.removeFunction(scePaf_A9970EF5Function);
			
			mm.removeFunction(scePaf_6741C662Function);
			
			mm.removeFunction(scePaf_14CE7F6FFunction);
			
			mm.removeFunction(scePaf_DFC8650CFunction);
			
			mm.removeFunction(scePaf_ECE59E24Function);
			
			mm.removeFunction(scePaf_4D810FDCFunction);
			
			mm.removeFunction(scePaf_ABCBC1C5Function);
			
			mm.removeFunction(scePaf_7C2C2742Function);
			
			mm.removeFunction(scePaf_D0AD10FFFunction);
			
			mm.removeFunction(scePaf_2A2EB136Function);
			
			mm.removeFunction(scePaf_20F5234EFunction);
			
			mm.removeFunction(scePaf_6F74F263Function);
			
			mm.removeFunction(scePaf_D6232F26Function);
			
			mm.removeFunction(scePaf_ED83B18FFunction);
			
			mm.removeFunction(scePaf_D6C1FF36Function);
			
			mm.removeFunction(scePaf_7952AE83Function);
			
			mm.removeFunction(scePaf_FDB98CACFunction);
			
			mm.removeFunction(scePaf_BA1F20EEFunction);
			
			mm.removeFunction(scePaf_D96449B4Function);
			
			mm.removeFunction(scePaf_71EDAD83Function);
			
			mm.removeFunction(scePaf_2CB6FBBEFunction);
			
			mm.removeFunction(scePaf_442F1731Function);
			
			mm.removeFunction(scePaf_E418D7E0Function);
			
			mm.removeFunction(scePaf_C8FD64AAFunction);
			
			mm.removeFunction(scePaf_DB230BE1Function);
			
			mm.removeFunction(scePaf_0FB7D433Function);
			
			mm.removeFunction(scePaf_C2E4423AFunction);
			
			mm.removeFunction(scePaf_A574DB92Function);
			
			mm.removeFunction(scePaf_C6F44EF9Function);
			
			mm.removeFunction(scePaf_6B678D44Function);
			
			mm.removeFunction(scePaf_E15A64EAFunction);
			
			mm.removeFunction(scePaf_6A772BF7Function);
			
			mm.removeFunction(scePaf_D180ACBAFunction);
			
			mm.removeFunction(scePaf_4C5F6657Function);
			
			mm.removeFunction(scePaf_DFB912CBFunction);
			
			mm.removeFunction(scePaf_BAA76FDEFunction);
			
			mm.removeFunction(scePaf_6CF44237Function);
			
			mm.removeFunction(scePaf_CFAF88ABFunction);
			
			mm.removeFunction(scePaf_D34D0B82Function);
			
			mm.removeFunction(scePaf_8CDEDC6FFunction);
			
			mm.removeFunction(scePaf_22B0D7D8Function);
			
			mm.removeFunction(scePaf_CA8CDF32Function);
			
			mm.removeFunction(scePaf_FCABD0E7Function);
			
			mm.removeFunction(scePaf_EE10AEF1Function);
			
			mm.removeFunction(scePaf_D99BEC81Function);
			
			mm.removeFunction(scePaf_4D4805AFFunction);
			
			mm.removeFunction(scePaf_28F8DE83Function);
			
			mm.removeFunction(scePaf_B1F587EFFunction);
			
			mm.removeFunction(scePaf_8C1ED07BFunction);
			
			mm.removeFunction(scePaf_04EF78CDFunction);
			
			mm.removeFunction(scePaf_75A553A2Function);
			
			mm.removeFunction(scePaf_F4404EAFFunction);
			
			mm.removeFunction(scePaf_D63D4561Function);
			
			mm.removeFunction(scePaf_81667058Function);
			
			mm.removeFunction(scePaf_149CDEB9Function);
			
			mm.removeFunction(scePaf_62081F34Function);
			
			mm.removeFunction(scePaf_BECD1827Function);
			
			mm.removeFunction(scePaf_A8711520Function);
			
			mm.removeFunction(scePaf_FCDD55E3Function);
			
			mm.removeFunction(scePaf_2EABF548Function);
			
			mm.removeFunction(scePaf_50F72192Function);
			
			mm.removeFunction(scePaf_73712598Function);
			
			mm.removeFunction(scePaf_8B439A23Function);
			
			mm.removeFunction(scePaf_7435C5D5Function);
			
			mm.removeFunction(scePaf_CC103AD2Function);
			
			mm.removeFunction(scePaf_566BC690Function);
			
			mm.removeFunction(scePaf_68569AACFunction);
			
			mm.removeFunction(scePaf_76491EEAFunction);
			
			mm.removeFunction(scePaf_7771BC86Function);
			
			mm.removeFunction(scePaf_06BB62B7Function);
			
			mm.removeFunction(scePaf_30F5E7DFFunction);
			
			mm.removeFunction(scePaf_97B9C21EFunction);
			
			mm.removeFunction(scePaf_D16E5935Function);
			
			mm.removeFunction(scePaf_9D496842Function);
			
			mm.removeFunction(scePaf_2750CF68Function);
			
			mm.removeFunction(scePaf_F639E5E1Function);
			
			mm.removeFunction(scePaf_7116224CFunction);
			
			mm.removeFunction(scePaf_9DD9CA07Function);
			
			mm.removeFunction(scePaf_FB3A9617Function);
			
			mm.removeFunction(scePaf_35F003C0Function);
			
			mm.removeFunction(scePaf_EBDC149CFunction);
			
			mm.removeFunction(scePaf_08DD2D50Function);
			
			mm.removeFunction(scePaf_846E1F0AFunction);
			
			mm.removeFunction(scePaf_4AB0D3F4Function);
			
			mm.removeFunction(scePaf_9122393CFunction);
			
			mm.removeFunction(scePaf_5C4BF618Function);
			
			mm.removeFunction(scePaf_93538664Function);
			
			mm.removeFunction(scePaf_952CE8AFFunction);
			
			mm.removeFunction(scePaf_21DBFF5BFunction);
			
			mm.removeFunction(scePaf_359CBCAFFunction);
			
			mm.removeFunction(scePaf_3684D457Function);
			
			mm.removeFunction(scePaf_0598FFD6Function);
			
			mm.removeFunction(scePaf_CAF82B9BFunction);
			
			mm.removeFunction(scePaf_5B202AEDFunction);
			
			mm.removeFunction(scePaf_50DC7446Function);
			
			mm.removeFunction(scePaf_36CB5601Function);
			
			mm.removeFunction(scePaf_BA32D6E6Function);
			
			mm.removeFunction(scePaf_EAB7BD23Function);
			
			mm.removeFunction(scePaf_669DE9B1Function);
			
			mm.removeFunction(scePaf_940D9797Function);
			
			mm.removeFunction(scePaf_4708AED4Function);
			
			mm.removeFunction(scePaf_32A70C80Function);
			
			mm.removeFunction(scePaf_CAF05F1DFunction);
			
			mm.removeFunction(scePaf_49CE42F7Function);
			
			mm.removeFunction(scePaf_FC6B7234Function);
			
			mm.removeFunction(scePaf_63B24F4DFunction);
			
			mm.removeFunction(scePaf_6F33D1DFFunction);
			
			mm.removeFunction(scePaf_3481F595Function);
			
			mm.removeFunction(scePaf_986FEBD1Function);
			
			mm.removeFunction(scePaf_458A9C95Function);
			
			mm.removeFunction(scePaf_D3D12890Function);
			
			mm.removeFunction(scePaf_9D1633BCFunction);
			
			mm.removeFunction(scePaf_98E1BC87Function);
			
			mm.removeFunction(scePaf_84240C1DFunction);
			
			mm.removeFunction(scePaf_5D786CDDFunction);
			
			mm.removeFunction(scePaf_6E95EFAAFunction);
			
			mm.removeFunction(scePaf_88D73AEDFunction);
			
			mm.removeFunction(scePaf_D4FAE7D0Function);
			
			mm.removeFunction(scePaf_338C3774Function);
			
			mm.removeFunction(scePaf_DC2CA0F7Function);
			
			mm.removeFunction(scePaf_7F7791A1Function);
			
			mm.removeFunction(scePaf_F28A9DB3Function);
			
			mm.removeFunction(scePaf_BB3CBD19Function);
			
			mm.removeFunction(scePaf_27F64616Function);
			
			mm.removeFunction(scePaf_72129CFBFunction);
			
			mm.removeFunction(scePaf_DAB59652Function);
			
			mm.removeFunction(scePaf_1A45C860Function);
			
			mm.removeFunction(scePaf_D7215544Function);
			
			mm.removeFunction(scePaf_5DFB5858Function);
			
			mm.removeFunction(scePaf_5EBC648FFunction);
			
			mm.removeFunction(scePaf_F247A0BDFunction);
			
			mm.removeFunction(scePaf_910A6B7BFunction);
			
			mm.removeFunction(scePaf_5470B915Function);
			
			mm.removeFunction(scePaf_D05C226FFunction);
			
			mm.removeFunction(scePaf_CE21D21FFunction);
			
			mm.removeFunction(scePaf_8860B0FDFunction);
			
			mm.removeFunction(scePaf_2AA842B0Function);
			
			mm.removeFunction(scePaf_D5372E90Function);
			
			mm.removeFunction(scePaf_D7C2E0ADFunction);
			
			mm.removeFunction(scePaf_F4AB3180Function);
			
			mm.removeFunction(scePaf_EA026663Function);
			
			mm.removeFunction(scePaf_F609FA81Function);
			
			mm.removeFunction(scePaf_BBDE1C17Function);
			
			mm.removeFunction(scePaf_8117E6C8Function);
			
			mm.removeFunction(scePaf_1811AD32Function);
			
			mm.removeFunction(scePaf_6CE39EF8Function);
			
			mm.removeFunction(scePaf_B09203B0Function);
			
			mm.removeFunction(scePaf_58C69BDAFunction);
			
			mm.removeFunction(scePaf_E32B3558Function);
			
			mm.removeFunction(scePaf_86237EB3Function);
			
			mm.removeFunction(scePaf_BEF9FF15Function);
			
			mm.removeFunction(scePaf_FE4D4112Function);
			
			mm.removeFunction(scePaf_DAA609BBFunction);
			
			mm.removeFunction(scePaf_69CA1A2DFunction);
			
			mm.removeFunction(scePaf_D3F5956DFunction);
			
			mm.removeFunction(scePaf_602EB0CEFunction);
			
			mm.removeFunction(scePaf_6A14BB04Function);
			
			mm.removeFunction(scePaf_95960A88Function);
			
			mm.removeFunction(scePaf_D6CD39AFFunction);
			
			mm.removeFunction(scePaf_79E57CAFFunction);
			
			mm.removeFunction(scePaf_9DED6118Function);
			
			mm.removeFunction(scePaf_997D2809Function);
			
			mm.removeFunction(scePaf_7D83FB20Function);
			
			mm.removeFunction(scePaf_E1242646Function);
			
			mm.removeFunction(scePaf_0F3527DDFunction);
			
			mm.removeFunction(scePaf_10C1DB70Function);
			
			mm.removeFunction(scePaf_39B36025Function);
			
			mm.removeFunction(scePaf_01C2FC36Function);
			
			mm.removeFunction(scePaf_17308FC9Function);
			
			mm.removeFunction(scePaf_F3967AF5Function);
			
			mm.removeFunction(scePaf_34C973B6Function);
			
			mm.removeFunction(scePaf_4C8C2E25Function);
			
			mm.removeFunction(scePaf_81FD71A9Function);
			
			mm.removeFunction(scePaf_BBBF145CFunction);
			
			mm.removeFunction(scePaf_B52E43FBFunction);
			
			mm.removeFunction(scePaf_95C97571Function);
			
			mm.removeFunction(scePaf_F273FE50Function);
			
			mm.removeFunction(scePaf_AD7A45F9Function);
			
			mm.removeFunction(scePaf_67C7567EFunction);
			
			mm.removeFunction(scePaf_56F4D69FFunction);
			
			mm.removeFunction(scePaf_D7E925A1Function);
			
			mm.removeFunction(scePaf_296ED0EFFunction);
			
			mm.removeFunction(scePaf_DBD69B7BFunction);
			
			mm.removeFunction(scePaf_7DDE0658Function);
			
			mm.removeFunction(scePaf_CC3CFABFFunction);
			
			mm.removeFunction(scePaf_D2C94856Function);
			
			mm.removeFunction(scePaf_EF346632Function);
			
			mm.removeFunction(scePaf_79293604Function);
			
			mm.removeFunction(scePaf_AECF91A9Function);
			
			mm.removeFunction(scePaf_3342C5F5Function);
			
			mm.removeFunction(scePaf_48B5C1C0Function);
			
			mm.removeFunction(scePaf_D188831AFunction);
			
			mm.removeFunction(scePaf_2D08CA09Function);
			
			mm.removeFunction(scePaf_55C7628AFunction);
			
			mm.removeFunction(scePaf_A9CE8FBBFunction);
			
			mm.removeFunction(scePaf_D6F088EFFunction);
			
			mm.removeFunction(scePaf_F2E5FDEBFunction);
			
			mm.removeFunction(scePaf_6E3E2085Function);
			
			mm.removeFunction(scePaf_6676FAA6Function);
			
			mm.removeFunction(scePaf_7D9A4824Function);
			
			mm.removeFunction(scePaf_D8739C4CFunction);
			
			mm.removeFunction(scePaf_34C7D69AFunction);
			
			mm.removeFunction(scePaf_CDB85442Function);
			
			mm.removeFunction(scePaf_DFD3E855Function);
			
			mm.removeFunction(scePaf_2AA80564Function);
			
			mm.removeFunction(scePaf_6BAC756BFunction);
			
			mm.removeFunction(scePaf_3A844B7BFunction);
			
			mm.removeFunction(scePaf_9B8CBC5FFunction);
			
			mm.removeFunction(scePaf_BE5B0791Function);
			
			mm.removeFunction(scePaf_FCD816FAFunction);
			
			mm.removeFunction(scePaf_548AA4E7Function);
			
			mm.removeFunction(scePaf_21A0C6E0Function);
			
			mm.removeFunction(scePaf_C01BF169Function);
			
			mm.removeFunction(scePaf_AD1721B8Function);
			
			mm.removeFunction(scePaf_910BCFE1Function);
			
			mm.removeFunction(scePaf_75DBA857Function);
			
			mm.removeFunction(scePaf_849ED670Function);
			
			mm.removeFunction(scePaf_5148EFE2Function);
			
			mm.removeFunction(scePaf_D36F3AAAFunction);
			
			mm.removeFunction(scePaf_1A468B86Function);
			
			mm.removeFunction(scePaf_8E757709Function);
			
			mm.removeFunction(scePaf_7BBD70F0Function);
			
			mm.removeFunction(scePaf_DFFE9ED6Function);
			
			mm.removeFunction(scePaf_72A0044DFunction);
			
			mm.removeFunction(scePaf_4612DB4BFunction);
			
			mm.removeFunction(scePaf_78219D10Function);
			
			mm.removeFunction(scePaf_97FDA760Function);
			
			mm.removeFunction(scePaf_298246CDFunction);
			
			mm.removeFunction(scePaf_12C50A9DFunction);
			
			mm.removeFunction(scePaf_3D451DE8Function);
			
			mm.removeFunction(scePaf_8FE88010Function);
			
			mm.removeFunction(scePaf_21A183A7Function);
			
			mm.removeFunction(scePaf_ABEBF18DFunction);
			
			mm.removeFunction(scePaf_94136997Function);
			
			mm.removeFunction(scePaf_A25BDAA2Function);
			
			mm.removeFunction(scePaf_9F60CB01Function);
			
			mm.removeFunction(scePaf_50B0C0A1Function);
			
			mm.removeFunction(scePaf_7E304DCFFunction);
			
			mm.removeFunction(scePaf_1F43B8A2Function);
			
			mm.removeFunction(scePaf_891B7F7FFunction);
			
			mm.removeFunction(scePaf_14D80C40Function);
			
			mm.removeFunction(scePaf_87E5F9C7Function);
			
			mm.removeFunction(scePaf_D3AB4076Function);
			
			mm.removeFunction(scePaf_537D04C6Function);
			
			mm.removeFunction(png_create_info_structFunction);
			
			mm.removeFunction(png_create_read_structFunction);
			
			mm.removeFunction(png_destroy_read_structFunction);
			
			mm.removeFunction(png_errorFunction);
			
			mm.removeFunction(png_get_IHDRFunction);
			
			mm.removeFunction(png_get_PLTEFunction);
			
			mm.removeFunction(png_get_tRNSFunction);
			
			mm.removeFunction(png_read_endFunction);
			
			mm.removeFunction(png_read_infoFunction);
			
			mm.removeFunction(png_set_read_fnFunction);
			
			mm.removeFunction(png_start_read_imageFunction);
			
			mm.removeFunction(png_read_imageFunction);
			
			mm.removeFunction(png_read_update_infoFunction);
			
			mm.removeFunction(png_set_packingFunction);
			
			mm.removeFunction(png_set_sig_bytesFunction);
			
			mm.removeFunction(png_set_packswapFunction);
			
			mm.removeFunction(sce_png_readFunction);
			
			mm.removeFunction(sceCccDecodeUTF8Function);
			
			mm.removeFunction(sceCccEncodeUTF16Function);
			
			mm.removeFunction(sceCccSetTableFunction);
			
			mm.removeFunction(scePaf_8D3EAEA3Function);
			
			mm.removeFunction(scePaf_C8E7B03FFunction);
			
			mm.removeFunction(scePaf_D4DAB044Function);
			
			mm.removeFunction(scePaf_15939BB8Function);
			
			mm.removeFunction(scePaf_8D736C8FFunction);
			
			mm.removeFunction(sceCccDecodeUTF16Function);
			
			mm.removeFunction(sceCccSJIStoUTF16Function);
			
			mm.removeFunction(sceCccStrlenSJISFunction);
			
			mm.removeFunction(sceCccUTF16toSJISFunction);
			
			mm.removeFunction(sceCccUTF8toUTF16Function);
			
			mm.removeFunction(scePaf_D6CDB3BBFunction);
			
			mm.removeFunction(scePaf_60CBB63FFunction);
			
			mm.removeFunction(scePaf_F93D4E1FFunction);
			
			mm.removeFunction(scePaf_B9383A25Function);
			
			mm.removeFunction(sceCccStrlenUTF8Function);
			
			mm.removeFunction(sceCccStrlenUTF16Function);
			
			mm.removeFunction(sceCccUTF16toUTF8Function);
			
			mm.removeFunction(scePaf_D5F3BAB1Function);
			
			mm.removeFunction(scePaf_EA39A7C1Function);
			
			mm.removeFunction(scePaf_6B1E90C7Function);
			
			mm.removeFunction(scePaf_66907719Function);
			
			mm.removeFunction(scePaf_AAD0EE78Function);
			
			mm.removeFunction(scePaf_E69C3B1BFunction);
			
			mm.removeFunction(scePaf_E618F7A8Function);
			
			mm.removeFunction(scePaf_78F94D84Function);
			
			mm.removeFunction(scePaf_5822F12AFunction);
			
			mm.removeFunction(scePaf_FD9DE7B9Function);
			
			mm.removeFunction(scePaf_AD43F865Function);
			
			mm.removeFunction(scePaf_872F948BFunction);
			
			mm.removeFunction(scePaf_D726F4A2Function);
			
			mm.removeFunction(scePaf_A044BFC0Function);
			
			mm.removeFunction(scePaf_F1CF9579Function);
			
			mm.removeFunction(scePaf_132148FDFunction);
			
			mm.removeFunction(scePaf_533F3856Function);
			
			mm.removeFunction(scePaf_139D9047Function);
			
			mm.removeFunction(scePaf_8D3B3587Function);
			
			mm.removeFunction(File_AllocLoadFunction);
			
			mm.removeFunction(File_SaveFunction);
			
			mm.removeFunction(Job_StartFunction);
			
			mm.removeFunction(Job_CancelFunction);
			
			mm.removeFunction(Job_Cancel2Function);
			
			mm.removeFunction(scePaf_79493F8FFunction);
			
			mm.removeFunction(scePaf_C1F72218Function);
			
			mm.removeFunction(scePaf_539F2583Function);
			
			mm.removeFunction(scePaf_B884B031Function);
			
			mm.removeFunction(scePaf_9399AF50Function);
			
			mm.removeFunction(scePaf_80E521C5Function);
			
			mm.removeFunction(scePaf_E05F3CEFFunction);
			
			mm.removeFunction(scePaf_E977B833Function);
			
			mm.removeFunction(Heap_AllocFunction);
			
			mm.removeFunction(Heap_FreeFunction);
			
			mm.removeFunction(scePaf_F84A99C8Function);
			
			mm.removeFunction(Heap_CreateFunction);
			
			mm.removeFunction(Heap_DestroyFunction);
			
			mm.removeFunction(scePaf_C4BAD564Function);
			
			mm.removeFunction(scePaf_D27DE19AFunction);
			
			mm.removeFunction(scePaf_BAE16A39Function);
			
			mm.removeFunction(scePaf_2CFAE498Function);
			
			mm.removeFunction(scePaf_58846DF3Function);
			
			mm.removeFunction(scePaf_E357380EFunction);
			
			mm.removeFunction(sceGuDisableFunction);
			
			mm.removeFunction(sceGuShadeModelFunction);
			
			mm.removeFunction(sceGuColorFunction);
			
			mm.removeFunction(sceGumDrawArrayFunction);
			
			mm.removeFunction(sceGumPopMatrixFunction);
			
			mm.removeFunction(sceGumPushMatrixFunction);
			
			mm.removeFunction(sceGumRotateZFunction);
			
			mm.removeFunction(sceGumScaleFunction);
			
			mm.removeFunction(sceGumTranslateFunction);
			
			mm.removeFunction(scePaf_A08B0F31Function);
			
			mm.removeFunction(paf_finiFunction);
			
			mm.removeFunction(sinfFunction);
			
			mm.removeFunction(cosfFunction);
			
			mm.removeFunction(sqrtfFunction);
			
			mm.removeFunction(mallocFunction);
			
			mm.removeFunction(freeFunction);
			
			mm.removeFunction(memcpyFunction);
			
			mm.removeFunction(memsetFunction);
			
			mm.removeFunction(memcmpFunction);
			
			mm.removeFunction(floorfFunction);
			
			mm.removeFunction(acosfFunction);
			
			mm.removeFunction(printfFunction);
			
		}
	}
	
	
	public void scePaf_C9831AFF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C9831AFF [0xC9831AFF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BFE9E90B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BFE9E90B [0xBFE9E90B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5FAC9869(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5FAC9869 [0x5FAC9869]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FCB4E053(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FCB4E053 [0xFCB4E053]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_26DE971C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_26DE971C [0x26DE971C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_613E9AA2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_613E9AA2 [0x613E9AA2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_40C95283(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_40C95283 [0x40C95283]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B61E88F2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B61E88F2 [0xB61E88F2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_545FE2DA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_545FE2DA [0x545FE2DA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7EC15225(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7EC15225 [0x7EC15225]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_60DECA7E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_60DECA7E [0x60DECA7E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FD4C9F47(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FD4C9F47 [0xFD4C9F47]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F95EA3F1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F95EA3F1 [0xF95EA3F1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6829D7AF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6829D7AF [0x6829D7AF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CA79D58B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CA79D58B [0xCA79D58B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_66FE90D7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_66FE90D7 [0x66FE90D7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_980228BA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_980228BA [0x980228BA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_296897BC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_296897BC [0x296897BC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DEDF238F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DEDF238F [0xDEDF238F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7BED034E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7BED034E [0x7BED034E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B3D58D25(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B3D58D25 [0xB3D58D25]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_44AAF96C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_44AAF96C [0x44AAF96C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_49A81B18(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_49A81B18 [0x49A81B18]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FF2F98C6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FF2F98C6 [0xFF2F98C6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_77D981F5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_77D981F5 [0x77D981F5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_45D851D1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_45D851D1 [0x45D851D1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_71712601(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_71712601 [0x71712601]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_71460F7C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_71460F7C [0x71460F7C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ABBBB335(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ABBBB335 [0xABBBB335]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_07A5F495(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_07A5F495 [0x07A5F495]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F1552447(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F1552447 [0xF1552447]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_83944053(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_83944053 [0x83944053]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0B4C0DB6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0B4C0DB6 [0x0B4C0DB6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2FDC80B3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2FDC80B3 [0x2FDC80B3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_993E9FDC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_993E9FDC [0x993E9FDC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3188E7DB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3188E7DB [0x3188E7DB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DC38941B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DC38941B [0xDC38941B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F0B4CAE7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F0B4CAE7 [0xF0B4CAE7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6C234A6A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6C234A6A [0x6C234A6A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_37A98AE9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_37A98AE9 [0x37A98AE9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3DD2A27B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3DD2A27B [0x3DD2A27B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9870A25B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9870A25B [0x9870A25B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_503BA324(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_503BA324 [0x503BA324]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2FA84441(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2FA84441 [0x2FA84441]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_84BD418F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_84BD418F [0x84BD418F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_902515FB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_902515FB [0x902515FB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3586BE05(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3586BE05 [0x3586BE05]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2FA0EDDC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2FA0EDDC [0x2FA0EDDC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3FBD9639(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3FBD9639 [0x3FBD9639]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6BA9C299(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6BA9C299 [0x6BA9C299]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F1B52E86(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F1B52E86 [0xF1B52E86]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_10B901E7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_10B901E7 [0x10B901E7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4370175A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4370175A [0x4370175A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_809A4F83(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_809A4F83 [0x809A4F83]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A82E3C19(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A82E3C19 [0xA82E3C19]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ED2B47FA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ED2B47FA [0xED2B47FA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_26168DD3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_26168DD3 [0x26168DD3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_626D68A1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_626D68A1 [0x626D68A1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FBA47E77(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FBA47E77 [0xFBA47E77]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_44A0BCE4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_44A0BCE4 [0x44A0BCE4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4B1A374C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4B1A374C [0x4B1A374C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1D5D9A68(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1D5D9A68 [0x1D5D9A68]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_51AAAAF4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_51AAAAF4 [0x51AAAAF4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_54C0DD23(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_54C0DD23 [0x54C0DD23]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9F10613F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9F10613F [0x9F10613F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8F12B63A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8F12B63A [0x8F12B63A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9D0192FD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9D0192FD [0x9D0192FD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FEAFC77A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FEAFC77A [0xFEAFC77A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_99A5CD38(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_99A5CD38 [0x99A5CD38]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CE699963(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CE699963 [0xCE699963]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CB2198AB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CB2198AB [0xCB2198AB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_11EF5210(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_11EF5210 [0x11EF5210]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B7E6052B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B7E6052B [0xB7E6052B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F13EBB78(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F13EBB78 [0xF13EBB78]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4E67BB08(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4E67BB08 [0x4E67BB08]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B3D2C3BB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B3D2C3BB [0xB3D2C3BB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_962FA087(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_962FA087 [0x962FA087]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D4C6CC7A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D4C6CC7A [0xD4C6CC7A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_927854C5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_927854C5 [0x927854C5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D02C0D2E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D02C0D2E [0xD02C0D2E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2FF0A287(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2FF0A287 [0x2FF0A287]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F47CA1C2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F47CA1C2 [0xF47CA1C2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EAA5AFF6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EAA5AFF6 [0xEAA5AFF6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_58BFC2AC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_58BFC2AC [0x58BFC2AC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_72514A05(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_72514A05 [0x72514A05]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A69BABE3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A69BABE3 [0xA69BABE3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9430557B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9430557B [0x9430557B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_607713A6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_607713A6 [0x607713A6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5EFC5387(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5EFC5387 [0x5EFC5387]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_79C3CBF7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_79C3CBF7 [0x79C3CBF7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3A4934E3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3A4934E3 [0x3A4934E3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4FF65BDC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4FF65BDC [0x4FF65BDC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_26DF747F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_26DF747F [0x26DF747F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_41BCFB59(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_41BCFB59 [0x41BCFB59]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FA05BF7B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FA05BF7B [0xFA05BF7B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AAA8D3DA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AAA8D3DA [0xAAA8D3DA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A18DB948(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A18DB948 [0xA18DB948]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2313DDCA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2313DDCA [0x2313DDCA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4FC2470C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4FC2470C [0x4FC2470C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B77039E4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B77039E4 [0xB77039E4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0C6EEA21(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0C6EEA21 [0x0C6EEA21]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CB7B666E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CB7B666E [0xCB7B666E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7B6F0E32(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7B6F0E32 [0x7B6F0E32]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_256218C2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_256218C2 [0x256218C2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_96C46364(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_96C46364 [0x96C46364]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7C31F453(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7C31F453 [0x7C31F453]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_503FA456(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_503FA456 [0x503FA456]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D5F5E68F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D5F5E68F [0xD5F5E68F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CAE6374A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CAE6374A [0xCAE6374A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_84A71447(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_84A71447 [0x84A71447]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D2463C79(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D2463C79 [0xD2463C79]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ED3E4EB1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ED3E4EB1 [0xED3E4EB1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8DB4B066(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8DB4B066 [0x8DB4B066]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B104EC1B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B104EC1B [0xB104EC1B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B3659499(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B3659499 [0xB3659499]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6E94BA7B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6E94BA7B [0x6E94BA7B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FF74C932(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FF74C932 [0xFF74C932]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F6F3E99E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F6F3E99E [0xF6F3E99E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A72594EF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A72594EF [0xA72594EF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_86926BB9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_86926BB9 [0x86926BB9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5075C799(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5075C799 [0x5075C799]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A76B9604(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A76B9604 [0xA76B9604]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E1C76B22(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E1C76B22 [0xE1C76B22]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_44EB8C62(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_44EB8C62 [0x44EB8C62]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C2C25056(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C2C25056 [0xC2C25056]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AEEF2A7C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AEEF2A7C [0xAEEF2A7C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_55CC4749(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_55CC4749 [0x55CC4749]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_37DD37B8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_37DD37B8 [0x37DD37B8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_16033F84(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_16033F84 [0x16033F84]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A0A25707(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A0A25707 [0xA0A25707]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E5BAC873(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E5BAC873 [0xE5BAC873]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0A189A1A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0A189A1A [0x0A189A1A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CB7CCB28(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CB7CCB28 [0xCB7CCB28]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7B099943(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7B099943 [0x7B099943]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E9BF6BEB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E9BF6BEB [0xE9BF6BEB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CEAC29F3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CEAC29F3 [0xCEAC29F3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_275BCDC6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_275BCDC6 [0x275BCDC6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_65C19AC0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_65C19AC0 [0x65C19AC0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8BA04801(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8BA04801 [0x8BA04801]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_93A60B78(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_93A60B78 [0x93A60B78]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AEE1CBAD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AEE1CBAD [0xAEE1CBAD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_19A779E2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_19A779E2 [0x19A779E2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CDC81771(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CDC81771 [0xCDC81771]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C1FAF826(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C1FAF826 [0xC1FAF826]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9C9B6732(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9C9B6732 [0x9C9B6732]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_78054045(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_78054045 [0x78054045]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DF9138A8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DF9138A8 [0xDF9138A8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F7FB133E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F7FB133E [0xF7FB133E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CFF2B69C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CFF2B69C [0xCFF2B69C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EF52945B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EF52945B [0xEF52945B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BAA88CDA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BAA88CDA [0xBAA88CDA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BDC894D8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BDC894D8 [0xBDC894D8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5045C01F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5045C01F [0x5045C01F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A89157EE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A89157EE [0xA89157EE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1F0B8678(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1F0B8678 [0x1F0B8678]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_33096E46(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_33096E46 [0x33096E46]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_47E35A50(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_47E35A50 [0x47E35A50]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_25391E36(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_25391E36 [0x25391E36]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_50FFFCD2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_50FFFCD2 [0x50FFFCD2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_206C1F70(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_206C1F70 [0x206C1F70]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0C66B594(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0C66B594 [0x0C66B594]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_39F89900(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_39F89900 [0x39F89900]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B6841F37(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B6841F37 [0xB6841F37]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_360956CC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_360956CC [0x360956CC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0AEDCDA1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0AEDCDA1 [0x0AEDCDA1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_222526B6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_222526B6 [0x222526B6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_41A7BDD2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_41A7BDD2 [0x41A7BDD2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D07AF3FA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D07AF3FA [0xD07AF3FA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_29DC646F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_29DC646F [0x29DC646F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2A6499A5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2A6499A5 [0x2A6499A5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4FCA0DE9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4FCA0DE9 [0x4FCA0DE9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E796C85B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E796C85B [0xE796C85B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BAFF6806(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BAFF6806 [0xBAFF6806]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AA978F61(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AA978F61 [0xAA978F61]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FCF42D6D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FCF42D6D [0xFCF42D6D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5DB527D4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5DB527D4 [0x5DB527D4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2E6CA751(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2E6CA751 [0x2E6CA751]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3F52824F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3F52824F [0x3F52824F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1C286704(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1C286704 [0x1C286704]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_672036FE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_672036FE [0x672036FE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_08A02EFF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_08A02EFF [0x08A02EFF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_01A35C15(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_01A35C15 [0x01A35C15]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_470ABD60(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_470ABD60 [0x470ABD60]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B42D784E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B42D784E [0xB42D784E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_84485F54(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_84485F54 [0x84485F54]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_87516C3B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_87516C3B [0x87516C3B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_715E8DAB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_715E8DAB [0x715E8DAB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D35B454A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D35B454A [0xD35B454A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CFB1A402(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CFB1A402 [0xCFB1A402]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5D7F1F27(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5D7F1F27 [0x5D7F1F27]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3291BDDD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3291BDDD [0x3291BDDD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_515EE222(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_515EE222 [0x515EE222]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3987B5C4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3987B5C4 [0x3987B5C4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F89ECA28(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F89ECA28 [0xF89ECA28]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4AF8E417(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4AF8E417 [0x4AF8E417]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_76D5A950(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_76D5A950 [0x76D5A950]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F577BC82(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F577BC82 [0xF577BC82]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_369E597A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_369E597A [0x369E597A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_293A01D8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_293A01D8 [0x293A01D8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_45386654(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_45386654 [0x45386654]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_73D49419(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_73D49419 [0x73D49419]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AD007AB6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AD007AB6 [0xAD007AB6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F49F3C59(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F49F3C59 [0xF49F3C59]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_05EEE8A6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_05EEE8A6 [0x05EEE8A6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_15EF8E18(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_15EF8E18 [0x15EF8E18]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FE84212F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FE84212F [0xFE84212F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9D92765E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9D92765E [0x9D92765E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_98A6C193(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_98A6C193 [0x98A6C193]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1943B875(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1943B875 [0x1943B875]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D7074BD1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D7074BD1 [0xD7074BD1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BD49CAEF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BD49CAEF [0xBD49CAEF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6C4976AF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6C4976AF [0x6C4976AF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_85112756(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_85112756 [0x85112756]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FDB39519(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FDB39519 [0xFDB39519]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DA3A6D88(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DA3A6D88 [0xDA3A6D88]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_199896A3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_199896A3 [0x199896A3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5458E412(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5458E412 [0x5458E412]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_43374E9E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_43374E9E [0x43374E9E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6797988C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6797988C [0x6797988C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_449C8821(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_449C8821 [0x449C8821]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6C386158(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6C386158 [0x6C386158]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8E751FCC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8E751FCC [0x8E751FCC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F32223AC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F32223AC [0xF32223AC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_40B21F4F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_40B21F4F [0x40B21F4F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_501E9BC9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_501E9BC9 [0x501E9BC9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EFAC3E9F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EFAC3E9F [0xEFAC3E9F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C933B3C5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C933B3C5 [0xC933B3C5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F554C7C7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F554C7C7 [0xF554C7C7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4E60E34C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4E60E34C [0x4E60E34C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_39C55C03(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_39C55C03 [0x39C55C03]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_65920294(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_65920294 [0x65920294]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_37DDBDD8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_37DDBDD8 [0x37DDBDD8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_92A46B32(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_92A46B32 [0x92A46B32]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_905347E9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_905347E9 [0x905347E9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DF887DED(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DF887DED [0xDF887DED]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DC544921(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DC544921 [0xDC544921]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_585B93BC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_585B93BC [0x585B93BC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1AD33D73(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1AD33D73 [0x1AD33D73]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A4F53FED(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A4F53FED [0xA4F53FED]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_01CF521E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_01CF521E [0x01CF521E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3C68DCB7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3C68DCB7 [0x3C68DCB7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3F81333A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3F81333A [0x3F81333A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9A8E343E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9A8E343E [0x9A8E343E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_95040C08(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_95040C08 [0x95040C08]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_07BA4C80(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_07BA4C80 [0x07BA4C80]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0CFDBE2F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0CFDBE2F [0x0CFDBE2F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3829AC24(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3829AC24 [0x3829AC24]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1F0E9712(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1F0E9712 [0x1F0E9712]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D24E4016(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D24E4016 [0xD24E4016]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_409E25A3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_409E25A3 [0x409E25A3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DC8B0309(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DC8B0309 [0xDC8B0309]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EB553D60(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EB553D60 [0xEB553D60]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4EA868E6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4EA868E6 [0x4EA868E6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8AB03D91(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8AB03D91 [0x8AB03D91]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5CA7F421(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5CA7F421 [0x5CA7F421]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B7865607(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B7865607 [0xB7865607]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_95948FB6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_95948FB6 [0x95948FB6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BA433BEF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BA433BEF [0xBA433BEF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ED89C94B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ED89C94B [0xED89C94B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0E8A3B52(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0E8A3B52 [0x0E8A3B52]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D587826C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D587826C [0xD587826C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_61B105C0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_61B105C0 [0x61B105C0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DAD477C1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DAD477C1 [0xDAD477C1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D91B2651(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D91B2651 [0xD91B2651]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A02E66FA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A02E66FA [0xA02E66FA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2D79697E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2D79697E [0x2D79697E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EDF1C662(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EDF1C662 [0xEDF1C662]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A7818BCE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A7818BCE [0xA7818BCE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_695BCD34(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_695BCD34 [0x695BCD34]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C4D819AA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C4D819AA [0xC4D819AA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_70B92642(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_70B92642 [0x70B92642]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_447974D1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_447974D1 [0x447974D1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_63EA1815(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_63EA1815 [0x63EA1815]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CB65103E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CB65103E [0xCB65103E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_32B27ADD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_32B27ADD [0x32B27ADD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ADC146F0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ADC146F0 [0xADC146F0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D5A254F9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D5A254F9 [0xD5A254F9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_42F43213(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_42F43213 [0x42F43213]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5D242D11(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5D242D11 [0x5D242D11]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_11361F12(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_11361F12 [0x11361F12]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_51FF9D24(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_51FF9D24 [0x51FF9D24]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B2ED6CAA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B2ED6CAA [0xB2ED6CAA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_79F4AE65(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_79F4AE65 [0x79F4AE65]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_905CF2A7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_905CF2A7 [0x905CF2A7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E732CF74(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E732CF74 [0xE732CF74]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B711DC69(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B711DC69 [0xB711DC69]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0ED80B09(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0ED80B09 [0x0ED80B09]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BB457D6F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BB457D6F [0xBB457D6F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B6F52424(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B6F52424 [0xB6F52424]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BA6B8B02(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BA6B8B02 [0xBA6B8B02]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B9BE69FD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B9BE69FD [0xB9BE69FD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FA758B05(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FA758B05 [0xFA758B05]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FA87D725(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FA87D725 [0xFA87D725]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FC37FABD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FC37FABD [0xFC37FABD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_64775957(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_64775957 [0x64775957]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7F2442DC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7F2442DC [0x7F2442DC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_86B41BA3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_86B41BA3 [0x86B41BA3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_541F36E9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_541F36E9 [0x541F36E9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_86C87E62(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_86C87E62 [0x86C87E62]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F1546D14(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F1546D14 [0xF1546D14]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6840D208(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6840D208 [0x6840D208]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D1EE972C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D1EE972C [0xD1EE972C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1232B7A3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1232B7A3 [0x1232B7A3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8D7FC7DB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8D7FC7DB [0x8D7FC7DB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5DE0445F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5DE0445F [0x5DE0445F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_09AC6844(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_09AC6844 [0x09AC6844]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D2E0D705(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D2E0D705 [0xD2E0D705]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AE02F241(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AE02F241 [0xAE02F241]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D1159069(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D1159069 [0xD1159069]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BFFAEE83(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BFFAEE83 [0xBFFAEE83]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DDA68BE8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DDA68BE8 [0xDDA68BE8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9AFD4AD4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9AFD4AD4 [0x9AFD4AD4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6E1B5B50(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6E1B5B50 [0x6E1B5B50]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8DEB3DB3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8DEB3DB3 [0x8DEB3DB3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BA09CF46(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BA09CF46 [0xBA09CF46]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6DD28F44(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6DD28F44 [0x6DD28F44]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4ADAEF94(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4ADAEF94 [0x4ADAEF94]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_95708BC0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_95708BC0 [0x95708BC0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C85155C9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C85155C9 [0xC85155C9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DEF9EBE7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DEF9EBE7 [0xDEF9EBE7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F23F3226(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F23F3226 [0xF23F3226]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D153385E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D153385E [0xD153385E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_86A5AE7D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_86A5AE7D [0x86A5AE7D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5A8D4BDB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5A8D4BDB [0x5A8D4BDB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2120282A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2120282A [0x2120282A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8159EB28(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8159EB28 [0x8159EB28]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5CE11C03(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5CE11C03 [0x5CE11C03]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_05073826(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_05073826 [0x05073826]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A4B48F00(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A4B48F00 [0xA4B48F00]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_224C33F0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_224C33F0 [0x224C33F0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3DBE861F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3DBE861F [0x3DBE861F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FA78AF39(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FA78AF39 [0xFA78AF39]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A3761F27(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A3761F27 [0xA3761F27]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DE75C2BA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DE75C2BA [0xDE75C2BA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4129A915(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4129A915 [0x4129A915]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8A51BA1E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8A51BA1E [0x8A51BA1E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0FFA3ECE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0FFA3ECE [0x0FFA3ECE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_89582FD0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_89582FD0 [0x89582FD0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_84913A3A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_84913A3A [0x84913A3A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_06EA7CDE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_06EA7CDE [0x06EA7CDE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9563887D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9563887D [0x9563887D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_21B885B8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_21B885B8 [0x21B885B8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B0FD305A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B0FD305A [0xB0FD305A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_777635B9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_777635B9 [0x777635B9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F8301DBC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F8301DBC [0xF8301DBC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5A818E41(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5A818E41 [0x5A818E41]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A9970EF5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A9970EF5 [0xA9970EF5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6741C662(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6741C662 [0x6741C662]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_14CE7F6F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_14CE7F6F [0x14CE7F6F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DFC8650C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DFC8650C [0xDFC8650C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ECE59E24(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ECE59E24 [0xECE59E24]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4D810FDC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4D810FDC [0x4D810FDC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ABCBC1C5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ABCBC1C5 [0xABCBC1C5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7C2C2742(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7C2C2742 [0x7C2C2742]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D0AD10FF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D0AD10FF [0xD0AD10FF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2A2EB136(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2A2EB136 [0x2A2EB136]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_20F5234E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_20F5234E [0x20F5234E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6F74F263(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6F74F263 [0x6F74F263]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D6232F26(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D6232F26 [0xD6232F26]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ED83B18F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ED83B18F [0xED83B18F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D6C1FF36(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D6C1FF36 [0xD6C1FF36]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7952AE83(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7952AE83 [0x7952AE83]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FDB98CAC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FDB98CAC [0xFDB98CAC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BA1F20EE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BA1F20EE [0xBA1F20EE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D96449B4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D96449B4 [0xD96449B4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_71EDAD83(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_71EDAD83 [0x71EDAD83]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2CB6FBBE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2CB6FBBE [0x2CB6FBBE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_442F1731(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_442F1731 [0x442F1731]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E418D7E0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E418D7E0 [0xE418D7E0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C8FD64AA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C8FD64AA [0xC8FD64AA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DB230BE1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DB230BE1 [0xDB230BE1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0FB7D433(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0FB7D433 [0x0FB7D433]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C2E4423A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C2E4423A [0xC2E4423A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A574DB92(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A574DB92 [0xA574DB92]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C6F44EF9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C6F44EF9 [0xC6F44EF9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6B678D44(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6B678D44 [0x6B678D44]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E15A64EA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E15A64EA [0xE15A64EA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6A772BF7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6A772BF7 [0x6A772BF7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D180ACBA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D180ACBA [0xD180ACBA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4C5F6657(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4C5F6657 [0x4C5F6657]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DFB912CB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DFB912CB [0xDFB912CB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BAA76FDE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BAA76FDE [0xBAA76FDE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6CF44237(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6CF44237 [0x6CF44237]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CFAF88AB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CFAF88AB [0xCFAF88AB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D34D0B82(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D34D0B82 [0xD34D0B82]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8CDEDC6F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8CDEDC6F [0x8CDEDC6F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_22B0D7D8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_22B0D7D8 [0x22B0D7D8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CA8CDF32(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CA8CDF32 [0xCA8CDF32]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FCABD0E7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FCABD0E7 [0xFCABD0E7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EE10AEF1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EE10AEF1 [0xEE10AEF1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D99BEC81(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D99BEC81 [0xD99BEC81]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4D4805AF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4D4805AF [0x4D4805AF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_28F8DE83(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_28F8DE83 [0x28F8DE83]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B1F587EF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B1F587EF [0xB1F587EF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8C1ED07B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8C1ED07B [0x8C1ED07B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_04EF78CD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_04EF78CD [0x04EF78CD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_75A553A2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_75A553A2 [0x75A553A2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F4404EAF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F4404EAF [0xF4404EAF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D63D4561(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D63D4561 [0xD63D4561]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_81667058(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_81667058 [0x81667058]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_149CDEB9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_149CDEB9 [0x149CDEB9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_62081F34(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_62081F34 [0x62081F34]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BECD1827(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BECD1827 [0xBECD1827]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A8711520(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A8711520 [0xA8711520]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FCDD55E3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FCDD55E3 [0xFCDD55E3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2EABF548(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2EABF548 [0x2EABF548]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_50F72192(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_50F72192 [0x50F72192]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_73712598(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_73712598 [0x73712598]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8B439A23(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8B439A23 [0x8B439A23]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7435C5D5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7435C5D5 [0x7435C5D5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CC103AD2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CC103AD2 [0xCC103AD2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_566BC690(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_566BC690 [0x566BC690]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_68569AAC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_68569AAC [0x68569AAC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_76491EEA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_76491EEA [0x76491EEA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7771BC86(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7771BC86 [0x7771BC86]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_06BB62B7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_06BB62B7 [0x06BB62B7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_30F5E7DF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_30F5E7DF [0x30F5E7DF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_97B9C21E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_97B9C21E [0x97B9C21E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D16E5935(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D16E5935 [0xD16E5935]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9D496842(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9D496842 [0x9D496842]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2750CF68(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2750CF68 [0x2750CF68]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F639E5E1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F639E5E1 [0xF639E5E1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7116224C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7116224C [0x7116224C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9DD9CA07(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9DD9CA07 [0x9DD9CA07]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FB3A9617(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FB3A9617 [0xFB3A9617]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_35F003C0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_35F003C0 [0x35F003C0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EBDC149C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EBDC149C [0xEBDC149C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_08DD2D50(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_08DD2D50 [0x08DD2D50]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_846E1F0A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_846E1F0A [0x846E1F0A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4AB0D3F4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4AB0D3F4 [0x4AB0D3F4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9122393C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9122393C [0x9122393C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5C4BF618(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5C4BF618 [0x5C4BF618]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_93538664(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_93538664 [0x93538664]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_952CE8AF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_952CE8AF [0x952CE8AF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_21DBFF5B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_21DBFF5B [0x21DBFF5B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_359CBCAF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_359CBCAF [0x359CBCAF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3684D457(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3684D457 [0x3684D457]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0598FFD6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0598FFD6 [0x0598FFD6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CAF82B9B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CAF82B9B [0xCAF82B9B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5B202AED(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5B202AED [0x5B202AED]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_50DC7446(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_50DC7446 [0x50DC7446]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_36CB5601(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_36CB5601 [0x36CB5601]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BA32D6E6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BA32D6E6 [0xBA32D6E6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EAB7BD23(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EAB7BD23 [0xEAB7BD23]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_669DE9B1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_669DE9B1 [0x669DE9B1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_940D9797(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_940D9797 [0x940D9797]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4708AED4(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4708AED4 [0x4708AED4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_32A70C80(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_32A70C80 [0x32A70C80]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CAF05F1D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CAF05F1D [0xCAF05F1D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_49CE42F7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_49CE42F7 [0x49CE42F7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FC6B7234(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FC6B7234 [0xFC6B7234]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_63B24F4D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_63B24F4D [0x63B24F4D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6F33D1DF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6F33D1DF [0x6F33D1DF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3481F595(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3481F595 [0x3481F595]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_986FEBD1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_986FEBD1 [0x986FEBD1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_458A9C95(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_458A9C95 [0x458A9C95]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D3D12890(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D3D12890 [0xD3D12890]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9D1633BC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9D1633BC [0x9D1633BC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_98E1BC87(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_98E1BC87 [0x98E1BC87]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_84240C1D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_84240C1D [0x84240C1D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5D786CDD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5D786CDD [0x5D786CDD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6E95EFAA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6E95EFAA [0x6E95EFAA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_88D73AED(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_88D73AED [0x88D73AED]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D4FAE7D0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D4FAE7D0 [0xD4FAE7D0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_338C3774(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_338C3774 [0x338C3774]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DC2CA0F7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DC2CA0F7 [0xDC2CA0F7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7F7791A1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7F7791A1 [0x7F7791A1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F28A9DB3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F28A9DB3 [0xF28A9DB3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BB3CBD19(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BB3CBD19 [0xBB3CBD19]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_27F64616(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_27F64616 [0x27F64616]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_72129CFB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_72129CFB [0x72129CFB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DAB59652(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DAB59652 [0xDAB59652]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1A45C860(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1A45C860 [0x1A45C860]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D7215544(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D7215544 [0xD7215544]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5DFB5858(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5DFB5858 [0x5DFB5858]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5EBC648F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5EBC648F [0x5EBC648F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F247A0BD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F247A0BD [0xF247A0BD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_910A6B7B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_910A6B7B [0x910A6B7B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5470B915(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5470B915 [0x5470B915]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D05C226F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D05C226F [0xD05C226F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CE21D21F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CE21D21F [0xCE21D21F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8860B0FD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8860B0FD [0x8860B0FD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2AA842B0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2AA842B0 [0x2AA842B0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D5372E90(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D5372E90 [0xD5372E90]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D7C2E0AD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D7C2E0AD [0xD7C2E0AD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F4AB3180(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F4AB3180 [0xF4AB3180]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EA026663(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EA026663 [0xEA026663]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F609FA81(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F609FA81 [0xF609FA81]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BBDE1C17(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BBDE1C17 [0xBBDE1C17]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8117E6C8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8117E6C8 [0x8117E6C8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1811AD32(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1811AD32 [0x1811AD32]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6CE39EF8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6CE39EF8 [0x6CE39EF8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B09203B0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B09203B0 [0xB09203B0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_58C69BDA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_58C69BDA [0x58C69BDA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E32B3558(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E32B3558 [0xE32B3558]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_86237EB3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_86237EB3 [0x86237EB3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BEF9FF15(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BEF9FF15 [0xBEF9FF15]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FE4D4112(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FE4D4112 [0xFE4D4112]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DAA609BB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DAA609BB [0xDAA609BB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_69CA1A2D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_69CA1A2D [0x69CA1A2D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D3F5956D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D3F5956D [0xD3F5956D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_602EB0CE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_602EB0CE [0x602EB0CE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6A14BB04(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6A14BB04 [0x6A14BB04]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_95960A88(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_95960A88 [0x95960A88]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D6CD39AF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D6CD39AF [0xD6CD39AF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_79E57CAF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_79E57CAF [0x79E57CAF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9DED6118(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9DED6118 [0x9DED6118]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_997D2809(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_997D2809 [0x997D2809]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7D83FB20(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7D83FB20 [0x7D83FB20]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E1242646(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E1242646 [0xE1242646]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_0F3527DD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_0F3527DD [0x0F3527DD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_10C1DB70(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_10C1DB70 [0x10C1DB70]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_39B36025(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_39B36025 [0x39B36025]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_01C2FC36(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_01C2FC36 [0x01C2FC36]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_17308FC9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_17308FC9 [0x17308FC9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F3967AF5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F3967AF5 [0xF3967AF5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_34C973B6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_34C973B6 [0x34C973B6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4C8C2E25(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4C8C2E25 [0x4C8C2E25]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_81FD71A9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_81FD71A9 [0x81FD71A9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BBBF145C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BBBF145C [0xBBBF145C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B52E43FB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B52E43FB [0xB52E43FB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_95C97571(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_95C97571 [0x95C97571]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F273FE50(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F273FE50 [0xF273FE50]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AD7A45F9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AD7A45F9 [0xAD7A45F9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_67C7567E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_67C7567E [0x67C7567E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_56F4D69F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_56F4D69F [0x56F4D69F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D7E925A1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D7E925A1 [0xD7E925A1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_296ED0EF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_296ED0EF [0x296ED0EF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DBD69B7B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DBD69B7B [0xDBD69B7B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7DDE0658(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7DDE0658 [0x7DDE0658]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CC3CFABF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CC3CFABF [0xCC3CFABF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D2C94856(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D2C94856 [0xD2C94856]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EF346632(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EF346632 [0xEF346632]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_79293604(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_79293604 [0x79293604]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AECF91A9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AECF91A9 [0xAECF91A9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3342C5F5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3342C5F5 [0x3342C5F5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_48B5C1C0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_48B5C1C0 [0x48B5C1C0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D188831A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D188831A [0xD188831A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2D08CA09(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2D08CA09 [0x2D08CA09]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_55C7628A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_55C7628A [0x55C7628A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A9CE8FBB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A9CE8FBB [0xA9CE8FBB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D6F088EF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D6F088EF [0xD6F088EF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F2E5FDEB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F2E5FDEB [0xF2E5FDEB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6E3E2085(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6E3E2085 [0x6E3E2085]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6676FAA6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6676FAA6 [0x6676FAA6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7D9A4824(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7D9A4824 [0x7D9A4824]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D8739C4C(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D8739C4C [0xD8739C4C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_34C7D69A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_34C7D69A [0x34C7D69A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_CDB85442(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_CDB85442 [0xCDB85442]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DFD3E855(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DFD3E855 [0xDFD3E855]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2AA80564(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2AA80564 [0x2AA80564]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6BAC756B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6BAC756B [0x6BAC756B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3A844B7B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3A844B7B [0x3A844B7B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9B8CBC5F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9B8CBC5F [0x9B8CBC5F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BE5B0791(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BE5B0791 [0xBE5B0791]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FCD816FA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FCD816FA [0xFCD816FA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_548AA4E7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_548AA4E7 [0x548AA4E7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_21A0C6E0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_21A0C6E0 [0x21A0C6E0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C01BF169(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C01BF169 [0xC01BF169]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AD1721B8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AD1721B8 [0xAD1721B8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_910BCFE1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_910BCFE1 [0x910BCFE1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_75DBA857(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_75DBA857 [0x75DBA857]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_849ED670(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_849ED670 [0x849ED670]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5148EFE2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5148EFE2 [0x5148EFE2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D36F3AAA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D36F3AAA [0xD36F3AAA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1A468B86(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1A468B86 [0x1A468B86]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8E757709(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8E757709 [0x8E757709]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7BBD70F0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7BBD70F0 [0x7BBD70F0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_DFFE9ED6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_DFFE9ED6 [0xDFFE9ED6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_72A0044D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_72A0044D [0x72A0044D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_4612DB4B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_4612DB4B [0x4612DB4B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_78219D10(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_78219D10 [0x78219D10]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_97FDA760(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_97FDA760 [0x97FDA760]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_298246CD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_298246CD [0x298246CD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_12C50A9D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_12C50A9D [0x12C50A9D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_3D451DE8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_3D451DE8 [0x3D451DE8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8FE88010(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8FE88010 [0x8FE88010]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_21A183A7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_21A183A7 [0x21A183A7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_ABEBF18D(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_ABEBF18D [0xABEBF18D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_94136997(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_94136997 [0x94136997]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A25BDAA2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A25BDAA2 [0xA25BDAA2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9F60CB01(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9F60CB01 [0x9F60CB01]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_50B0C0A1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_50B0C0A1 [0x50B0C0A1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_7E304DCF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_7E304DCF [0x7E304DCF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_1F43B8A2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_1F43B8A2 [0x1F43B8A2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_891B7F7F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_891B7F7F [0x891B7F7F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_14D80C40(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_14D80C40 [0x14D80C40]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_87E5F9C7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_87E5F9C7 [0x87E5F9C7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D3AB4076(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D3AB4076 [0xD3AB4076]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_537D04C6(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_537D04C6 [0x537D04C6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_create_info_struct(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_create_info_struct [0x7AFD6B74]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_create_read_struct(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_create_read_struct [0x6528115D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_destroy_read_struct(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_destroy_read_struct [0x211A764A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_error(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_error [0x7894B61F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_get_IHDR(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_get_IHDR [0x38F12307]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_get_PLTE(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_get_PLTE [0xE6432407]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_get_tRNS(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_get_tRNS [0x07216006]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_read_end(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_read_end [0xB2290D1A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_read_info(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_read_info [0xE327C974]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_set_read_fn(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_set_read_fn [0x1BDFF258]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_start_read_image(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_start_read_image [0xDB1549DF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_read_image(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_read_image [0xDDD91620]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_read_update_info(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_read_update_info [0xD4F9270D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_set_packing(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_set_packing [0x7333E75A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_set_sig_bytes(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_set_sig_bytes [0x1A1F232F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void png_set_packswap(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function png_set_packswap [0xC6624F24]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sce_png_read(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sce_png_read [0xFBC76D05]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccDecodeUTF8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccDecodeUTF8 [0xC6A8BEE2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccEncodeUTF16(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccEncodeUTF16 [0x8406F469]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccSetTable(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccSetTable [0xB4D1CBBF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8D3EAEA3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8D3EAEA3 [0x8D3EAEA3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C8E7B03F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C8E7B03F [0xC8E7B03F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D4DAB044(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D4DAB044 [0xD4DAB044]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_15939BB8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_15939BB8 [0x15939BB8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8D736C8F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8D736C8F [0x8D736C8F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccDecodeUTF16(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccDecodeUTF16 [0xE0CF8091]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccSJIStoUTF16(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccSJIStoUTF16 [0xBEB47224]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccStrlenSJIS(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccStrlenSJIS [0xD9392CCB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccUTF16toSJIS(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccUTF16toSJIS [0xF1B73D12]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccUTF8toUTF16(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccUTF8toUTF16 [0x00D1378F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D6CDB3BB(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D6CDB3BB [0xD6CDB3BB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_60CBB63F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_60CBB63F [0x60CBB63F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F93D4E1F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F93D4E1F [0xF93D4E1F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B9383A25(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B9383A25 [0xB9383A25]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccStrlenUTF8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccStrlenUTF8 [0xB7D3C112]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccStrlenUTF16(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccStrlenUTF16 [0x4BDEB2A8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceCccUTF16toUTF8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceCccUTF16toUTF8 [0x41B724A5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D5F3BAB1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D5F3BAB1 [0xD5F3BAB1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_EA39A7C1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_EA39A7C1 [0xEA39A7C1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_6B1E90C7(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_6B1E90C7 [0x6B1E90C7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_66907719(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_66907719 [0x66907719]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AAD0EE78(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AAD0EE78 [0xAAD0EE78]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E69C3B1B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E69C3B1B [0xE69C3B1B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E618F7A8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E618F7A8 [0xE618F7A8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_78F94D84(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_78F94D84 [0x78F94D84]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_5822F12A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_5822F12A [0x5822F12A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_FD9DE7B9(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_FD9DE7B9 [0xFD9DE7B9]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_AD43F865(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_AD43F865 [0xAD43F865]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_872F948B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_872F948B [0x872F948B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D726F4A2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D726F4A2 [0xD726F4A2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A044BFC0(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A044BFC0 [0xA044BFC0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F1CF9579(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F1CF9579 [0xF1CF9579]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_132148FD(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_132148FD [0x132148FD]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_533F3856(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_533F3856 [0x533F3856]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_139D9047(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_139D9047 [0x139D9047]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_8D3B3587(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_8D3B3587 [0x8D3B3587]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void File_AllocLoad(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function File_AllocLoad [0x27760582]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void File_Save(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function File_Save [0xFD3FF4AA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void Job_Start(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function Job_Start [0xA0ED77C4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void Job_Cancel(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function Job_Cancel [0x35F25BA1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void Job_Cancel2(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function Job_Cancel2 [0x75062BCF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_79493F8F(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_79493F8F [0x79493F8F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C1F72218(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C1F72218 [0xC1F72218]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_539F2583(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_539F2583 [0x539F2583]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_B884B031(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_B884B031 [0xB884B031]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_9399AF50(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_9399AF50 [0x9399AF50]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_80E521C5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_80E521C5 [0x80E521C5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E05F3CEF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E05F3CEF [0xE05F3CEF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E977B833(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E977B833 [0xE977B833]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void Heap_Alloc(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function Heap_Alloc [0x3E203AEB]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void Heap_Free(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function Heap_Free [0x9948CDB3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_F84A99C8(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_F84A99C8 [0xF84A99C8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void Heap_Create(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function Heap_Create [0x6D491648]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void Heap_Destroy(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function Heap_Destroy [0x8A861692]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_C4BAD564(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_C4BAD564 [0xC4BAD564]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_D27DE19A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_D27DE19A [0xD27DE19A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_BAE16A39(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_BAE16A39 [0xBAE16A39]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_2CFAE498(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_2CFAE498 [0x2CFAE498]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_58846DF3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_58846DF3 [0x58846DF3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_E357380E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_E357380E [0xE357380E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGuDisable(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGuDisable [0x4B4F39FC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGuShadeModel(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGuShadeModel [0x5C5F727C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGuColor(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGuColor [0x0F2615A4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGumDrawArray(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGumDrawArray [0xEA4C24B3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGumPopMatrix(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGumPopMatrix [0x28C54317]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGumPushMatrix(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGumPushMatrix [0xCBA9AAB1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGumRotateZ(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGumRotateZ [0x2C5D3E63]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGumScale(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGumScale [0x38316A7D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceGumTranslate(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceGumTranslate [0x96610AE6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void scePaf_A08B0F31(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function scePaf_A08B0F31 [0xA08B0F31]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void paf_fini(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function paf_fini [0xFB3DB2FF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sinf(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sinf [0xE13B6DAE]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void cosf(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function cosf [0xEB6D20A5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sqrtf(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sqrtf [0x09F5941E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void malloc(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function malloc [0x481C9ADA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void free(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function free [0xAD8AF84F]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void memcpy(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function memcpy [0xAB7592FF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void memset(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function memset [0x10F3BB61]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void memcmp(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function memcmp [0x81D0D1F7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void floorf(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function floorf [0x7EDCC45E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void acosf(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function acosf [0x820C80E6]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void printf(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function printf [0xCAB439DF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public final HLEModuleFunction scePaf_C9831AFFFunction = new HLEModuleFunction("scePaf", "scePaf_C9831AFF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C9831AFF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C9831AFFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BFE9E90BFunction = new HLEModuleFunction("scePaf", "scePaf_BFE9E90B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BFE9E90B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BFE9E90BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5FAC9869Function = new HLEModuleFunction("scePaf", "scePaf_5FAC9869") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5FAC9869(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5FAC9869Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FCB4E053Function = new HLEModuleFunction("scePaf", "scePaf_FCB4E053") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FCB4E053(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FCB4E053Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_26DE971CFunction = new HLEModuleFunction("scePaf", "scePaf_26DE971C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_26DE971C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_26DE971CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_613E9AA2Function = new HLEModuleFunction("scePaf", "scePaf_613E9AA2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_613E9AA2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_613E9AA2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_40C95283Function = new HLEModuleFunction("scePaf", "scePaf_40C95283") {
		@Override
		public final void execute(Processor processor) {
			scePaf_40C95283(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_40C95283Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B61E88F2Function = new HLEModuleFunction("scePaf", "scePaf_B61E88F2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B61E88F2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B61E88F2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_545FE2DAFunction = new HLEModuleFunction("scePaf", "scePaf_545FE2DA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_545FE2DA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_545FE2DAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7EC15225Function = new HLEModuleFunction("scePaf", "scePaf_7EC15225") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7EC15225(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7EC15225Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_60DECA7EFunction = new HLEModuleFunction("scePaf", "scePaf_60DECA7E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_60DECA7E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_60DECA7EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FD4C9F47Function = new HLEModuleFunction("scePaf", "scePaf_FD4C9F47") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FD4C9F47(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FD4C9F47Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F95EA3F1Function = new HLEModuleFunction("scePaf", "scePaf_F95EA3F1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F95EA3F1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F95EA3F1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6829D7AFFunction = new HLEModuleFunction("scePaf", "scePaf_6829D7AF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6829D7AF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6829D7AFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CA79D58BFunction = new HLEModuleFunction("scePaf", "scePaf_CA79D58B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CA79D58B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CA79D58BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_66FE90D7Function = new HLEModuleFunction("scePaf", "scePaf_66FE90D7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_66FE90D7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_66FE90D7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_980228BAFunction = new HLEModuleFunction("scePaf", "scePaf_980228BA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_980228BA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_980228BAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_296897BCFunction = new HLEModuleFunction("scePaf", "scePaf_296897BC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_296897BC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_296897BCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DEDF238FFunction = new HLEModuleFunction("scePaf", "scePaf_DEDF238F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DEDF238F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DEDF238FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7BED034EFunction = new HLEModuleFunction("scePaf", "scePaf_7BED034E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7BED034E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7BED034EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B3D58D25Function = new HLEModuleFunction("scePaf", "scePaf_B3D58D25") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B3D58D25(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B3D58D25Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_44AAF96CFunction = new HLEModuleFunction("scePaf", "scePaf_44AAF96C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_44AAF96C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_44AAF96CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_49A81B18Function = new HLEModuleFunction("scePaf", "scePaf_49A81B18") {
		@Override
		public final void execute(Processor processor) {
			scePaf_49A81B18(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_49A81B18Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FF2F98C6Function = new HLEModuleFunction("scePaf", "scePaf_FF2F98C6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FF2F98C6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FF2F98C6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_77D981F5Function = new HLEModuleFunction("scePaf", "scePaf_77D981F5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_77D981F5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_77D981F5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_45D851D1Function = new HLEModuleFunction("scePaf", "scePaf_45D851D1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_45D851D1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_45D851D1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_71712601Function = new HLEModuleFunction("scePaf", "scePaf_71712601") {
		@Override
		public final void execute(Processor processor) {
			scePaf_71712601(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_71712601Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_71460F7CFunction = new HLEModuleFunction("scePaf", "scePaf_71460F7C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_71460F7C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_71460F7CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ABBBB335Function = new HLEModuleFunction("scePaf", "scePaf_ABBBB335") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ABBBB335(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ABBBB335Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_07A5F495Function = new HLEModuleFunction("scePaf", "scePaf_07A5F495") {
		@Override
		public final void execute(Processor processor) {
			scePaf_07A5F495(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_07A5F495Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F1552447Function = new HLEModuleFunction("scePaf", "scePaf_F1552447") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F1552447(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F1552447Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_83944053Function = new HLEModuleFunction("scePaf", "scePaf_83944053") {
		@Override
		public final void execute(Processor processor) {
			scePaf_83944053(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_83944053Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0B4C0DB6Function = new HLEModuleFunction("scePaf", "scePaf_0B4C0DB6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0B4C0DB6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0B4C0DB6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2FDC80B3Function = new HLEModuleFunction("scePaf", "scePaf_2FDC80B3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2FDC80B3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2FDC80B3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_993E9FDCFunction = new HLEModuleFunction("scePaf", "scePaf_993E9FDC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_993E9FDC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_993E9FDCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3188E7DBFunction = new HLEModuleFunction("scePaf", "scePaf_3188E7DB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3188E7DB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3188E7DBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DC38941BFunction = new HLEModuleFunction("scePaf", "scePaf_DC38941B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DC38941B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DC38941BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F0B4CAE7Function = new HLEModuleFunction("scePaf", "scePaf_F0B4CAE7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F0B4CAE7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F0B4CAE7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6C234A6AFunction = new HLEModuleFunction("scePaf", "scePaf_6C234A6A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6C234A6A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6C234A6AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_37A98AE9Function = new HLEModuleFunction("scePaf", "scePaf_37A98AE9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_37A98AE9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_37A98AE9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3DD2A27BFunction = new HLEModuleFunction("scePaf", "scePaf_3DD2A27B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3DD2A27B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3DD2A27BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9870A25BFunction = new HLEModuleFunction("scePaf", "scePaf_9870A25B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9870A25B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9870A25BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_503BA324Function = new HLEModuleFunction("scePaf", "scePaf_503BA324") {
		@Override
		public final void execute(Processor processor) {
			scePaf_503BA324(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_503BA324Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2FA84441Function = new HLEModuleFunction("scePaf", "scePaf_2FA84441") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2FA84441(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2FA84441Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_84BD418FFunction = new HLEModuleFunction("scePaf", "scePaf_84BD418F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_84BD418F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_84BD418FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_902515FBFunction = new HLEModuleFunction("scePaf", "scePaf_902515FB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_902515FB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_902515FBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3586BE05Function = new HLEModuleFunction("scePaf", "scePaf_3586BE05") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3586BE05(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3586BE05Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2FA0EDDCFunction = new HLEModuleFunction("scePaf", "scePaf_2FA0EDDC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2FA0EDDC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2FA0EDDCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3FBD9639Function = new HLEModuleFunction("scePaf", "scePaf_3FBD9639") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3FBD9639(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3FBD9639Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6BA9C299Function = new HLEModuleFunction("scePaf", "scePaf_6BA9C299") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6BA9C299(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6BA9C299Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F1B52E86Function = new HLEModuleFunction("scePaf", "scePaf_F1B52E86") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F1B52E86(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F1B52E86Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_10B901E7Function = new HLEModuleFunction("scePaf", "scePaf_10B901E7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_10B901E7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_10B901E7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4370175AFunction = new HLEModuleFunction("scePaf", "scePaf_4370175A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4370175A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4370175AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_809A4F83Function = new HLEModuleFunction("scePaf", "scePaf_809A4F83") {
		@Override
		public final void execute(Processor processor) {
			scePaf_809A4F83(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_809A4F83Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A82E3C19Function = new HLEModuleFunction("scePaf", "scePaf_A82E3C19") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A82E3C19(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A82E3C19Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ED2B47FAFunction = new HLEModuleFunction("scePaf", "scePaf_ED2B47FA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ED2B47FA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ED2B47FAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_26168DD3Function = new HLEModuleFunction("scePaf", "scePaf_26168DD3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_26168DD3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_26168DD3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_626D68A1Function = new HLEModuleFunction("scePaf", "scePaf_626D68A1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_626D68A1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_626D68A1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FBA47E77Function = new HLEModuleFunction("scePaf", "scePaf_FBA47E77") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FBA47E77(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FBA47E77Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_44A0BCE4Function = new HLEModuleFunction("scePaf", "scePaf_44A0BCE4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_44A0BCE4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_44A0BCE4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4B1A374CFunction = new HLEModuleFunction("scePaf", "scePaf_4B1A374C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4B1A374C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4B1A374CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1D5D9A68Function = new HLEModuleFunction("scePaf", "scePaf_1D5D9A68") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1D5D9A68(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1D5D9A68Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_51AAAAF4Function = new HLEModuleFunction("scePaf", "scePaf_51AAAAF4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_51AAAAF4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_51AAAAF4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_54C0DD23Function = new HLEModuleFunction("scePaf", "scePaf_54C0DD23") {
		@Override
		public final void execute(Processor processor) {
			scePaf_54C0DD23(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_54C0DD23Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9F10613FFunction = new HLEModuleFunction("scePaf", "scePaf_9F10613F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9F10613F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9F10613FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8F12B63AFunction = new HLEModuleFunction("scePaf", "scePaf_8F12B63A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8F12B63A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8F12B63AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9D0192FDFunction = new HLEModuleFunction("scePaf", "scePaf_9D0192FD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9D0192FD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9D0192FDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FEAFC77AFunction = new HLEModuleFunction("scePaf", "scePaf_FEAFC77A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FEAFC77A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FEAFC77AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_99A5CD38Function = new HLEModuleFunction("scePaf", "scePaf_99A5CD38") {
		@Override
		public final void execute(Processor processor) {
			scePaf_99A5CD38(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_99A5CD38Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CE699963Function = new HLEModuleFunction("scePaf", "scePaf_CE699963") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CE699963(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CE699963Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CB2198ABFunction = new HLEModuleFunction("scePaf", "scePaf_CB2198AB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CB2198AB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CB2198ABFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_11EF5210Function = new HLEModuleFunction("scePaf", "scePaf_11EF5210") {
		@Override
		public final void execute(Processor processor) {
			scePaf_11EF5210(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_11EF5210Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B7E6052BFunction = new HLEModuleFunction("scePaf", "scePaf_B7E6052B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B7E6052B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B7E6052BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F13EBB78Function = new HLEModuleFunction("scePaf", "scePaf_F13EBB78") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F13EBB78(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F13EBB78Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4E67BB08Function = new HLEModuleFunction("scePaf", "scePaf_4E67BB08") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4E67BB08(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4E67BB08Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B3D2C3BBFunction = new HLEModuleFunction("scePaf", "scePaf_B3D2C3BB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B3D2C3BB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B3D2C3BBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_962FA087Function = new HLEModuleFunction("scePaf", "scePaf_962FA087") {
		@Override
		public final void execute(Processor processor) {
			scePaf_962FA087(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_962FA087Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D4C6CC7AFunction = new HLEModuleFunction("scePaf", "scePaf_D4C6CC7A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D4C6CC7A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D4C6CC7AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_927854C5Function = new HLEModuleFunction("scePaf", "scePaf_927854C5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_927854C5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_927854C5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D02C0D2EFunction = new HLEModuleFunction("scePaf", "scePaf_D02C0D2E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D02C0D2E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D02C0D2EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2FF0A287Function = new HLEModuleFunction("scePaf", "scePaf_2FF0A287") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2FF0A287(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2FF0A287Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F47CA1C2Function = new HLEModuleFunction("scePaf", "scePaf_F47CA1C2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F47CA1C2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F47CA1C2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EAA5AFF6Function = new HLEModuleFunction("scePaf", "scePaf_EAA5AFF6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EAA5AFF6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EAA5AFF6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_58BFC2ACFunction = new HLEModuleFunction("scePaf", "scePaf_58BFC2AC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_58BFC2AC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_58BFC2ACFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_72514A05Function = new HLEModuleFunction("scePaf", "scePaf_72514A05") {
		@Override
		public final void execute(Processor processor) {
			scePaf_72514A05(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_72514A05Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A69BABE3Function = new HLEModuleFunction("scePaf", "scePaf_A69BABE3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A69BABE3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A69BABE3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9430557BFunction = new HLEModuleFunction("scePaf", "scePaf_9430557B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9430557B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9430557BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_607713A6Function = new HLEModuleFunction("scePaf", "scePaf_607713A6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_607713A6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_607713A6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5EFC5387Function = new HLEModuleFunction("scePaf", "scePaf_5EFC5387") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5EFC5387(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5EFC5387Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_79C3CBF7Function = new HLEModuleFunction("scePaf", "scePaf_79C3CBF7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_79C3CBF7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_79C3CBF7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3A4934E3Function = new HLEModuleFunction("scePaf", "scePaf_3A4934E3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3A4934E3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3A4934E3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4FF65BDCFunction = new HLEModuleFunction("scePaf", "scePaf_4FF65BDC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4FF65BDC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4FF65BDCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_26DF747FFunction = new HLEModuleFunction("scePaf", "scePaf_26DF747F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_26DF747F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_26DF747FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_41BCFB59Function = new HLEModuleFunction("scePaf", "scePaf_41BCFB59") {
		@Override
		public final void execute(Processor processor) {
			scePaf_41BCFB59(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_41BCFB59Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FA05BF7BFunction = new HLEModuleFunction("scePaf", "scePaf_FA05BF7B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FA05BF7B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FA05BF7BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AAA8D3DAFunction = new HLEModuleFunction("scePaf", "scePaf_AAA8D3DA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AAA8D3DA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AAA8D3DAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A18DB948Function = new HLEModuleFunction("scePaf", "scePaf_A18DB948") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A18DB948(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A18DB948Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2313DDCAFunction = new HLEModuleFunction("scePaf", "scePaf_2313DDCA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2313DDCA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2313DDCAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4FC2470CFunction = new HLEModuleFunction("scePaf", "scePaf_4FC2470C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4FC2470C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4FC2470CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B77039E4Function = new HLEModuleFunction("scePaf", "scePaf_B77039E4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B77039E4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B77039E4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0C6EEA21Function = new HLEModuleFunction("scePaf", "scePaf_0C6EEA21") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0C6EEA21(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0C6EEA21Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CB7B666EFunction = new HLEModuleFunction("scePaf", "scePaf_CB7B666E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CB7B666E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CB7B666EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7B6F0E32Function = new HLEModuleFunction("scePaf", "scePaf_7B6F0E32") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7B6F0E32(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7B6F0E32Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_256218C2Function = new HLEModuleFunction("scePaf", "scePaf_256218C2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_256218C2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_256218C2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_96C46364Function = new HLEModuleFunction("scePaf", "scePaf_96C46364") {
		@Override
		public final void execute(Processor processor) {
			scePaf_96C46364(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_96C46364Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7C31F453Function = new HLEModuleFunction("scePaf", "scePaf_7C31F453") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7C31F453(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7C31F453Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_503FA456Function = new HLEModuleFunction("scePaf", "scePaf_503FA456") {
		@Override
		public final void execute(Processor processor) {
			scePaf_503FA456(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_503FA456Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D5F5E68FFunction = new HLEModuleFunction("scePaf", "scePaf_D5F5E68F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D5F5E68F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D5F5E68FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CAE6374AFunction = new HLEModuleFunction("scePaf", "scePaf_CAE6374A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CAE6374A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CAE6374AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_84A71447Function = new HLEModuleFunction("scePaf", "scePaf_84A71447") {
		@Override
		public final void execute(Processor processor) {
			scePaf_84A71447(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_84A71447Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D2463C79Function = new HLEModuleFunction("scePaf", "scePaf_D2463C79") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D2463C79(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D2463C79Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ED3E4EB1Function = new HLEModuleFunction("scePaf", "scePaf_ED3E4EB1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ED3E4EB1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ED3E4EB1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8DB4B066Function = new HLEModuleFunction("scePaf", "scePaf_8DB4B066") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8DB4B066(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8DB4B066Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B104EC1BFunction = new HLEModuleFunction("scePaf", "scePaf_B104EC1B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B104EC1B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B104EC1BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B3659499Function = new HLEModuleFunction("scePaf", "scePaf_B3659499") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B3659499(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B3659499Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6E94BA7BFunction = new HLEModuleFunction("scePaf", "scePaf_6E94BA7B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6E94BA7B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6E94BA7BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FF74C932Function = new HLEModuleFunction("scePaf", "scePaf_FF74C932") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FF74C932(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FF74C932Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F6F3E99EFunction = new HLEModuleFunction("scePaf", "scePaf_F6F3E99E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F6F3E99E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F6F3E99EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A72594EFFunction = new HLEModuleFunction("scePaf", "scePaf_A72594EF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A72594EF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A72594EFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_86926BB9Function = new HLEModuleFunction("scePaf", "scePaf_86926BB9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_86926BB9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_86926BB9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5075C799Function = new HLEModuleFunction("scePaf", "scePaf_5075C799") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5075C799(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5075C799Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A76B9604Function = new HLEModuleFunction("scePaf", "scePaf_A76B9604") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A76B9604(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A76B9604Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E1C76B22Function = new HLEModuleFunction("scePaf", "scePaf_E1C76B22") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E1C76B22(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E1C76B22Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_44EB8C62Function = new HLEModuleFunction("scePaf", "scePaf_44EB8C62") {
		@Override
		public final void execute(Processor processor) {
			scePaf_44EB8C62(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_44EB8C62Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C2C25056Function = new HLEModuleFunction("scePaf", "scePaf_C2C25056") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C2C25056(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C2C25056Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AEEF2A7CFunction = new HLEModuleFunction("scePaf", "scePaf_AEEF2A7C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AEEF2A7C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AEEF2A7CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_55CC4749Function = new HLEModuleFunction("scePaf", "scePaf_55CC4749") {
		@Override
		public final void execute(Processor processor) {
			scePaf_55CC4749(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_55CC4749Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_37DD37B8Function = new HLEModuleFunction("scePaf", "scePaf_37DD37B8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_37DD37B8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_37DD37B8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_16033F84Function = new HLEModuleFunction("scePaf", "scePaf_16033F84") {
		@Override
		public final void execute(Processor processor) {
			scePaf_16033F84(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_16033F84Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A0A25707Function = new HLEModuleFunction("scePaf", "scePaf_A0A25707") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A0A25707(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A0A25707Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E5BAC873Function = new HLEModuleFunction("scePaf", "scePaf_E5BAC873") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E5BAC873(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E5BAC873Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0A189A1AFunction = new HLEModuleFunction("scePaf", "scePaf_0A189A1A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0A189A1A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0A189A1AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CB7CCB28Function = new HLEModuleFunction("scePaf", "scePaf_CB7CCB28") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CB7CCB28(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CB7CCB28Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7B099943Function = new HLEModuleFunction("scePaf", "scePaf_7B099943") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7B099943(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7B099943Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E9BF6BEBFunction = new HLEModuleFunction("scePaf", "scePaf_E9BF6BEB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E9BF6BEB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E9BF6BEBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CEAC29F3Function = new HLEModuleFunction("scePaf", "scePaf_CEAC29F3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CEAC29F3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CEAC29F3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_275BCDC6Function = new HLEModuleFunction("scePaf", "scePaf_275BCDC6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_275BCDC6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_275BCDC6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_65C19AC0Function = new HLEModuleFunction("scePaf", "scePaf_65C19AC0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_65C19AC0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_65C19AC0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8BA04801Function = new HLEModuleFunction("scePaf", "scePaf_8BA04801") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8BA04801(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8BA04801Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_93A60B78Function = new HLEModuleFunction("scePaf", "scePaf_93A60B78") {
		@Override
		public final void execute(Processor processor) {
			scePaf_93A60B78(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_93A60B78Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AEE1CBADFunction = new HLEModuleFunction("scePaf", "scePaf_AEE1CBAD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AEE1CBAD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AEE1CBADFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_19A779E2Function = new HLEModuleFunction("scePaf", "scePaf_19A779E2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_19A779E2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_19A779E2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CDC81771Function = new HLEModuleFunction("scePaf", "scePaf_CDC81771") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CDC81771(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CDC81771Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C1FAF826Function = new HLEModuleFunction("scePaf", "scePaf_C1FAF826") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C1FAF826(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C1FAF826Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9C9B6732Function = new HLEModuleFunction("scePaf", "scePaf_9C9B6732") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9C9B6732(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9C9B6732Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_78054045Function = new HLEModuleFunction("scePaf", "scePaf_78054045") {
		@Override
		public final void execute(Processor processor) {
			scePaf_78054045(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_78054045Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DF9138A8Function = new HLEModuleFunction("scePaf", "scePaf_DF9138A8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DF9138A8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DF9138A8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F7FB133EFunction = new HLEModuleFunction("scePaf", "scePaf_F7FB133E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F7FB133E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F7FB133EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CFF2B69CFunction = new HLEModuleFunction("scePaf", "scePaf_CFF2B69C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CFF2B69C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CFF2B69CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EF52945BFunction = new HLEModuleFunction("scePaf", "scePaf_EF52945B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EF52945B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EF52945BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BAA88CDAFunction = new HLEModuleFunction("scePaf", "scePaf_BAA88CDA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BAA88CDA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BAA88CDAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BDC894D8Function = new HLEModuleFunction("scePaf", "scePaf_BDC894D8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BDC894D8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BDC894D8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5045C01FFunction = new HLEModuleFunction("scePaf", "scePaf_5045C01F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5045C01F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5045C01FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A89157EEFunction = new HLEModuleFunction("scePaf", "scePaf_A89157EE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A89157EE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A89157EEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1F0B8678Function = new HLEModuleFunction("scePaf", "scePaf_1F0B8678") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1F0B8678(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1F0B8678Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_33096E46Function = new HLEModuleFunction("scePaf", "scePaf_33096E46") {
		@Override
		public final void execute(Processor processor) {
			scePaf_33096E46(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_33096E46Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_47E35A50Function = new HLEModuleFunction("scePaf", "scePaf_47E35A50") {
		@Override
		public final void execute(Processor processor) {
			scePaf_47E35A50(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_47E35A50Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_25391E36Function = new HLEModuleFunction("scePaf", "scePaf_25391E36") {
		@Override
		public final void execute(Processor processor) {
			scePaf_25391E36(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_25391E36Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_50FFFCD2Function = new HLEModuleFunction("scePaf", "scePaf_50FFFCD2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_50FFFCD2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_50FFFCD2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_206C1F70Function = new HLEModuleFunction("scePaf", "scePaf_206C1F70") {
		@Override
		public final void execute(Processor processor) {
			scePaf_206C1F70(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_206C1F70Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0C66B594Function = new HLEModuleFunction("scePaf", "scePaf_0C66B594") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0C66B594(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0C66B594Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_39F89900Function = new HLEModuleFunction("scePaf", "scePaf_39F89900") {
		@Override
		public final void execute(Processor processor) {
			scePaf_39F89900(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_39F89900Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B6841F37Function = new HLEModuleFunction("scePaf", "scePaf_B6841F37") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B6841F37(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B6841F37Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_360956CCFunction = new HLEModuleFunction("scePaf", "scePaf_360956CC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_360956CC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_360956CCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0AEDCDA1Function = new HLEModuleFunction("scePaf", "scePaf_0AEDCDA1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0AEDCDA1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0AEDCDA1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_222526B6Function = new HLEModuleFunction("scePaf", "scePaf_222526B6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_222526B6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_222526B6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_41A7BDD2Function = new HLEModuleFunction("scePaf", "scePaf_41A7BDD2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_41A7BDD2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_41A7BDD2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D07AF3FAFunction = new HLEModuleFunction("scePaf", "scePaf_D07AF3FA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D07AF3FA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D07AF3FAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_29DC646FFunction = new HLEModuleFunction("scePaf", "scePaf_29DC646F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_29DC646F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_29DC646FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2A6499A5Function = new HLEModuleFunction("scePaf", "scePaf_2A6499A5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2A6499A5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2A6499A5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4FCA0DE9Function = new HLEModuleFunction("scePaf", "scePaf_4FCA0DE9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4FCA0DE9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4FCA0DE9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E796C85BFunction = new HLEModuleFunction("scePaf", "scePaf_E796C85B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E796C85B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E796C85BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BAFF6806Function = new HLEModuleFunction("scePaf", "scePaf_BAFF6806") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BAFF6806(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BAFF6806Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AA978F61Function = new HLEModuleFunction("scePaf", "scePaf_AA978F61") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AA978F61(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AA978F61Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FCF42D6DFunction = new HLEModuleFunction("scePaf", "scePaf_FCF42D6D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FCF42D6D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FCF42D6DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5DB527D4Function = new HLEModuleFunction("scePaf", "scePaf_5DB527D4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5DB527D4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5DB527D4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2E6CA751Function = new HLEModuleFunction("scePaf", "scePaf_2E6CA751") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2E6CA751(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2E6CA751Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3F52824FFunction = new HLEModuleFunction("scePaf", "scePaf_3F52824F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3F52824F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3F52824FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1C286704Function = new HLEModuleFunction("scePaf", "scePaf_1C286704") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1C286704(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1C286704Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_672036FEFunction = new HLEModuleFunction("scePaf", "scePaf_672036FE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_672036FE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_672036FEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_08A02EFFFunction = new HLEModuleFunction("scePaf", "scePaf_08A02EFF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_08A02EFF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_08A02EFFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_01A35C15Function = new HLEModuleFunction("scePaf", "scePaf_01A35C15") {
		@Override
		public final void execute(Processor processor) {
			scePaf_01A35C15(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_01A35C15Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_470ABD60Function = new HLEModuleFunction("scePaf", "scePaf_470ABD60") {
		@Override
		public final void execute(Processor processor) {
			scePaf_470ABD60(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_470ABD60Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B42D784EFunction = new HLEModuleFunction("scePaf", "scePaf_B42D784E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B42D784E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B42D784EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_84485F54Function = new HLEModuleFunction("scePaf", "scePaf_84485F54") {
		@Override
		public final void execute(Processor processor) {
			scePaf_84485F54(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_84485F54Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_87516C3BFunction = new HLEModuleFunction("scePaf", "scePaf_87516C3B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_87516C3B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_87516C3BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_715E8DABFunction = new HLEModuleFunction("scePaf", "scePaf_715E8DAB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_715E8DAB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_715E8DABFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D35B454AFunction = new HLEModuleFunction("scePaf", "scePaf_D35B454A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D35B454A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D35B454AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CFB1A402Function = new HLEModuleFunction("scePaf", "scePaf_CFB1A402") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CFB1A402(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CFB1A402Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5D7F1F27Function = new HLEModuleFunction("scePaf", "scePaf_5D7F1F27") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5D7F1F27(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5D7F1F27Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3291BDDDFunction = new HLEModuleFunction("scePaf", "scePaf_3291BDDD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3291BDDD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3291BDDDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_515EE222Function = new HLEModuleFunction("scePaf", "scePaf_515EE222") {
		@Override
		public final void execute(Processor processor) {
			scePaf_515EE222(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_515EE222Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3987B5C4Function = new HLEModuleFunction("scePaf", "scePaf_3987B5C4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3987B5C4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3987B5C4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F89ECA28Function = new HLEModuleFunction("scePaf", "scePaf_F89ECA28") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F89ECA28(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F89ECA28Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4AF8E417Function = new HLEModuleFunction("scePaf", "scePaf_4AF8E417") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4AF8E417(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4AF8E417Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_76D5A950Function = new HLEModuleFunction("scePaf", "scePaf_76D5A950") {
		@Override
		public final void execute(Processor processor) {
			scePaf_76D5A950(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_76D5A950Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F577BC82Function = new HLEModuleFunction("scePaf", "scePaf_F577BC82") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F577BC82(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F577BC82Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_369E597AFunction = new HLEModuleFunction("scePaf", "scePaf_369E597A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_369E597A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_369E597AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_293A01D8Function = new HLEModuleFunction("scePaf", "scePaf_293A01D8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_293A01D8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_293A01D8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_45386654Function = new HLEModuleFunction("scePaf", "scePaf_45386654") {
		@Override
		public final void execute(Processor processor) {
			scePaf_45386654(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_45386654Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_73D49419Function = new HLEModuleFunction("scePaf", "scePaf_73D49419") {
		@Override
		public final void execute(Processor processor) {
			scePaf_73D49419(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_73D49419Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AD007AB6Function = new HLEModuleFunction("scePaf", "scePaf_AD007AB6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AD007AB6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AD007AB6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F49F3C59Function = new HLEModuleFunction("scePaf", "scePaf_F49F3C59") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F49F3C59(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F49F3C59Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_05EEE8A6Function = new HLEModuleFunction("scePaf", "scePaf_05EEE8A6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_05EEE8A6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_05EEE8A6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_15EF8E18Function = new HLEModuleFunction("scePaf", "scePaf_15EF8E18") {
		@Override
		public final void execute(Processor processor) {
			scePaf_15EF8E18(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_15EF8E18Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FE84212FFunction = new HLEModuleFunction("scePaf", "scePaf_FE84212F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FE84212F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FE84212FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9D92765EFunction = new HLEModuleFunction("scePaf", "scePaf_9D92765E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9D92765E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9D92765EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_98A6C193Function = new HLEModuleFunction("scePaf", "scePaf_98A6C193") {
		@Override
		public final void execute(Processor processor) {
			scePaf_98A6C193(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_98A6C193Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1943B875Function = new HLEModuleFunction("scePaf", "scePaf_1943B875") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1943B875(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1943B875Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D7074BD1Function = new HLEModuleFunction("scePaf", "scePaf_D7074BD1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D7074BD1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D7074BD1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BD49CAEFFunction = new HLEModuleFunction("scePaf", "scePaf_BD49CAEF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BD49CAEF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BD49CAEFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6C4976AFFunction = new HLEModuleFunction("scePaf", "scePaf_6C4976AF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6C4976AF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6C4976AFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_85112756Function = new HLEModuleFunction("scePaf", "scePaf_85112756") {
		@Override
		public final void execute(Processor processor) {
			scePaf_85112756(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_85112756Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FDB39519Function = new HLEModuleFunction("scePaf", "scePaf_FDB39519") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FDB39519(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FDB39519Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DA3A6D88Function = new HLEModuleFunction("scePaf", "scePaf_DA3A6D88") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DA3A6D88(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DA3A6D88Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_199896A3Function = new HLEModuleFunction("scePaf", "scePaf_199896A3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_199896A3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_199896A3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5458E412Function = new HLEModuleFunction("scePaf", "scePaf_5458E412") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5458E412(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5458E412Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_43374E9EFunction = new HLEModuleFunction("scePaf", "scePaf_43374E9E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_43374E9E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_43374E9EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6797988CFunction = new HLEModuleFunction("scePaf", "scePaf_6797988C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6797988C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6797988CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_449C8821Function = new HLEModuleFunction("scePaf", "scePaf_449C8821") {
		@Override
		public final void execute(Processor processor) {
			scePaf_449C8821(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_449C8821Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6C386158Function = new HLEModuleFunction("scePaf", "scePaf_6C386158") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6C386158(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6C386158Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8E751FCCFunction = new HLEModuleFunction("scePaf", "scePaf_8E751FCC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8E751FCC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8E751FCCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F32223ACFunction = new HLEModuleFunction("scePaf", "scePaf_F32223AC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F32223AC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F32223ACFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_40B21F4FFunction = new HLEModuleFunction("scePaf", "scePaf_40B21F4F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_40B21F4F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_40B21F4FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_501E9BC9Function = new HLEModuleFunction("scePaf", "scePaf_501E9BC9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_501E9BC9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_501E9BC9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EFAC3E9FFunction = new HLEModuleFunction("scePaf", "scePaf_EFAC3E9F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EFAC3E9F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EFAC3E9FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C933B3C5Function = new HLEModuleFunction("scePaf", "scePaf_C933B3C5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C933B3C5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C933B3C5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F554C7C7Function = new HLEModuleFunction("scePaf", "scePaf_F554C7C7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F554C7C7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F554C7C7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4E60E34CFunction = new HLEModuleFunction("scePaf", "scePaf_4E60E34C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4E60E34C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4E60E34CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_39C55C03Function = new HLEModuleFunction("scePaf", "scePaf_39C55C03") {
		@Override
		public final void execute(Processor processor) {
			scePaf_39C55C03(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_39C55C03Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_65920294Function = new HLEModuleFunction("scePaf", "scePaf_65920294") {
		@Override
		public final void execute(Processor processor) {
			scePaf_65920294(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_65920294Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_37DDBDD8Function = new HLEModuleFunction("scePaf", "scePaf_37DDBDD8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_37DDBDD8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_37DDBDD8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_92A46B32Function = new HLEModuleFunction("scePaf", "scePaf_92A46B32") {
		@Override
		public final void execute(Processor processor) {
			scePaf_92A46B32(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_92A46B32Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_905347E9Function = new HLEModuleFunction("scePaf", "scePaf_905347E9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_905347E9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_905347E9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DF887DEDFunction = new HLEModuleFunction("scePaf", "scePaf_DF887DED") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DF887DED(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DF887DEDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DC544921Function = new HLEModuleFunction("scePaf", "scePaf_DC544921") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DC544921(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DC544921Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_585B93BCFunction = new HLEModuleFunction("scePaf", "scePaf_585B93BC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_585B93BC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_585B93BCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1AD33D73Function = new HLEModuleFunction("scePaf", "scePaf_1AD33D73") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1AD33D73(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1AD33D73Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A4F53FEDFunction = new HLEModuleFunction("scePaf", "scePaf_A4F53FED") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A4F53FED(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A4F53FEDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_01CF521EFunction = new HLEModuleFunction("scePaf", "scePaf_01CF521E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_01CF521E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_01CF521EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3C68DCB7Function = new HLEModuleFunction("scePaf", "scePaf_3C68DCB7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3C68DCB7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3C68DCB7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3F81333AFunction = new HLEModuleFunction("scePaf", "scePaf_3F81333A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3F81333A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3F81333AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9A8E343EFunction = new HLEModuleFunction("scePaf", "scePaf_9A8E343E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9A8E343E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9A8E343EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_95040C08Function = new HLEModuleFunction("scePaf", "scePaf_95040C08") {
		@Override
		public final void execute(Processor processor) {
			scePaf_95040C08(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_95040C08Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_07BA4C80Function = new HLEModuleFunction("scePaf", "scePaf_07BA4C80") {
		@Override
		public final void execute(Processor processor) {
			scePaf_07BA4C80(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_07BA4C80Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0CFDBE2FFunction = new HLEModuleFunction("scePaf", "scePaf_0CFDBE2F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0CFDBE2F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0CFDBE2FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3829AC24Function = new HLEModuleFunction("scePaf", "scePaf_3829AC24") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3829AC24(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3829AC24Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1F0E9712Function = new HLEModuleFunction("scePaf", "scePaf_1F0E9712") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1F0E9712(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1F0E9712Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D24E4016Function = new HLEModuleFunction("scePaf", "scePaf_D24E4016") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D24E4016(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D24E4016Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_409E25A3Function = new HLEModuleFunction("scePaf", "scePaf_409E25A3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_409E25A3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_409E25A3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DC8B0309Function = new HLEModuleFunction("scePaf", "scePaf_DC8B0309") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DC8B0309(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DC8B0309Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EB553D60Function = new HLEModuleFunction("scePaf", "scePaf_EB553D60") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EB553D60(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EB553D60Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4EA868E6Function = new HLEModuleFunction("scePaf", "scePaf_4EA868E6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4EA868E6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4EA868E6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8AB03D91Function = new HLEModuleFunction("scePaf", "scePaf_8AB03D91") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8AB03D91(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8AB03D91Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5CA7F421Function = new HLEModuleFunction("scePaf", "scePaf_5CA7F421") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5CA7F421(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5CA7F421Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B7865607Function = new HLEModuleFunction("scePaf", "scePaf_B7865607") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B7865607(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B7865607Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_95948FB6Function = new HLEModuleFunction("scePaf", "scePaf_95948FB6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_95948FB6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_95948FB6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BA433BEFFunction = new HLEModuleFunction("scePaf", "scePaf_BA433BEF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BA433BEF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BA433BEFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ED89C94BFunction = new HLEModuleFunction("scePaf", "scePaf_ED89C94B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ED89C94B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ED89C94BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0E8A3B52Function = new HLEModuleFunction("scePaf", "scePaf_0E8A3B52") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0E8A3B52(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0E8A3B52Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D587826CFunction = new HLEModuleFunction("scePaf", "scePaf_D587826C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D587826C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D587826CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_61B105C0Function = new HLEModuleFunction("scePaf", "scePaf_61B105C0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_61B105C0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_61B105C0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DAD477C1Function = new HLEModuleFunction("scePaf", "scePaf_DAD477C1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DAD477C1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DAD477C1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D91B2651Function = new HLEModuleFunction("scePaf", "scePaf_D91B2651") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D91B2651(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D91B2651Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A02E66FAFunction = new HLEModuleFunction("scePaf", "scePaf_A02E66FA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A02E66FA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A02E66FAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2D79697EFunction = new HLEModuleFunction("scePaf", "scePaf_2D79697E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2D79697E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2D79697EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EDF1C662Function = new HLEModuleFunction("scePaf", "scePaf_EDF1C662") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EDF1C662(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EDF1C662Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A7818BCEFunction = new HLEModuleFunction("scePaf", "scePaf_A7818BCE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A7818BCE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A7818BCEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_695BCD34Function = new HLEModuleFunction("scePaf", "scePaf_695BCD34") {
		@Override
		public final void execute(Processor processor) {
			scePaf_695BCD34(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_695BCD34Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C4D819AAFunction = new HLEModuleFunction("scePaf", "scePaf_C4D819AA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C4D819AA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C4D819AAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_70B92642Function = new HLEModuleFunction("scePaf", "scePaf_70B92642") {
		@Override
		public final void execute(Processor processor) {
			scePaf_70B92642(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_70B92642Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_447974D1Function = new HLEModuleFunction("scePaf", "scePaf_447974D1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_447974D1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_447974D1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_63EA1815Function = new HLEModuleFunction("scePaf", "scePaf_63EA1815") {
		@Override
		public final void execute(Processor processor) {
			scePaf_63EA1815(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_63EA1815Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CB65103EFunction = new HLEModuleFunction("scePaf", "scePaf_CB65103E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CB65103E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CB65103EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_32B27ADDFunction = new HLEModuleFunction("scePaf", "scePaf_32B27ADD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_32B27ADD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_32B27ADDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ADC146F0Function = new HLEModuleFunction("scePaf", "scePaf_ADC146F0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ADC146F0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ADC146F0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D5A254F9Function = new HLEModuleFunction("scePaf", "scePaf_D5A254F9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D5A254F9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D5A254F9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_42F43213Function = new HLEModuleFunction("scePaf", "scePaf_42F43213") {
		@Override
		public final void execute(Processor processor) {
			scePaf_42F43213(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_42F43213Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5D242D11Function = new HLEModuleFunction("scePaf", "scePaf_5D242D11") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5D242D11(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5D242D11Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_11361F12Function = new HLEModuleFunction("scePaf", "scePaf_11361F12") {
		@Override
		public final void execute(Processor processor) {
			scePaf_11361F12(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_11361F12Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_51FF9D24Function = new HLEModuleFunction("scePaf", "scePaf_51FF9D24") {
		@Override
		public final void execute(Processor processor) {
			scePaf_51FF9D24(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_51FF9D24Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B2ED6CAAFunction = new HLEModuleFunction("scePaf", "scePaf_B2ED6CAA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B2ED6CAA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B2ED6CAAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_79F4AE65Function = new HLEModuleFunction("scePaf", "scePaf_79F4AE65") {
		@Override
		public final void execute(Processor processor) {
			scePaf_79F4AE65(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_79F4AE65Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_905CF2A7Function = new HLEModuleFunction("scePaf", "scePaf_905CF2A7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_905CF2A7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_905CF2A7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E732CF74Function = new HLEModuleFunction("scePaf", "scePaf_E732CF74") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E732CF74(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E732CF74Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B711DC69Function = new HLEModuleFunction("scePaf", "scePaf_B711DC69") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B711DC69(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B711DC69Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0ED80B09Function = new HLEModuleFunction("scePaf", "scePaf_0ED80B09") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0ED80B09(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0ED80B09Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BB457D6FFunction = new HLEModuleFunction("scePaf", "scePaf_BB457D6F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BB457D6F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BB457D6FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B6F52424Function = new HLEModuleFunction("scePaf", "scePaf_B6F52424") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B6F52424(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B6F52424Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BA6B8B02Function = new HLEModuleFunction("scePaf", "scePaf_BA6B8B02") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BA6B8B02(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BA6B8B02Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B9BE69FDFunction = new HLEModuleFunction("scePaf", "scePaf_B9BE69FD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B9BE69FD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B9BE69FDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FA758B05Function = new HLEModuleFunction("scePaf", "scePaf_FA758B05") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FA758B05(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FA758B05Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FA87D725Function = new HLEModuleFunction("scePaf", "scePaf_FA87D725") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FA87D725(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FA87D725Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FC37FABDFunction = new HLEModuleFunction("scePaf", "scePaf_FC37FABD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FC37FABD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FC37FABDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_64775957Function = new HLEModuleFunction("scePaf", "scePaf_64775957") {
		@Override
		public final void execute(Processor processor) {
			scePaf_64775957(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_64775957Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7F2442DCFunction = new HLEModuleFunction("scePaf", "scePaf_7F2442DC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7F2442DC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7F2442DCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_86B41BA3Function = new HLEModuleFunction("scePaf", "scePaf_86B41BA3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_86B41BA3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_86B41BA3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_541F36E9Function = new HLEModuleFunction("scePaf", "scePaf_541F36E9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_541F36E9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_541F36E9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_86C87E62Function = new HLEModuleFunction("scePaf", "scePaf_86C87E62") {
		@Override
		public final void execute(Processor processor) {
			scePaf_86C87E62(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_86C87E62Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F1546D14Function = new HLEModuleFunction("scePaf", "scePaf_F1546D14") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F1546D14(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F1546D14Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6840D208Function = new HLEModuleFunction("scePaf", "scePaf_6840D208") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6840D208(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6840D208Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D1EE972CFunction = new HLEModuleFunction("scePaf", "scePaf_D1EE972C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D1EE972C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D1EE972CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1232B7A3Function = new HLEModuleFunction("scePaf", "scePaf_1232B7A3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1232B7A3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1232B7A3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8D7FC7DBFunction = new HLEModuleFunction("scePaf", "scePaf_8D7FC7DB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8D7FC7DB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8D7FC7DBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5DE0445FFunction = new HLEModuleFunction("scePaf", "scePaf_5DE0445F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5DE0445F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5DE0445FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_09AC6844Function = new HLEModuleFunction("scePaf", "scePaf_09AC6844") {
		@Override
		public final void execute(Processor processor) {
			scePaf_09AC6844(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_09AC6844Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D2E0D705Function = new HLEModuleFunction("scePaf", "scePaf_D2E0D705") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D2E0D705(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D2E0D705Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AE02F241Function = new HLEModuleFunction("scePaf", "scePaf_AE02F241") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AE02F241(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AE02F241Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D1159069Function = new HLEModuleFunction("scePaf", "scePaf_D1159069") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D1159069(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D1159069Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BFFAEE83Function = new HLEModuleFunction("scePaf", "scePaf_BFFAEE83") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BFFAEE83(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BFFAEE83Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DDA68BE8Function = new HLEModuleFunction("scePaf", "scePaf_DDA68BE8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DDA68BE8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DDA68BE8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9AFD4AD4Function = new HLEModuleFunction("scePaf", "scePaf_9AFD4AD4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9AFD4AD4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9AFD4AD4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6E1B5B50Function = new HLEModuleFunction("scePaf", "scePaf_6E1B5B50") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6E1B5B50(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6E1B5B50Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8DEB3DB3Function = new HLEModuleFunction("scePaf", "scePaf_8DEB3DB3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8DEB3DB3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8DEB3DB3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BA09CF46Function = new HLEModuleFunction("scePaf", "scePaf_BA09CF46") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BA09CF46(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BA09CF46Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6DD28F44Function = new HLEModuleFunction("scePaf", "scePaf_6DD28F44") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6DD28F44(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6DD28F44Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4ADAEF94Function = new HLEModuleFunction("scePaf", "scePaf_4ADAEF94") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4ADAEF94(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4ADAEF94Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_95708BC0Function = new HLEModuleFunction("scePaf", "scePaf_95708BC0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_95708BC0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_95708BC0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C85155C9Function = new HLEModuleFunction("scePaf", "scePaf_C85155C9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C85155C9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C85155C9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DEF9EBE7Function = new HLEModuleFunction("scePaf", "scePaf_DEF9EBE7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DEF9EBE7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DEF9EBE7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F23F3226Function = new HLEModuleFunction("scePaf", "scePaf_F23F3226") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F23F3226(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F23F3226Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D153385EFunction = new HLEModuleFunction("scePaf", "scePaf_D153385E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D153385E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D153385EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_86A5AE7DFunction = new HLEModuleFunction("scePaf", "scePaf_86A5AE7D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_86A5AE7D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_86A5AE7DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5A8D4BDBFunction = new HLEModuleFunction("scePaf", "scePaf_5A8D4BDB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5A8D4BDB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5A8D4BDBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2120282AFunction = new HLEModuleFunction("scePaf", "scePaf_2120282A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2120282A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2120282AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8159EB28Function = new HLEModuleFunction("scePaf", "scePaf_8159EB28") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8159EB28(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8159EB28Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5CE11C03Function = new HLEModuleFunction("scePaf", "scePaf_5CE11C03") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5CE11C03(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5CE11C03Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_05073826Function = new HLEModuleFunction("scePaf", "scePaf_05073826") {
		@Override
		public final void execute(Processor processor) {
			scePaf_05073826(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_05073826Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A4B48F00Function = new HLEModuleFunction("scePaf", "scePaf_A4B48F00") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A4B48F00(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A4B48F00Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_224C33F0Function = new HLEModuleFunction("scePaf", "scePaf_224C33F0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_224C33F0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_224C33F0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3DBE861FFunction = new HLEModuleFunction("scePaf", "scePaf_3DBE861F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3DBE861F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3DBE861FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FA78AF39Function = new HLEModuleFunction("scePaf", "scePaf_FA78AF39") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FA78AF39(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FA78AF39Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A3761F27Function = new HLEModuleFunction("scePaf", "scePaf_A3761F27") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A3761F27(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A3761F27Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DE75C2BAFunction = new HLEModuleFunction("scePaf", "scePaf_DE75C2BA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DE75C2BA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DE75C2BAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4129A915Function = new HLEModuleFunction("scePaf", "scePaf_4129A915") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4129A915(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4129A915Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8A51BA1EFunction = new HLEModuleFunction("scePaf", "scePaf_8A51BA1E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8A51BA1E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8A51BA1EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0FFA3ECEFunction = new HLEModuleFunction("scePaf", "scePaf_0FFA3ECE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0FFA3ECE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0FFA3ECEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_89582FD0Function = new HLEModuleFunction("scePaf", "scePaf_89582FD0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_89582FD0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_89582FD0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_84913A3AFunction = new HLEModuleFunction("scePaf", "scePaf_84913A3A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_84913A3A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_84913A3AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_06EA7CDEFunction = new HLEModuleFunction("scePaf", "scePaf_06EA7CDE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_06EA7CDE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_06EA7CDEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9563887DFunction = new HLEModuleFunction("scePaf", "scePaf_9563887D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9563887D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9563887DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_21B885B8Function = new HLEModuleFunction("scePaf", "scePaf_21B885B8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_21B885B8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_21B885B8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B0FD305AFunction = new HLEModuleFunction("scePaf", "scePaf_B0FD305A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B0FD305A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B0FD305AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_777635B9Function = new HLEModuleFunction("scePaf", "scePaf_777635B9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_777635B9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_777635B9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F8301DBCFunction = new HLEModuleFunction("scePaf", "scePaf_F8301DBC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F8301DBC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F8301DBCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5A818E41Function = new HLEModuleFunction("scePaf", "scePaf_5A818E41") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5A818E41(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5A818E41Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A9970EF5Function = new HLEModuleFunction("scePaf", "scePaf_A9970EF5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A9970EF5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A9970EF5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6741C662Function = new HLEModuleFunction("scePaf", "scePaf_6741C662") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6741C662(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6741C662Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_14CE7F6FFunction = new HLEModuleFunction("scePaf", "scePaf_14CE7F6F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_14CE7F6F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_14CE7F6FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DFC8650CFunction = new HLEModuleFunction("scePaf", "scePaf_DFC8650C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DFC8650C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DFC8650CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ECE59E24Function = new HLEModuleFunction("scePaf", "scePaf_ECE59E24") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ECE59E24(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ECE59E24Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4D810FDCFunction = new HLEModuleFunction("scePaf", "scePaf_4D810FDC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4D810FDC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4D810FDCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ABCBC1C5Function = new HLEModuleFunction("scePaf", "scePaf_ABCBC1C5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ABCBC1C5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ABCBC1C5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7C2C2742Function = new HLEModuleFunction("scePaf", "scePaf_7C2C2742") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7C2C2742(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7C2C2742Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D0AD10FFFunction = new HLEModuleFunction("scePaf", "scePaf_D0AD10FF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D0AD10FF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D0AD10FFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2A2EB136Function = new HLEModuleFunction("scePaf", "scePaf_2A2EB136") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2A2EB136(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2A2EB136Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_20F5234EFunction = new HLEModuleFunction("scePaf", "scePaf_20F5234E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_20F5234E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_20F5234EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6F74F263Function = new HLEModuleFunction("scePaf", "scePaf_6F74F263") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6F74F263(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6F74F263Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D6232F26Function = new HLEModuleFunction("scePaf", "scePaf_D6232F26") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D6232F26(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D6232F26Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ED83B18FFunction = new HLEModuleFunction("scePaf", "scePaf_ED83B18F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ED83B18F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ED83B18FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D6C1FF36Function = new HLEModuleFunction("scePaf", "scePaf_D6C1FF36") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D6C1FF36(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D6C1FF36Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7952AE83Function = new HLEModuleFunction("scePaf", "scePaf_7952AE83") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7952AE83(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7952AE83Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FDB98CACFunction = new HLEModuleFunction("scePaf", "scePaf_FDB98CAC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FDB98CAC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FDB98CACFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BA1F20EEFunction = new HLEModuleFunction("scePaf", "scePaf_BA1F20EE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BA1F20EE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BA1F20EEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D96449B4Function = new HLEModuleFunction("scePaf", "scePaf_D96449B4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D96449B4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D96449B4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_71EDAD83Function = new HLEModuleFunction("scePaf", "scePaf_71EDAD83") {
		@Override
		public final void execute(Processor processor) {
			scePaf_71EDAD83(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_71EDAD83Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2CB6FBBEFunction = new HLEModuleFunction("scePaf", "scePaf_2CB6FBBE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2CB6FBBE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2CB6FBBEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_442F1731Function = new HLEModuleFunction("scePaf", "scePaf_442F1731") {
		@Override
		public final void execute(Processor processor) {
			scePaf_442F1731(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_442F1731Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E418D7E0Function = new HLEModuleFunction("scePaf", "scePaf_E418D7E0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E418D7E0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E418D7E0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C8FD64AAFunction = new HLEModuleFunction("scePaf", "scePaf_C8FD64AA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C8FD64AA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C8FD64AAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DB230BE1Function = new HLEModuleFunction("scePaf", "scePaf_DB230BE1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DB230BE1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DB230BE1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0FB7D433Function = new HLEModuleFunction("scePaf", "scePaf_0FB7D433") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0FB7D433(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0FB7D433Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C2E4423AFunction = new HLEModuleFunction("scePaf", "scePaf_C2E4423A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C2E4423A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C2E4423AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A574DB92Function = new HLEModuleFunction("scePaf", "scePaf_A574DB92") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A574DB92(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A574DB92Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C6F44EF9Function = new HLEModuleFunction("scePaf", "scePaf_C6F44EF9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C6F44EF9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C6F44EF9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6B678D44Function = new HLEModuleFunction("scePaf", "scePaf_6B678D44") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6B678D44(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6B678D44Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E15A64EAFunction = new HLEModuleFunction("scePaf", "scePaf_E15A64EA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E15A64EA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E15A64EAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6A772BF7Function = new HLEModuleFunction("scePaf", "scePaf_6A772BF7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6A772BF7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6A772BF7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D180ACBAFunction = new HLEModuleFunction("scePaf", "scePaf_D180ACBA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D180ACBA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D180ACBAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4C5F6657Function = new HLEModuleFunction("scePaf", "scePaf_4C5F6657") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4C5F6657(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4C5F6657Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DFB912CBFunction = new HLEModuleFunction("scePaf", "scePaf_DFB912CB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DFB912CB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DFB912CBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BAA76FDEFunction = new HLEModuleFunction("scePaf", "scePaf_BAA76FDE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BAA76FDE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BAA76FDEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6CF44237Function = new HLEModuleFunction("scePaf", "scePaf_6CF44237") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6CF44237(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6CF44237Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CFAF88ABFunction = new HLEModuleFunction("scePaf", "scePaf_CFAF88AB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CFAF88AB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CFAF88ABFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D34D0B82Function = new HLEModuleFunction("scePaf", "scePaf_D34D0B82") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D34D0B82(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D34D0B82Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8CDEDC6FFunction = new HLEModuleFunction("scePaf", "scePaf_8CDEDC6F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8CDEDC6F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8CDEDC6FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_22B0D7D8Function = new HLEModuleFunction("scePaf", "scePaf_22B0D7D8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_22B0D7D8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_22B0D7D8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CA8CDF32Function = new HLEModuleFunction("scePaf", "scePaf_CA8CDF32") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CA8CDF32(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CA8CDF32Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FCABD0E7Function = new HLEModuleFunction("scePaf", "scePaf_FCABD0E7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FCABD0E7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FCABD0E7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EE10AEF1Function = new HLEModuleFunction("scePaf", "scePaf_EE10AEF1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EE10AEF1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EE10AEF1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D99BEC81Function = new HLEModuleFunction("scePaf", "scePaf_D99BEC81") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D99BEC81(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D99BEC81Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4D4805AFFunction = new HLEModuleFunction("scePaf", "scePaf_4D4805AF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4D4805AF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4D4805AFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_28F8DE83Function = new HLEModuleFunction("scePaf", "scePaf_28F8DE83") {
		@Override
		public final void execute(Processor processor) {
			scePaf_28F8DE83(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_28F8DE83Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B1F587EFFunction = new HLEModuleFunction("scePaf", "scePaf_B1F587EF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B1F587EF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B1F587EFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8C1ED07BFunction = new HLEModuleFunction("scePaf", "scePaf_8C1ED07B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8C1ED07B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8C1ED07BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_04EF78CDFunction = new HLEModuleFunction("scePaf", "scePaf_04EF78CD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_04EF78CD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_04EF78CDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_75A553A2Function = new HLEModuleFunction("scePaf", "scePaf_75A553A2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_75A553A2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_75A553A2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F4404EAFFunction = new HLEModuleFunction("scePaf", "scePaf_F4404EAF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F4404EAF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F4404EAFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D63D4561Function = new HLEModuleFunction("scePaf", "scePaf_D63D4561") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D63D4561(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D63D4561Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_81667058Function = new HLEModuleFunction("scePaf", "scePaf_81667058") {
		@Override
		public final void execute(Processor processor) {
			scePaf_81667058(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_81667058Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_149CDEB9Function = new HLEModuleFunction("scePaf", "scePaf_149CDEB9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_149CDEB9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_149CDEB9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_62081F34Function = new HLEModuleFunction("scePaf", "scePaf_62081F34") {
		@Override
		public final void execute(Processor processor) {
			scePaf_62081F34(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_62081F34Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BECD1827Function = new HLEModuleFunction("scePaf", "scePaf_BECD1827") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BECD1827(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BECD1827Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A8711520Function = new HLEModuleFunction("scePaf", "scePaf_A8711520") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A8711520(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A8711520Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FCDD55E3Function = new HLEModuleFunction("scePaf", "scePaf_FCDD55E3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FCDD55E3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FCDD55E3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2EABF548Function = new HLEModuleFunction("scePaf", "scePaf_2EABF548") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2EABF548(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2EABF548Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_50F72192Function = new HLEModuleFunction("scePaf", "scePaf_50F72192") {
		@Override
		public final void execute(Processor processor) {
			scePaf_50F72192(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_50F72192Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_73712598Function = new HLEModuleFunction("scePaf", "scePaf_73712598") {
		@Override
		public final void execute(Processor processor) {
			scePaf_73712598(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_73712598Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8B439A23Function = new HLEModuleFunction("scePaf", "scePaf_8B439A23") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8B439A23(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8B439A23Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7435C5D5Function = new HLEModuleFunction("scePaf", "scePaf_7435C5D5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7435C5D5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7435C5D5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CC103AD2Function = new HLEModuleFunction("scePaf", "scePaf_CC103AD2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CC103AD2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CC103AD2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_566BC690Function = new HLEModuleFunction("scePaf", "scePaf_566BC690") {
		@Override
		public final void execute(Processor processor) {
			scePaf_566BC690(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_566BC690Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_68569AACFunction = new HLEModuleFunction("scePaf", "scePaf_68569AAC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_68569AAC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_68569AACFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_76491EEAFunction = new HLEModuleFunction("scePaf", "scePaf_76491EEA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_76491EEA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_76491EEAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7771BC86Function = new HLEModuleFunction("scePaf", "scePaf_7771BC86") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7771BC86(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7771BC86Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_06BB62B7Function = new HLEModuleFunction("scePaf", "scePaf_06BB62B7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_06BB62B7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_06BB62B7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_30F5E7DFFunction = new HLEModuleFunction("scePaf", "scePaf_30F5E7DF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_30F5E7DF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_30F5E7DFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_97B9C21EFunction = new HLEModuleFunction("scePaf", "scePaf_97B9C21E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_97B9C21E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_97B9C21EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D16E5935Function = new HLEModuleFunction("scePaf", "scePaf_D16E5935") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D16E5935(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D16E5935Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9D496842Function = new HLEModuleFunction("scePaf", "scePaf_9D496842") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9D496842(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9D496842Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2750CF68Function = new HLEModuleFunction("scePaf", "scePaf_2750CF68") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2750CF68(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2750CF68Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F639E5E1Function = new HLEModuleFunction("scePaf", "scePaf_F639E5E1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F639E5E1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F639E5E1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7116224CFunction = new HLEModuleFunction("scePaf", "scePaf_7116224C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7116224C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7116224CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9DD9CA07Function = new HLEModuleFunction("scePaf", "scePaf_9DD9CA07") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9DD9CA07(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9DD9CA07Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FB3A9617Function = new HLEModuleFunction("scePaf", "scePaf_FB3A9617") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FB3A9617(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FB3A9617Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_35F003C0Function = new HLEModuleFunction("scePaf", "scePaf_35F003C0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_35F003C0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_35F003C0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EBDC149CFunction = new HLEModuleFunction("scePaf", "scePaf_EBDC149C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EBDC149C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EBDC149CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_08DD2D50Function = new HLEModuleFunction("scePaf", "scePaf_08DD2D50") {
		@Override
		public final void execute(Processor processor) {
			scePaf_08DD2D50(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_08DD2D50Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_846E1F0AFunction = new HLEModuleFunction("scePaf", "scePaf_846E1F0A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_846E1F0A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_846E1F0AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4AB0D3F4Function = new HLEModuleFunction("scePaf", "scePaf_4AB0D3F4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4AB0D3F4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4AB0D3F4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9122393CFunction = new HLEModuleFunction("scePaf", "scePaf_9122393C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9122393C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9122393CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5C4BF618Function = new HLEModuleFunction("scePaf", "scePaf_5C4BF618") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5C4BF618(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5C4BF618Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_93538664Function = new HLEModuleFunction("scePaf", "scePaf_93538664") {
		@Override
		public final void execute(Processor processor) {
			scePaf_93538664(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_93538664Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_952CE8AFFunction = new HLEModuleFunction("scePaf", "scePaf_952CE8AF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_952CE8AF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_952CE8AFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_21DBFF5BFunction = new HLEModuleFunction("scePaf", "scePaf_21DBFF5B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_21DBFF5B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_21DBFF5BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_359CBCAFFunction = new HLEModuleFunction("scePaf", "scePaf_359CBCAF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_359CBCAF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_359CBCAFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3684D457Function = new HLEModuleFunction("scePaf", "scePaf_3684D457") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3684D457(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3684D457Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0598FFD6Function = new HLEModuleFunction("scePaf", "scePaf_0598FFD6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0598FFD6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0598FFD6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CAF82B9BFunction = new HLEModuleFunction("scePaf", "scePaf_CAF82B9B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CAF82B9B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CAF82B9BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5B202AEDFunction = new HLEModuleFunction("scePaf", "scePaf_5B202AED") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5B202AED(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5B202AEDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_50DC7446Function = new HLEModuleFunction("scePaf", "scePaf_50DC7446") {
		@Override
		public final void execute(Processor processor) {
			scePaf_50DC7446(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_50DC7446Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_36CB5601Function = new HLEModuleFunction("scePaf", "scePaf_36CB5601") {
		@Override
		public final void execute(Processor processor) {
			scePaf_36CB5601(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_36CB5601Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BA32D6E6Function = new HLEModuleFunction("scePaf", "scePaf_BA32D6E6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BA32D6E6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BA32D6E6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EAB7BD23Function = new HLEModuleFunction("scePaf", "scePaf_EAB7BD23") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EAB7BD23(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EAB7BD23Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_669DE9B1Function = new HLEModuleFunction("scePaf", "scePaf_669DE9B1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_669DE9B1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_669DE9B1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_940D9797Function = new HLEModuleFunction("scePaf", "scePaf_940D9797") {
		@Override
		public final void execute(Processor processor) {
			scePaf_940D9797(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_940D9797Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4708AED4Function = new HLEModuleFunction("scePaf", "scePaf_4708AED4") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4708AED4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4708AED4Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_32A70C80Function = new HLEModuleFunction("scePaf", "scePaf_32A70C80") {
		@Override
		public final void execute(Processor processor) {
			scePaf_32A70C80(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_32A70C80Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CAF05F1DFunction = new HLEModuleFunction("scePaf", "scePaf_CAF05F1D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CAF05F1D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CAF05F1DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_49CE42F7Function = new HLEModuleFunction("scePaf", "scePaf_49CE42F7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_49CE42F7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_49CE42F7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FC6B7234Function = new HLEModuleFunction("scePaf", "scePaf_FC6B7234") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FC6B7234(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FC6B7234Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_63B24F4DFunction = new HLEModuleFunction("scePaf", "scePaf_63B24F4D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_63B24F4D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_63B24F4DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6F33D1DFFunction = new HLEModuleFunction("scePaf", "scePaf_6F33D1DF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6F33D1DF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6F33D1DFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3481F595Function = new HLEModuleFunction("scePaf", "scePaf_3481F595") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3481F595(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3481F595Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_986FEBD1Function = new HLEModuleFunction("scePaf", "scePaf_986FEBD1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_986FEBD1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_986FEBD1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_458A9C95Function = new HLEModuleFunction("scePaf", "scePaf_458A9C95") {
		@Override
		public final void execute(Processor processor) {
			scePaf_458A9C95(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_458A9C95Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D3D12890Function = new HLEModuleFunction("scePaf", "scePaf_D3D12890") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D3D12890(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D3D12890Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9D1633BCFunction = new HLEModuleFunction("scePaf", "scePaf_9D1633BC") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9D1633BC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9D1633BCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_98E1BC87Function = new HLEModuleFunction("scePaf", "scePaf_98E1BC87") {
		@Override
		public final void execute(Processor processor) {
			scePaf_98E1BC87(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_98E1BC87Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_84240C1DFunction = new HLEModuleFunction("scePaf", "scePaf_84240C1D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_84240C1D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_84240C1DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5D786CDDFunction = new HLEModuleFunction("scePaf", "scePaf_5D786CDD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5D786CDD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5D786CDDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6E95EFAAFunction = new HLEModuleFunction("scePaf", "scePaf_6E95EFAA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6E95EFAA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6E95EFAAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_88D73AEDFunction = new HLEModuleFunction("scePaf", "scePaf_88D73AED") {
		@Override
		public final void execute(Processor processor) {
			scePaf_88D73AED(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_88D73AEDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D4FAE7D0Function = new HLEModuleFunction("scePaf", "scePaf_D4FAE7D0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D4FAE7D0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D4FAE7D0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_338C3774Function = new HLEModuleFunction("scePaf", "scePaf_338C3774") {
		@Override
		public final void execute(Processor processor) {
			scePaf_338C3774(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_338C3774Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DC2CA0F7Function = new HLEModuleFunction("scePaf", "scePaf_DC2CA0F7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DC2CA0F7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DC2CA0F7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7F7791A1Function = new HLEModuleFunction("scePaf", "scePaf_7F7791A1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7F7791A1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7F7791A1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F28A9DB3Function = new HLEModuleFunction("scePaf", "scePaf_F28A9DB3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F28A9DB3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F28A9DB3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BB3CBD19Function = new HLEModuleFunction("scePaf", "scePaf_BB3CBD19") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BB3CBD19(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BB3CBD19Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_27F64616Function = new HLEModuleFunction("scePaf", "scePaf_27F64616") {
		@Override
		public final void execute(Processor processor) {
			scePaf_27F64616(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_27F64616Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_72129CFBFunction = new HLEModuleFunction("scePaf", "scePaf_72129CFB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_72129CFB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_72129CFBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DAB59652Function = new HLEModuleFunction("scePaf", "scePaf_DAB59652") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DAB59652(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DAB59652Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1A45C860Function = new HLEModuleFunction("scePaf", "scePaf_1A45C860") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1A45C860(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1A45C860Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D7215544Function = new HLEModuleFunction("scePaf", "scePaf_D7215544") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D7215544(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D7215544Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5DFB5858Function = new HLEModuleFunction("scePaf", "scePaf_5DFB5858") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5DFB5858(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5DFB5858Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5EBC648FFunction = new HLEModuleFunction("scePaf", "scePaf_5EBC648F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5EBC648F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5EBC648FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F247A0BDFunction = new HLEModuleFunction("scePaf", "scePaf_F247A0BD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F247A0BD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F247A0BDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_910A6B7BFunction = new HLEModuleFunction("scePaf", "scePaf_910A6B7B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_910A6B7B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_910A6B7BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5470B915Function = new HLEModuleFunction("scePaf", "scePaf_5470B915") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5470B915(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5470B915Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D05C226FFunction = new HLEModuleFunction("scePaf", "scePaf_D05C226F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D05C226F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D05C226FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CE21D21FFunction = new HLEModuleFunction("scePaf", "scePaf_CE21D21F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CE21D21F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CE21D21FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8860B0FDFunction = new HLEModuleFunction("scePaf", "scePaf_8860B0FD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8860B0FD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8860B0FDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2AA842B0Function = new HLEModuleFunction("scePaf", "scePaf_2AA842B0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2AA842B0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2AA842B0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D5372E90Function = new HLEModuleFunction("scePaf", "scePaf_D5372E90") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D5372E90(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D5372E90Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D7C2E0ADFunction = new HLEModuleFunction("scePaf", "scePaf_D7C2E0AD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D7C2E0AD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D7C2E0ADFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F4AB3180Function = new HLEModuleFunction("scePaf", "scePaf_F4AB3180") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F4AB3180(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F4AB3180Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EA026663Function = new HLEModuleFunction("scePaf", "scePaf_EA026663") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EA026663(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EA026663Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F609FA81Function = new HLEModuleFunction("scePaf", "scePaf_F609FA81") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F609FA81(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F609FA81Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BBDE1C17Function = new HLEModuleFunction("scePaf", "scePaf_BBDE1C17") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BBDE1C17(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BBDE1C17Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8117E6C8Function = new HLEModuleFunction("scePaf", "scePaf_8117E6C8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8117E6C8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8117E6C8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1811AD32Function = new HLEModuleFunction("scePaf", "scePaf_1811AD32") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1811AD32(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1811AD32Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6CE39EF8Function = new HLEModuleFunction("scePaf", "scePaf_6CE39EF8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6CE39EF8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6CE39EF8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B09203B0Function = new HLEModuleFunction("scePaf", "scePaf_B09203B0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B09203B0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B09203B0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_58C69BDAFunction = new HLEModuleFunction("scePaf", "scePaf_58C69BDA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_58C69BDA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_58C69BDAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E32B3558Function = new HLEModuleFunction("scePaf", "scePaf_E32B3558") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E32B3558(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E32B3558Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_86237EB3Function = new HLEModuleFunction("scePaf", "scePaf_86237EB3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_86237EB3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_86237EB3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BEF9FF15Function = new HLEModuleFunction("scePaf", "scePaf_BEF9FF15") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BEF9FF15(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BEF9FF15Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FE4D4112Function = new HLEModuleFunction("scePaf", "scePaf_FE4D4112") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FE4D4112(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FE4D4112Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DAA609BBFunction = new HLEModuleFunction("scePaf", "scePaf_DAA609BB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DAA609BB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DAA609BBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_69CA1A2DFunction = new HLEModuleFunction("scePaf", "scePaf_69CA1A2D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_69CA1A2D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_69CA1A2DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D3F5956DFunction = new HLEModuleFunction("scePaf", "scePaf_D3F5956D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D3F5956D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D3F5956DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_602EB0CEFunction = new HLEModuleFunction("scePaf", "scePaf_602EB0CE") {
		@Override
		public final void execute(Processor processor) {
			scePaf_602EB0CE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_602EB0CEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6A14BB04Function = new HLEModuleFunction("scePaf", "scePaf_6A14BB04") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6A14BB04(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6A14BB04Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_95960A88Function = new HLEModuleFunction("scePaf", "scePaf_95960A88") {
		@Override
		public final void execute(Processor processor) {
			scePaf_95960A88(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_95960A88Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D6CD39AFFunction = new HLEModuleFunction("scePaf", "scePaf_D6CD39AF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D6CD39AF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D6CD39AFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_79E57CAFFunction = new HLEModuleFunction("scePaf", "scePaf_79E57CAF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_79E57CAF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_79E57CAFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9DED6118Function = new HLEModuleFunction("scePaf", "scePaf_9DED6118") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9DED6118(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9DED6118Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_997D2809Function = new HLEModuleFunction("scePaf", "scePaf_997D2809") {
		@Override
		public final void execute(Processor processor) {
			scePaf_997D2809(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_997D2809Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7D83FB20Function = new HLEModuleFunction("scePaf", "scePaf_7D83FB20") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7D83FB20(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7D83FB20Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E1242646Function = new HLEModuleFunction("scePaf", "scePaf_E1242646") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E1242646(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E1242646Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_0F3527DDFunction = new HLEModuleFunction("scePaf", "scePaf_0F3527DD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_0F3527DD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_0F3527DDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_10C1DB70Function = new HLEModuleFunction("scePaf", "scePaf_10C1DB70") {
		@Override
		public final void execute(Processor processor) {
			scePaf_10C1DB70(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_10C1DB70Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_39B36025Function = new HLEModuleFunction("scePaf", "scePaf_39B36025") {
		@Override
		public final void execute(Processor processor) {
			scePaf_39B36025(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_39B36025Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_01C2FC36Function = new HLEModuleFunction("scePaf", "scePaf_01C2FC36") {
		@Override
		public final void execute(Processor processor) {
			scePaf_01C2FC36(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_01C2FC36Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_17308FC9Function = new HLEModuleFunction("scePaf", "scePaf_17308FC9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_17308FC9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_17308FC9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F3967AF5Function = new HLEModuleFunction("scePaf", "scePaf_F3967AF5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F3967AF5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F3967AF5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_34C973B6Function = new HLEModuleFunction("scePaf", "scePaf_34C973B6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_34C973B6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_34C973B6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4C8C2E25Function = new HLEModuleFunction("scePaf", "scePaf_4C8C2E25") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4C8C2E25(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4C8C2E25Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_81FD71A9Function = new HLEModuleFunction("scePaf", "scePaf_81FD71A9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_81FD71A9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_81FD71A9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BBBF145CFunction = new HLEModuleFunction("scePaf", "scePaf_BBBF145C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BBBF145C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BBBF145CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B52E43FBFunction = new HLEModuleFunction("scePaf", "scePaf_B52E43FB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B52E43FB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B52E43FBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_95C97571Function = new HLEModuleFunction("scePaf", "scePaf_95C97571") {
		@Override
		public final void execute(Processor processor) {
			scePaf_95C97571(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_95C97571Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F273FE50Function = new HLEModuleFunction("scePaf", "scePaf_F273FE50") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F273FE50(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F273FE50Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AD7A45F9Function = new HLEModuleFunction("scePaf", "scePaf_AD7A45F9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AD7A45F9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AD7A45F9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_67C7567EFunction = new HLEModuleFunction("scePaf", "scePaf_67C7567E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_67C7567E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_67C7567EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_56F4D69FFunction = new HLEModuleFunction("scePaf", "scePaf_56F4D69F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_56F4D69F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_56F4D69FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D7E925A1Function = new HLEModuleFunction("scePaf", "scePaf_D7E925A1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D7E925A1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D7E925A1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_296ED0EFFunction = new HLEModuleFunction("scePaf", "scePaf_296ED0EF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_296ED0EF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_296ED0EFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DBD69B7BFunction = new HLEModuleFunction("scePaf", "scePaf_DBD69B7B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DBD69B7B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DBD69B7BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7DDE0658Function = new HLEModuleFunction("scePaf", "scePaf_7DDE0658") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7DDE0658(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7DDE0658Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CC3CFABFFunction = new HLEModuleFunction("scePaf", "scePaf_CC3CFABF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CC3CFABF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CC3CFABFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D2C94856Function = new HLEModuleFunction("scePaf", "scePaf_D2C94856") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D2C94856(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D2C94856Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EF346632Function = new HLEModuleFunction("scePaf", "scePaf_EF346632") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EF346632(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EF346632Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_79293604Function = new HLEModuleFunction("scePaf", "scePaf_79293604") {
		@Override
		public final void execute(Processor processor) {
			scePaf_79293604(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_79293604Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AECF91A9Function = new HLEModuleFunction("scePaf", "scePaf_AECF91A9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AECF91A9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AECF91A9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3342C5F5Function = new HLEModuleFunction("scePaf", "scePaf_3342C5F5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3342C5F5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3342C5F5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_48B5C1C0Function = new HLEModuleFunction("scePaf", "scePaf_48B5C1C0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_48B5C1C0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_48B5C1C0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D188831AFunction = new HLEModuleFunction("scePaf", "scePaf_D188831A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D188831A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D188831AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2D08CA09Function = new HLEModuleFunction("scePaf", "scePaf_2D08CA09") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2D08CA09(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2D08CA09Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_55C7628AFunction = new HLEModuleFunction("scePaf", "scePaf_55C7628A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_55C7628A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_55C7628AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A9CE8FBBFunction = new HLEModuleFunction("scePaf", "scePaf_A9CE8FBB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A9CE8FBB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A9CE8FBBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D6F088EFFunction = new HLEModuleFunction("scePaf", "scePaf_D6F088EF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D6F088EF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D6F088EFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F2E5FDEBFunction = new HLEModuleFunction("scePaf", "scePaf_F2E5FDEB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F2E5FDEB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F2E5FDEBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6E3E2085Function = new HLEModuleFunction("scePaf", "scePaf_6E3E2085") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6E3E2085(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6E3E2085Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6676FAA6Function = new HLEModuleFunction("scePaf", "scePaf_6676FAA6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6676FAA6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6676FAA6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7D9A4824Function = new HLEModuleFunction("scePaf", "scePaf_7D9A4824") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7D9A4824(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7D9A4824Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D8739C4CFunction = new HLEModuleFunction("scePaf", "scePaf_D8739C4C") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D8739C4C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D8739C4CFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_34C7D69AFunction = new HLEModuleFunction("scePaf", "scePaf_34C7D69A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_34C7D69A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_34C7D69AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_CDB85442Function = new HLEModuleFunction("scePaf", "scePaf_CDB85442") {
		@Override
		public final void execute(Processor processor) {
			scePaf_CDB85442(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_CDB85442Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DFD3E855Function = new HLEModuleFunction("scePaf", "scePaf_DFD3E855") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DFD3E855(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DFD3E855Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2AA80564Function = new HLEModuleFunction("scePaf", "scePaf_2AA80564") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2AA80564(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2AA80564Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6BAC756BFunction = new HLEModuleFunction("scePaf", "scePaf_6BAC756B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6BAC756B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6BAC756BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3A844B7BFunction = new HLEModuleFunction("scePaf", "scePaf_3A844B7B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3A844B7B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3A844B7BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9B8CBC5FFunction = new HLEModuleFunction("scePaf", "scePaf_9B8CBC5F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9B8CBC5F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9B8CBC5FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BE5B0791Function = new HLEModuleFunction("scePaf", "scePaf_BE5B0791") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BE5B0791(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BE5B0791Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FCD816FAFunction = new HLEModuleFunction("scePaf", "scePaf_FCD816FA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FCD816FA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FCD816FAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_548AA4E7Function = new HLEModuleFunction("scePaf", "scePaf_548AA4E7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_548AA4E7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_548AA4E7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_21A0C6E0Function = new HLEModuleFunction("scePaf", "scePaf_21A0C6E0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_21A0C6E0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_21A0C6E0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C01BF169Function = new HLEModuleFunction("scePaf", "scePaf_C01BF169") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C01BF169(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C01BF169Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AD1721B8Function = new HLEModuleFunction("scePaf", "scePaf_AD1721B8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AD1721B8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AD1721B8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_910BCFE1Function = new HLEModuleFunction("scePaf", "scePaf_910BCFE1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_910BCFE1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_910BCFE1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_75DBA857Function = new HLEModuleFunction("scePaf", "scePaf_75DBA857") {
		@Override
		public final void execute(Processor processor) {
			scePaf_75DBA857(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_75DBA857Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_849ED670Function = new HLEModuleFunction("scePaf", "scePaf_849ED670") {
		@Override
		public final void execute(Processor processor) {
			scePaf_849ED670(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_849ED670Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5148EFE2Function = new HLEModuleFunction("scePaf", "scePaf_5148EFE2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5148EFE2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5148EFE2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D36F3AAAFunction = new HLEModuleFunction("scePaf", "scePaf_D36F3AAA") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D36F3AAA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D36F3AAAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1A468B86Function = new HLEModuleFunction("scePaf", "scePaf_1A468B86") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1A468B86(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1A468B86Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8E757709Function = new HLEModuleFunction("scePaf", "scePaf_8E757709") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8E757709(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8E757709Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7BBD70F0Function = new HLEModuleFunction("scePaf", "scePaf_7BBD70F0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7BBD70F0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7BBD70F0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_DFFE9ED6Function = new HLEModuleFunction("scePaf", "scePaf_DFFE9ED6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_DFFE9ED6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_DFFE9ED6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_72A0044DFunction = new HLEModuleFunction("scePaf", "scePaf_72A0044D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_72A0044D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_72A0044DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_4612DB4BFunction = new HLEModuleFunction("scePaf", "scePaf_4612DB4B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_4612DB4B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_4612DB4BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_78219D10Function = new HLEModuleFunction("scePaf", "scePaf_78219D10") {
		@Override
		public final void execute(Processor processor) {
			scePaf_78219D10(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_78219D10Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_97FDA760Function = new HLEModuleFunction("scePaf", "scePaf_97FDA760") {
		@Override
		public final void execute(Processor processor) {
			scePaf_97FDA760(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_97FDA760Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_298246CDFunction = new HLEModuleFunction("scePaf", "scePaf_298246CD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_298246CD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_298246CDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_12C50A9DFunction = new HLEModuleFunction("scePaf", "scePaf_12C50A9D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_12C50A9D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_12C50A9DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_3D451DE8Function = new HLEModuleFunction("scePaf", "scePaf_3D451DE8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_3D451DE8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_3D451DE8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8FE88010Function = new HLEModuleFunction("scePaf", "scePaf_8FE88010") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8FE88010(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8FE88010Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_21A183A7Function = new HLEModuleFunction("scePaf", "scePaf_21A183A7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_21A183A7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_21A183A7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_ABEBF18DFunction = new HLEModuleFunction("scePaf", "scePaf_ABEBF18D") {
		@Override
		public final void execute(Processor processor) {
			scePaf_ABEBF18D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_ABEBF18DFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_94136997Function = new HLEModuleFunction("scePaf", "scePaf_94136997") {
		@Override
		public final void execute(Processor processor) {
			scePaf_94136997(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_94136997Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A25BDAA2Function = new HLEModuleFunction("scePaf", "scePaf_A25BDAA2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A25BDAA2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A25BDAA2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9F60CB01Function = new HLEModuleFunction("scePaf", "scePaf_9F60CB01") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9F60CB01(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9F60CB01Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_50B0C0A1Function = new HLEModuleFunction("scePaf", "scePaf_50B0C0A1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_50B0C0A1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_50B0C0A1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_7E304DCFFunction = new HLEModuleFunction("scePaf", "scePaf_7E304DCF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_7E304DCF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_7E304DCFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_1F43B8A2Function = new HLEModuleFunction("scePaf", "scePaf_1F43B8A2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_1F43B8A2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_1F43B8A2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_891B7F7FFunction = new HLEModuleFunction("scePaf", "scePaf_891B7F7F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_891B7F7F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_891B7F7FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_14D80C40Function = new HLEModuleFunction("scePaf", "scePaf_14D80C40") {
		@Override
		public final void execute(Processor processor) {
			scePaf_14D80C40(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_14D80C40Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_87E5F9C7Function = new HLEModuleFunction("scePaf", "scePaf_87E5F9C7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_87E5F9C7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_87E5F9C7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D3AB4076Function = new HLEModuleFunction("scePaf", "scePaf_D3AB4076") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D3AB4076(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D3AB4076Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_537D04C6Function = new HLEModuleFunction("scePaf", "scePaf_537D04C6") {
		@Override
		public final void execute(Processor processor) {
			scePaf_537D04C6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_537D04C6Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_create_info_structFunction = new HLEModuleFunction("scePaf", "png_create_info_struct") {
		@Override
		public final void execute(Processor processor) {
			png_create_info_struct(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_create_info_structFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_create_read_structFunction = new HLEModuleFunction("scePaf", "png_create_read_struct") {
		@Override
		public final void execute(Processor processor) {
			png_create_read_struct(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_create_read_structFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_destroy_read_structFunction = new HLEModuleFunction("scePaf", "png_destroy_read_struct") {
		@Override
		public final void execute(Processor processor) {
			png_destroy_read_struct(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_destroy_read_structFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_errorFunction = new HLEModuleFunction("scePaf", "png_error") {
		@Override
		public final void execute(Processor processor) {
			png_error(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_errorFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_get_IHDRFunction = new HLEModuleFunction("scePaf", "png_get_IHDR") {
		@Override
		public final void execute(Processor processor) {
			png_get_IHDR(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_get_IHDRFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_get_PLTEFunction = new HLEModuleFunction("scePaf", "png_get_PLTE") {
		@Override
		public final void execute(Processor processor) {
			png_get_PLTE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_get_PLTEFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_get_tRNSFunction = new HLEModuleFunction("scePaf", "png_get_tRNS") {
		@Override
		public final void execute(Processor processor) {
			png_get_tRNS(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_get_tRNSFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_read_endFunction = new HLEModuleFunction("scePaf", "png_read_end") {
		@Override
		public final void execute(Processor processor) {
			png_read_end(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_read_endFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_read_infoFunction = new HLEModuleFunction("scePaf", "png_read_info") {
		@Override
		public final void execute(Processor processor) {
			png_read_info(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_read_infoFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_set_read_fnFunction = new HLEModuleFunction("scePaf", "png_set_read_fn") {
		@Override
		public final void execute(Processor processor) {
			png_set_read_fn(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_set_read_fnFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_start_read_imageFunction = new HLEModuleFunction("scePaf", "png_start_read_image") {
		@Override
		public final void execute(Processor processor) {
			png_start_read_image(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_start_read_imageFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_read_imageFunction = new HLEModuleFunction("scePaf", "png_read_image") {
		@Override
		public final void execute(Processor processor) {
			png_read_image(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_read_imageFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_read_update_infoFunction = new HLEModuleFunction("scePaf", "png_read_update_info") {
		@Override
		public final void execute(Processor processor) {
			png_read_update_info(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_read_update_infoFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_set_packingFunction = new HLEModuleFunction("scePaf", "png_set_packing") {
		@Override
		public final void execute(Processor processor) {
			png_set_packing(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_set_packingFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_set_sig_bytesFunction = new HLEModuleFunction("scePaf", "png_set_sig_bytes") {
		@Override
		public final void execute(Processor processor) {
			png_set_sig_bytes(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_set_sig_bytesFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction png_set_packswapFunction = new HLEModuleFunction("scePaf", "png_set_packswap") {
		@Override
		public final void execute(Processor processor) {
			png_set_packswap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.png_set_packswapFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sce_png_readFunction = new HLEModuleFunction("scePaf", "sce_png_read") {
		@Override
		public final void execute(Processor processor) {
			sce_png_read(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sce_png_readFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccDecodeUTF8Function = new HLEModuleFunction("scePaf", "sceCccDecodeUTF8") {
		@Override
		public final void execute(Processor processor) {
			sceCccDecodeUTF8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccDecodeUTF8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccEncodeUTF16Function = new HLEModuleFunction("scePaf", "sceCccEncodeUTF16") {
		@Override
		public final void execute(Processor processor) {
			sceCccEncodeUTF16(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccEncodeUTF16Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccSetTableFunction = new HLEModuleFunction("scePaf", "sceCccSetTable") {
		@Override
		public final void execute(Processor processor) {
			sceCccSetTable(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccSetTableFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8D3EAEA3Function = new HLEModuleFunction("scePaf", "scePaf_8D3EAEA3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8D3EAEA3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8D3EAEA3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C8E7B03FFunction = new HLEModuleFunction("scePaf", "scePaf_C8E7B03F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C8E7B03F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C8E7B03FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D4DAB044Function = new HLEModuleFunction("scePaf", "scePaf_D4DAB044") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D4DAB044(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D4DAB044Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_15939BB8Function = new HLEModuleFunction("scePaf", "scePaf_15939BB8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_15939BB8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_15939BB8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8D736C8FFunction = new HLEModuleFunction("scePaf", "scePaf_8D736C8F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8D736C8F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8D736C8FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccDecodeUTF16Function = new HLEModuleFunction("scePaf", "sceCccDecodeUTF16") {
		@Override
		public final void execute(Processor processor) {
			sceCccDecodeUTF16(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccDecodeUTF16Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccSJIStoUTF16Function = new HLEModuleFunction("scePaf", "sceCccSJIStoUTF16") {
		@Override
		public final void execute(Processor processor) {
			sceCccSJIStoUTF16(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccSJIStoUTF16Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccStrlenSJISFunction = new HLEModuleFunction("scePaf", "sceCccStrlenSJIS") {
		@Override
		public final void execute(Processor processor) {
			sceCccStrlenSJIS(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccStrlenSJISFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccUTF16toSJISFunction = new HLEModuleFunction("scePaf", "sceCccUTF16toSJIS") {
		@Override
		public final void execute(Processor processor) {
			sceCccUTF16toSJIS(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccUTF16toSJISFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccUTF8toUTF16Function = new HLEModuleFunction("scePaf", "sceCccUTF8toUTF16") {
		@Override
		public final void execute(Processor processor) {
			sceCccUTF8toUTF16(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccUTF8toUTF16Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D6CDB3BBFunction = new HLEModuleFunction("scePaf", "scePaf_D6CDB3BB") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D6CDB3BB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D6CDB3BBFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_60CBB63FFunction = new HLEModuleFunction("scePaf", "scePaf_60CBB63F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_60CBB63F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_60CBB63FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F93D4E1FFunction = new HLEModuleFunction("scePaf", "scePaf_F93D4E1F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F93D4E1F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F93D4E1FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B9383A25Function = new HLEModuleFunction("scePaf", "scePaf_B9383A25") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B9383A25(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B9383A25Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccStrlenUTF8Function = new HLEModuleFunction("scePaf", "sceCccStrlenUTF8") {
		@Override
		public final void execute(Processor processor) {
			sceCccStrlenUTF8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccStrlenUTF8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccStrlenUTF16Function = new HLEModuleFunction("scePaf", "sceCccStrlenUTF16") {
		@Override
		public final void execute(Processor processor) {
			sceCccStrlenUTF16(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccStrlenUTF16Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceCccUTF16toUTF8Function = new HLEModuleFunction("scePaf", "sceCccUTF16toUTF8") {
		@Override
		public final void execute(Processor processor) {
			sceCccUTF16toUTF8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceCccUTF16toUTF8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D5F3BAB1Function = new HLEModuleFunction("scePaf", "scePaf_D5F3BAB1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D5F3BAB1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D5F3BAB1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_EA39A7C1Function = new HLEModuleFunction("scePaf", "scePaf_EA39A7C1") {
		@Override
		public final void execute(Processor processor) {
			scePaf_EA39A7C1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_EA39A7C1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_6B1E90C7Function = new HLEModuleFunction("scePaf", "scePaf_6B1E90C7") {
		@Override
		public final void execute(Processor processor) {
			scePaf_6B1E90C7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_6B1E90C7Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_66907719Function = new HLEModuleFunction("scePaf", "scePaf_66907719") {
		@Override
		public final void execute(Processor processor) {
			scePaf_66907719(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_66907719Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AAD0EE78Function = new HLEModuleFunction("scePaf", "scePaf_AAD0EE78") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AAD0EE78(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AAD0EE78Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E69C3B1BFunction = new HLEModuleFunction("scePaf", "scePaf_E69C3B1B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E69C3B1B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E69C3B1BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E618F7A8Function = new HLEModuleFunction("scePaf", "scePaf_E618F7A8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E618F7A8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E618F7A8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_78F94D84Function = new HLEModuleFunction("scePaf", "scePaf_78F94D84") {
		@Override
		public final void execute(Processor processor) {
			scePaf_78F94D84(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_78F94D84Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_5822F12AFunction = new HLEModuleFunction("scePaf", "scePaf_5822F12A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_5822F12A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_5822F12AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_FD9DE7B9Function = new HLEModuleFunction("scePaf", "scePaf_FD9DE7B9") {
		@Override
		public final void execute(Processor processor) {
			scePaf_FD9DE7B9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_FD9DE7B9Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_AD43F865Function = new HLEModuleFunction("scePaf", "scePaf_AD43F865") {
		@Override
		public final void execute(Processor processor) {
			scePaf_AD43F865(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_AD43F865Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_872F948BFunction = new HLEModuleFunction("scePaf", "scePaf_872F948B") {
		@Override
		public final void execute(Processor processor) {
			scePaf_872F948B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_872F948BFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D726F4A2Function = new HLEModuleFunction("scePaf", "scePaf_D726F4A2") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D726F4A2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D726F4A2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A044BFC0Function = new HLEModuleFunction("scePaf", "scePaf_A044BFC0") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A044BFC0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A044BFC0Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F1CF9579Function = new HLEModuleFunction("scePaf", "scePaf_F1CF9579") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F1CF9579(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F1CF9579Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_132148FDFunction = new HLEModuleFunction("scePaf", "scePaf_132148FD") {
		@Override
		public final void execute(Processor processor) {
			scePaf_132148FD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_132148FDFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_533F3856Function = new HLEModuleFunction("scePaf", "scePaf_533F3856") {
		@Override
		public final void execute(Processor processor) {
			scePaf_533F3856(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_533F3856Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_139D9047Function = new HLEModuleFunction("scePaf", "scePaf_139D9047") {
		@Override
		public final void execute(Processor processor) {
			scePaf_139D9047(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_139D9047Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_8D3B3587Function = new HLEModuleFunction("scePaf", "scePaf_8D3B3587") {
		@Override
		public final void execute(Processor processor) {
			scePaf_8D3B3587(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_8D3B3587Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction File_AllocLoadFunction = new HLEModuleFunction("scePaf", "File_AllocLoad") {
		@Override
		public final void execute(Processor processor) {
			File_AllocLoad(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.File_AllocLoadFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction File_SaveFunction = new HLEModuleFunction("scePaf", "File_Save") {
		@Override
		public final void execute(Processor processor) {
			File_Save(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.File_SaveFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction Job_StartFunction = new HLEModuleFunction("scePaf", "Job_Start") {
		@Override
		public final void execute(Processor processor) {
			Job_Start(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.Job_StartFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction Job_CancelFunction = new HLEModuleFunction("scePaf", "Job_Cancel") {
		@Override
		public final void execute(Processor processor) {
			Job_Cancel(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.Job_CancelFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction Job_Cancel2Function = new HLEModuleFunction("scePaf", "Job_Cancel2") {
		@Override
		public final void execute(Processor processor) {
			Job_Cancel2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.Job_Cancel2Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_79493F8FFunction = new HLEModuleFunction("scePaf", "scePaf_79493F8F") {
		@Override
		public final void execute(Processor processor) {
			scePaf_79493F8F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_79493F8FFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C1F72218Function = new HLEModuleFunction("scePaf", "scePaf_C1F72218") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C1F72218(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C1F72218Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_539F2583Function = new HLEModuleFunction("scePaf", "scePaf_539F2583") {
		@Override
		public final void execute(Processor processor) {
			scePaf_539F2583(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_539F2583Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_B884B031Function = new HLEModuleFunction("scePaf", "scePaf_B884B031") {
		@Override
		public final void execute(Processor processor) {
			scePaf_B884B031(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_B884B031Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_9399AF50Function = new HLEModuleFunction("scePaf", "scePaf_9399AF50") {
		@Override
		public final void execute(Processor processor) {
			scePaf_9399AF50(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_9399AF50Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_80E521C5Function = new HLEModuleFunction("scePaf", "scePaf_80E521C5") {
		@Override
		public final void execute(Processor processor) {
			scePaf_80E521C5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_80E521C5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E05F3CEFFunction = new HLEModuleFunction("scePaf", "scePaf_E05F3CEF") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E05F3CEF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E05F3CEFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E977B833Function = new HLEModuleFunction("scePaf", "scePaf_E977B833") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E977B833(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E977B833Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction Heap_AllocFunction = new HLEModuleFunction("scePaf", "Heap_Alloc") {
		@Override
		public final void execute(Processor processor) {
			Heap_Alloc(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.Heap_AllocFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction Heap_FreeFunction = new HLEModuleFunction("scePaf", "Heap_Free") {
		@Override
		public final void execute(Processor processor) {
			Heap_Free(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.Heap_FreeFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_F84A99C8Function = new HLEModuleFunction("scePaf", "scePaf_F84A99C8") {
		@Override
		public final void execute(Processor processor) {
			scePaf_F84A99C8(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_F84A99C8Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction Heap_CreateFunction = new HLEModuleFunction("scePaf", "Heap_Create") {
		@Override
		public final void execute(Processor processor) {
			Heap_Create(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.Heap_CreateFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction Heap_DestroyFunction = new HLEModuleFunction("scePaf", "Heap_Destroy") {
		@Override
		public final void execute(Processor processor) {
			Heap_Destroy(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.Heap_DestroyFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_C4BAD564Function = new HLEModuleFunction("scePaf", "scePaf_C4BAD564") {
		@Override
		public final void execute(Processor processor) {
			scePaf_C4BAD564(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_C4BAD564Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_D27DE19AFunction = new HLEModuleFunction("scePaf", "scePaf_D27DE19A") {
		@Override
		public final void execute(Processor processor) {
			scePaf_D27DE19A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_D27DE19AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_BAE16A39Function = new HLEModuleFunction("scePaf", "scePaf_BAE16A39") {
		@Override
		public final void execute(Processor processor) {
			scePaf_BAE16A39(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_BAE16A39Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_2CFAE498Function = new HLEModuleFunction("scePaf", "scePaf_2CFAE498") {
		@Override
		public final void execute(Processor processor) {
			scePaf_2CFAE498(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_2CFAE498Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_58846DF3Function = new HLEModuleFunction("scePaf", "scePaf_58846DF3") {
		@Override
		public final void execute(Processor processor) {
			scePaf_58846DF3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_58846DF3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_E357380EFunction = new HLEModuleFunction("scePaf", "scePaf_E357380E") {
		@Override
		public final void execute(Processor processor) {
			scePaf_E357380E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_E357380EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGuDisableFunction = new HLEModuleFunction("scePaf", "sceGuDisable") {
		@Override
		public final void execute(Processor processor) {
			sceGuDisable(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGuDisableFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGuShadeModelFunction = new HLEModuleFunction("scePaf", "sceGuShadeModel") {
		@Override
		public final void execute(Processor processor) {
			sceGuShadeModel(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGuShadeModelFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGuColorFunction = new HLEModuleFunction("scePaf", "sceGuColor") {
		@Override
		public final void execute(Processor processor) {
			sceGuColor(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGuColorFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGumDrawArrayFunction = new HLEModuleFunction("scePaf", "sceGumDrawArray") {
		@Override
		public final void execute(Processor processor) {
			sceGumDrawArray(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGumDrawArrayFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGumPopMatrixFunction = new HLEModuleFunction("scePaf", "sceGumPopMatrix") {
		@Override
		public final void execute(Processor processor) {
			sceGumPopMatrix(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGumPopMatrixFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGumPushMatrixFunction = new HLEModuleFunction("scePaf", "sceGumPushMatrix") {
		@Override
		public final void execute(Processor processor) {
			sceGumPushMatrix(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGumPushMatrixFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGumRotateZFunction = new HLEModuleFunction("scePaf", "sceGumRotateZ") {
		@Override
		public final void execute(Processor processor) {
			sceGumRotateZ(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGumRotateZFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGumScaleFunction = new HLEModuleFunction("scePaf", "sceGumScale") {
		@Override
		public final void execute(Processor processor) {
			sceGumScale(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGumScaleFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceGumTranslateFunction = new HLEModuleFunction("scePaf", "sceGumTranslate") {
		@Override
		public final void execute(Processor processor) {
			sceGumTranslate(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sceGumTranslateFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction scePaf_A08B0F31Function = new HLEModuleFunction("scePaf", "scePaf_A08B0F31") {
		@Override
		public final void execute(Processor processor) {
			scePaf_A08B0F31(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.scePaf_A08B0F31Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction paf_finiFunction = new HLEModuleFunction("scePaf", "paf_fini") {
		@Override
		public final void execute(Processor processor) {
			paf_fini(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.paf_finiFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sinfFunction = new HLEModuleFunction("scePaf", "sinf") {
		@Override
		public final void execute(Processor processor) {
			sinf(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sinfFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction cosfFunction = new HLEModuleFunction("scePaf", "cosf") {
		@Override
		public final void execute(Processor processor) {
			cosf(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.cosfFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sqrtfFunction = new HLEModuleFunction("scePaf", "sqrtf") {
		@Override
		public final void execute(Processor processor) {
			sqrtf(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.sqrtfFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction mallocFunction = new HLEModuleFunction("scePaf", "malloc") {
		@Override
		public final void execute(Processor processor) {
			malloc(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.mallocFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction freeFunction = new HLEModuleFunction("scePaf", "free") {
		@Override
		public final void execute(Processor processor) {
			free(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.freeFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction memcpyFunction = new HLEModuleFunction("scePaf", "memcpy") {
		@Override
		public final void execute(Processor processor) {
			memcpy(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.memcpyFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction memsetFunction = new HLEModuleFunction("scePaf", "memset") {
		@Override
		public final void execute(Processor processor) {
			memset(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.memsetFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction memcmpFunction = new HLEModuleFunction("scePaf", "memcmp") {
		@Override
		public final void execute(Processor processor) {
			memcmp(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.memcmpFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction floorfFunction = new HLEModuleFunction("scePaf", "floorf") {
		@Override
		public final void execute(Processor processor) {
			floorf(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.floorfFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction acosfFunction = new HLEModuleFunction("scePaf", "acosf") {
		@Override
		public final void execute(Processor processor) {
			acosf(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.acosfFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction printfFunction = new HLEModuleFunction("scePaf", "printf") {
		@Override
		public final void execute(Processor processor) {
			printf(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.scePaf.printfFunction.execute(processor);";
		}
	};
    
};
