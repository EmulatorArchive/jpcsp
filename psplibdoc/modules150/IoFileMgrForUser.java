/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class IoFileMgrForUser implements HLEModule {
	@Override
	public String getName() { return "IoFileMgrForUser"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(sceIoPollAsyncFunction, 0x3251EA56);
			mm.addFunction(sceIoWaitAsyncFunction, 0xE23EEC33);
			mm.addFunction(sceIoWaitAsyncCBFunction, 0x35DBD746);
			mm.addFunction(sceIoGetAsyncStatFunction, 0xCB05F8D6);
			mm.addFunction(sceIoChangeAsyncPriorityFunction, 0xB293727F);
			mm.addFunction(sceIoSetAsyncCallbackFunction, 0xA12A0514);
			mm.addFunction(sceIoCloseFunction, 0x810C4BC3);
			mm.addFunction(sceIoCloseAsyncFunction, 0xFF5940B6);
			mm.addFunction(sceIoOpenFunction, 0x109F50BC);
			mm.addFunction(sceIoOpenAsyncFunction, 0x89AA9906);
			mm.addFunction(sceIoReadFunction, 0x6A638D83);
			mm.addFunction(sceIoReadAsyncFunction, 0xA0B5A7C2);
			mm.addFunction(sceIoWriteFunction, 0x42EC03AC);
			mm.addFunction(sceIoWriteAsyncFunction, 0x0FACAB19);
			mm.addFunction(sceIoLseekFunction, 0x27EB27B8);
			mm.addFunction(sceIoLseekAsyncFunction, 0x71B19E77);
			mm.addFunction(sceIoLseek32Function, 0x68963324);
			mm.addFunction(sceIoLseek32AsyncFunction, 0x1B385D8F);
			mm.addFunction(sceIoIoctlFunction, 0x63632449);
			mm.addFunction(sceIoIoctlAsyncFunction, 0xE95A012B);
			mm.addFunction(sceIoDopenFunction, 0xB29DDF9C);
			mm.addFunction(sceIoDreadFunction, 0xE3EB004C);
			mm.addFunction(sceIoDcloseFunction, 0xEB092469);
			mm.addFunction(sceIoRemoveFunction, 0xF27A9C51);
			mm.addFunction(sceIoMkdirFunction, 0x06A70004);
			mm.addFunction(sceIoRmdirFunction, 0x1117C65F);
			mm.addFunction(sceIoChdirFunction, 0x55F4717D);
			mm.addFunction(sceIoSyncFunction, 0xAB96437F);
			mm.addFunction(sceIoGetstatFunction, 0xACE946E8);
			mm.addFunction(sceIoChstatFunction, 0xB8A740F4);
			mm.addFunction(sceIoRenameFunction, 0x779103A0);
			mm.addFunction(sceIoDevctlFunction, 0x54F5FB11);
			mm.addFunction(sceIoGetDevTypeFunction, 0x08BD7374);
			mm.addFunction(sceIoAssignFunction, 0xB2A628C1);
			mm.addFunction(sceIoUnassignFunction, 0x6D08A871);
			mm.addFunction(sceIoCancelFunction, 0xE8BC6571);
			mm.addFunction(sceIoGetFdListFunction, 0x5C2BE2CC);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(sceIoPollAsyncFunction);
			mm.removeFunction(sceIoWaitAsyncFunction);
			mm.removeFunction(sceIoWaitAsyncCBFunction);
			mm.removeFunction(sceIoGetAsyncStatFunction);
			mm.removeFunction(sceIoChangeAsyncPriorityFunction);
			mm.removeFunction(sceIoSetAsyncCallbackFunction);
			mm.removeFunction(sceIoCloseFunction);
			mm.removeFunction(sceIoCloseAsyncFunction);
			mm.removeFunction(sceIoOpenFunction);
			mm.removeFunction(sceIoOpenAsyncFunction);
			mm.removeFunction(sceIoReadFunction);
			mm.removeFunction(sceIoReadAsyncFunction);
			mm.removeFunction(sceIoWriteFunction);
			mm.removeFunction(sceIoWriteAsyncFunction);
			mm.removeFunction(sceIoLseekFunction);
			mm.removeFunction(sceIoLseekAsyncFunction);
			mm.removeFunction(sceIoLseek32Function);
			mm.removeFunction(sceIoLseek32AsyncFunction);
			mm.removeFunction(sceIoIoctlFunction);
			mm.removeFunction(sceIoIoctlAsyncFunction);
			mm.removeFunction(sceIoDopenFunction);
			mm.removeFunction(sceIoDreadFunction);
			mm.removeFunction(sceIoDcloseFunction);
			mm.removeFunction(sceIoRemoveFunction);
			mm.removeFunction(sceIoMkdirFunction);
			mm.removeFunction(sceIoRmdirFunction);
			mm.removeFunction(sceIoChdirFunction);
			mm.removeFunction(sceIoSyncFunction);
			mm.removeFunction(sceIoGetstatFunction);
			mm.removeFunction(sceIoChstatFunction);
			mm.removeFunction(sceIoRenameFunction);
			mm.removeFunction(sceIoDevctlFunction);
			mm.removeFunction(sceIoGetDevTypeFunction);
			mm.removeFunction(sceIoAssignFunction);
			mm.removeFunction(sceIoUnassignFunction);
			mm.removeFunction(sceIoCancelFunction);
			mm.removeFunction(sceIoGetFdListFunction);
			
		}
	}
	
	
	public void sceIoPollAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoPollAsync [0x3251EA56]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoWaitAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoWaitAsync [0xE23EEC33]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoWaitAsyncCB(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoWaitAsyncCB [0x35DBD746]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoGetAsyncStat(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoGetAsyncStat [0xCB05F8D6]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoChangeAsyncPriority(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoChangeAsyncPriority [0xB293727F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoSetAsyncCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoSetAsyncCallback [0xA12A0514]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoClose(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoClose [0x810C4BC3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoCloseAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoCloseAsync [0xFF5940B6]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoOpen(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoOpen [0x109F50BC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoOpenAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoOpenAsync [0x89AA9906]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoRead(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoRead [0x6A638D83]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoReadAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoReadAsync [0xA0B5A7C2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoWrite(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoWrite [0x42EC03AC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoWriteAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoWriteAsync [0x0FACAB19]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoLseek(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoLseek [0x27EB27B8]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoLseekAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoLseekAsync [0x71B19E77]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoLseek32(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoLseek32 [0x68963324]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoLseek32Async(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoLseek32Async [0x1B385D8F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoIoctl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoIoctl [0x63632449]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoIoctlAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoIoctlAsync [0xE95A012B]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoDopen(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoDopen [0xB29DDF9C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoDread(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoDread [0xE3EB004C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoDclose(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoDclose [0xEB092469]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoRemove(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoRemove [0xF27A9C51]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoMkdir(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoMkdir [0x06A70004]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoRmdir(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoRmdir [0x1117C65F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoChdir(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoChdir [0x55F4717D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoSync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoSync [0xAB96437F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoGetstat(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoGetstat [0xACE946E8]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoChstat(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoChstat [0xB8A740F4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoRename(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoRename [0x779103A0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoDevctl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoDevctl [0x54F5FB11]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoGetDevType(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoGetDevType [0x08BD7374]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoAssign(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoAssign [0xB2A628C1]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoUnassign(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoUnassign [0x6D08A871]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoCancel(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoCancel [0xE8BC6571]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceIoGetFdList(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceIoGetFdList [0x5C2BE2CC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction sceIoPollAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoPollAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoPollAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoPollAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoWaitAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoWaitAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoWaitAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoWaitAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoWaitAsyncCBFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoWaitAsyncCB") {
		@Override
		public final void execute(Processor processor) {
			sceIoWaitAsyncCB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoWaitAsyncCB(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoGetAsyncStatFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoGetAsyncStat") {
		@Override
		public final void execute(Processor processor) {
			sceIoGetAsyncStat(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoGetAsyncStat(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoChangeAsyncPriorityFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoChangeAsyncPriority") {
		@Override
		public final void execute(Processor processor) {
			sceIoChangeAsyncPriority(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoChangeAsyncPriority(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoSetAsyncCallbackFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoSetAsyncCallback") {
		@Override
		public final void execute(Processor processor) {
			sceIoSetAsyncCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoSetAsyncCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoCloseFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoClose") {
		@Override
		public final void execute(Processor processor) {
			sceIoClose(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoClose(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoCloseAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoCloseAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoCloseAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoCloseAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoOpenFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoOpen") {
		@Override
		public final void execute(Processor processor) {
			sceIoOpen(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoOpen(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoOpenAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoOpenAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoOpenAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoOpenAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoReadFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoRead") {
		@Override
		public final void execute(Processor processor) {
			sceIoRead(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoRead(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoReadAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoReadAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoReadAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoReadAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoWriteFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoWrite") {
		@Override
		public final void execute(Processor processor) {
			sceIoWrite(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoWrite(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoWriteAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoWriteAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoWriteAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoWriteAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoLseekFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoLseek") {
		@Override
		public final void execute(Processor processor) {
			sceIoLseek(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoLseek(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoLseekAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoLseekAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoLseekAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoLseekAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoLseek32Function = new HLEModuleFunction("IoFileMgrForUser", "sceIoLseek32") {
		@Override
		public final void execute(Processor processor) {
			sceIoLseek32(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoLseek32(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoLseek32AsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoLseek32Async") {
		@Override
		public final void execute(Processor processor) {
			sceIoLseek32Async(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoLseek32Async(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoIoctlFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoIoctl") {
		@Override
		public final void execute(Processor processor) {
			sceIoIoctl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoIoctl(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoIoctlAsyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoIoctlAsync") {
		@Override
		public final void execute(Processor processor) {
			sceIoIoctlAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoIoctlAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoDopenFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoDopen") {
		@Override
		public final void execute(Processor processor) {
			sceIoDopen(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoDopen(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoDreadFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoDread") {
		@Override
		public final void execute(Processor processor) {
			sceIoDread(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoDread(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoDcloseFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoDclose") {
		@Override
		public final void execute(Processor processor) {
			sceIoDclose(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoDclose(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoRemoveFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoRemove") {
		@Override
		public final void execute(Processor processor) {
			sceIoRemove(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoRemove(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoMkdirFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoMkdir") {
		@Override
		public final void execute(Processor processor) {
			sceIoMkdir(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoMkdir(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoRmdirFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoRmdir") {
		@Override
		public final void execute(Processor processor) {
			sceIoRmdir(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoRmdir(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoChdirFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoChdir") {
		@Override
		public final void execute(Processor processor) {
			sceIoChdir(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoChdir(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoSyncFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoSync") {
		@Override
		public final void execute(Processor processor) {
			sceIoSync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoSync(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoGetstatFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoGetstat") {
		@Override
		public final void execute(Processor processor) {
			sceIoGetstat(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoGetstat(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoChstatFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoChstat") {
		@Override
		public final void execute(Processor processor) {
			sceIoChstat(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoChstat(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoRenameFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoRename") {
		@Override
		public final void execute(Processor processor) {
			sceIoRename(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoRename(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoDevctlFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoDevctl") {
		@Override
		public final void execute(Processor processor) {
			sceIoDevctl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoDevctl(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoGetDevTypeFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoGetDevType") {
		@Override
		public final void execute(Processor processor) {
			sceIoGetDevType(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoGetDevType(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoAssignFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoAssign") {
		@Override
		public final void execute(Processor processor) {
			sceIoAssign(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoAssign(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoUnassignFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoUnassign") {
		@Override
		public final void execute(Processor processor) {
			sceIoUnassign(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoUnassign(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoCancelFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoCancel") {
		@Override
		public final void execute(Processor processor) {
			sceIoCancel(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoCancel(processor);";
		}
	};
    
	public final HLEModuleFunction sceIoGetFdListFunction = new HLEModuleFunction("IoFileMgrForUser", "sceIoGetFdList") {
		@Override
		public final void execute(Processor processor) {
			sceIoGetFdList(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.IoFileMgrForUserModule.sceIoGetFdList(processor);";
		}
	};
    
};
