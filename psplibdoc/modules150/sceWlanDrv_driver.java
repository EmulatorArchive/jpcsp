/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class sceWlanDrv_driver implements HLEModule {
	@Override
	public String getName() { return "sceWlanDrv_driver"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
			
			mm.addFunction(sceWlanDevInitFunction, 0x6D89822C);
			
			mm.addFunction(sceWlanDevEndFunction, 0xEC9232F0);
			
			mm.addFunction(sceWlanDevAttachFunction, 0x482CAE9A);
			
			mm.addFunction(sceWlanDevDetachFunction, 0xC9A8CAB7);
			
			mm.addFunction(sceWlanDevIsPowerOnFunction, 0x93440B11);
			
			mm.addFunction(sceWlanDevGetMacAddrFunction, 0x19E51F54);
			
			mm.addFunction(sceWlanDevIsGameModeFunction, 0x5E7C8D94);
			
			mm.addFunction(sceWlanGPPrevEstablishActiveFunction, 0x5ED4049A);
			
			mm.addFunction(sceWlanGPSendFunction, 0xB4D7CB74);
			
			mm.addFunction(sceWlanGPRecvFunction, 0xA447103A);
			
			mm.addFunction(sceWlanGPRegisterCallbackFunction, 0x9658C9F7);
			
			mm.addFunction(sceWlanGPUnRegisterCallbackFunction, 0x4C7F62E0);
			
			mm.addFunction(sceWlanDrv_driver_81579D36Function, 0x81579D36);
			
			mm.addFunction(sceWlanDrv_driver_5BAA1FE5Function, 0x5BAA1FE5);
			
			mm.addFunction(sceWlanDrv_driver_4C14BACAFunction, 0x4C14BACA);
			
			mm.addFunction(sceWlanDrv_driver_2D0FAE4EFunction, 0x2D0FAE4E);
			
			mm.addFunction(sceWlanDrv_driver_56F467CAFunction, 0x56F467CA);
			
			mm.addFunction(sceWlanSetWakeUpFunction, 0xFE8A0B46);
			
			mm.addFunction(sceWlanDrv_driver_40B0AA4AFunction, 0x40B0AA4A);
			
			mm.addFunction(sceWlanDevSetGPIOFunction, 0x7FF54BD2);
			
			mm.addFunction(sceWlanDevGetStateGPIOFunction, 0x05FE320C);
			
			mm.addFunction(sceWlanDrv_driver_8D5F551BFunction, 0x8D5F551B);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
			
			mm.removeFunction(sceWlanDevInitFunction);
			
			mm.removeFunction(sceWlanDevEndFunction);
			
			mm.removeFunction(sceWlanDevAttachFunction);
			
			mm.removeFunction(sceWlanDevDetachFunction);
			
			mm.removeFunction(sceWlanDevIsPowerOnFunction);
			
			mm.removeFunction(sceWlanDevGetMacAddrFunction);
			
			mm.removeFunction(sceWlanDevIsGameModeFunction);
			
			mm.removeFunction(sceWlanGPPrevEstablishActiveFunction);
			
			mm.removeFunction(sceWlanGPSendFunction);
			
			mm.removeFunction(sceWlanGPRecvFunction);
			
			mm.removeFunction(sceWlanGPRegisterCallbackFunction);
			
			mm.removeFunction(sceWlanGPUnRegisterCallbackFunction);
			
			mm.removeFunction(sceWlanDrv_driver_81579D36Function);
			
			mm.removeFunction(sceWlanDrv_driver_5BAA1FE5Function);
			
			mm.removeFunction(sceWlanDrv_driver_4C14BACAFunction);
			
			mm.removeFunction(sceWlanDrv_driver_2D0FAE4EFunction);
			
			mm.removeFunction(sceWlanDrv_driver_56F467CAFunction);
			
			mm.removeFunction(sceWlanSetWakeUpFunction);
			
			mm.removeFunction(sceWlanDrv_driver_40B0AA4AFunction);
			
			mm.removeFunction(sceWlanDevSetGPIOFunction);
			
			mm.removeFunction(sceWlanDevGetStateGPIOFunction);
			
			mm.removeFunction(sceWlanDrv_driver_8D5F551BFunction);
			
		}
	}
	
	
	public void sceWlanDevInit(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevInit [0x6D89822C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevEnd(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevEnd [0xEC9232F0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevAttach(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevAttach [0x482CAE9A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevDetach(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevDetach [0xC9A8CAB7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevIsPowerOn(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevIsPowerOn [0x93440B11]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevGetMacAddr(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevGetMacAddr [0x19E51F54]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevIsGameMode(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevIsGameMode [0x5E7C8D94]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanGPPrevEstablishActive(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanGPPrevEstablishActive [0x5ED4049A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanGPSend(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanGPSend [0xB4D7CB74]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanGPRecv(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanGPRecv [0xA447103A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanGPRegisterCallback(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanGPRegisterCallback [0x9658C9F7]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanGPUnRegisterCallback(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanGPUnRegisterCallback [0x4C7F62E0]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDrv_driver_81579D36(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDrv_driver_81579D36 [0x81579D36]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDrv_driver_5BAA1FE5(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDrv_driver_5BAA1FE5 [0x5BAA1FE5]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDrv_driver_4C14BACA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDrv_driver_4C14BACA [0x4C14BACA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDrv_driver_2D0FAE4E(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDrv_driver_2D0FAE4E [0x2D0FAE4E]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDrv_driver_56F467CA(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDrv_driver_56F467CA [0x56F467CA]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanSetWakeUp(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanSetWakeUp [0xFE8A0B46]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDrv_driver_40B0AA4A(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDrv_driver_40B0AA4A [0x40B0AA4A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevSetGPIO(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevSetGPIO [0x7FF54BD2]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDevGetStateGPIO(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDevGetStateGPIO [0x05FE320C]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceWlanDrv_driver_8D5F551B(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceWlanDrv_driver_8D5F551B [0x8D5F551B]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public final HLEModuleFunction sceWlanDevInitFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevInit") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevInit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevInitFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevEndFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevEnd") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevEnd(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevEndFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevAttachFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevAttach") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevAttach(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevAttachFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevDetachFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevDetach") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevDetach(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevDetachFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevIsPowerOnFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevIsPowerOn") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevIsPowerOn(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevIsPowerOnFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevGetMacAddrFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevGetMacAddr") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevGetMacAddr(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevGetMacAddrFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevIsGameModeFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevIsGameMode") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevIsGameMode(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevIsGameModeFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanGPPrevEstablishActiveFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanGPPrevEstablishActive") {
		@Override
		public final void execute(Processor processor) {
			sceWlanGPPrevEstablishActive(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanGPPrevEstablishActiveFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanGPSendFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanGPSend") {
		@Override
		public final void execute(Processor processor) {
			sceWlanGPSend(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanGPSendFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanGPRecvFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanGPRecv") {
		@Override
		public final void execute(Processor processor) {
			sceWlanGPRecv(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanGPRecvFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanGPRegisterCallbackFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanGPRegisterCallback") {
		@Override
		public final void execute(Processor processor) {
			sceWlanGPRegisterCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanGPRegisterCallbackFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanGPUnRegisterCallbackFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanGPUnRegisterCallback") {
		@Override
		public final void execute(Processor processor) {
			sceWlanGPUnRegisterCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanGPUnRegisterCallbackFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDrv_driver_81579D36Function = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDrv_driver_81579D36") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDrv_driver_81579D36(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDrv_driver_81579D36Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDrv_driver_5BAA1FE5Function = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDrv_driver_5BAA1FE5") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDrv_driver_5BAA1FE5(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDrv_driver_5BAA1FE5Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDrv_driver_4C14BACAFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDrv_driver_4C14BACA") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDrv_driver_4C14BACA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDrv_driver_4C14BACAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDrv_driver_2D0FAE4EFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDrv_driver_2D0FAE4E") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDrv_driver_2D0FAE4E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDrv_driver_2D0FAE4EFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDrv_driver_56F467CAFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDrv_driver_56F467CA") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDrv_driver_56F467CA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDrv_driver_56F467CAFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanSetWakeUpFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanSetWakeUp") {
		@Override
		public final void execute(Processor processor) {
			sceWlanSetWakeUp(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanSetWakeUpFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDrv_driver_40B0AA4AFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDrv_driver_40B0AA4A") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDrv_driver_40B0AA4A(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDrv_driver_40B0AA4AFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevSetGPIOFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevSetGPIO") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevSetGPIO(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevSetGPIOFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDevGetStateGPIOFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDevGetStateGPIO") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDevGetStateGPIO(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDevGetStateGPIOFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceWlanDrv_driver_8D5F551BFunction = new HLEModuleFunction("sceWlanDrv_driver", "sceWlanDrv_driver_8D5F551B") {
		@Override
		public final void execute(Processor processor) {
			sceWlanDrv_driver_8D5F551B(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceWlanDrv_driver.sceWlanDrv_driver_8D5F551BFunction.execute(processor);";
		}
	};
    
};
