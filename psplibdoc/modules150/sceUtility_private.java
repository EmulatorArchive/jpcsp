/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class sceUtility_private implements HLEModule {
	@Override
	public String getName() { return "sceUtility_private"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
			
			mm.addFunction(sceUtility_private_17CB4D96Function, 0x17CB4D96);
			
			mm.addFunction(sceUtility_private_EE7AC503Function, 0xEE7AC503);
			
			mm.addFunction(sceUtility_private_5FF96ED3Function, 0x5FF96ED3);
			
			mm.addFunction(sceUtility_private_9C9DD5BCFunction, 0x9C9DD5BC);
			
			mm.addFunction(sceUtility_private_4405BA38Function, 0x4405BA38);
			
			mm.addFunction(sceUtility_private_1DFA62EFFunction, 0x1DFA62EF);
			
			mm.addFunction(sceUtilityDialogSetStatusFunction, 0x680C0EA8);
			
			mm.addFunction(sceUtilityDialogGetTypeFunction, 0xB222E887);
			
			mm.addFunction(sceUtilityDialogGetParamFunction, 0x4F2206BC);
			
			mm.addFunction(sceUtility_private_EF5BC2D1Function, 0xEF5BC2D1);
			
			mm.addFunction(sceUtilityDialogGetSpeedFunction, 0xE01FE32A);
			
			mm.addFunction(sceUtility_private_19461966Function, 0x19461966);
			
			mm.addFunction(sceUtilityDialogSetThreadIdFunction, 0x6F923BD3);
			
			mm.addFunction(sceUtilityDialogLoadModuleFunction, 0xA5168A5D);
			
			mm.addFunction(sceUtilityDialogPowerLockFunction, 0x3CEAE1DF);
			
			mm.addFunction(sceUtilityDialogPowerUnlockFunction, 0x56BEDCA4);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
			
			mm.removeFunction(sceUtility_private_17CB4D96Function);
			
			mm.removeFunction(sceUtility_private_EE7AC503Function);
			
			mm.removeFunction(sceUtility_private_5FF96ED3Function);
			
			mm.removeFunction(sceUtility_private_9C9DD5BCFunction);
			
			mm.removeFunction(sceUtility_private_4405BA38Function);
			
			mm.removeFunction(sceUtility_private_1DFA62EFFunction);
			
			mm.removeFunction(sceUtilityDialogSetStatusFunction);
			
			mm.removeFunction(sceUtilityDialogGetTypeFunction);
			
			mm.removeFunction(sceUtilityDialogGetParamFunction);
			
			mm.removeFunction(sceUtility_private_EF5BC2D1Function);
			
			mm.removeFunction(sceUtilityDialogGetSpeedFunction);
			
			mm.removeFunction(sceUtility_private_19461966Function);
			
			mm.removeFunction(sceUtilityDialogSetThreadIdFunction);
			
			mm.removeFunction(sceUtilityDialogLoadModuleFunction);
			
			mm.removeFunction(sceUtilityDialogPowerLockFunction);
			
			mm.removeFunction(sceUtilityDialogPowerUnlockFunction);
			
		}
	}
	
	
	public void sceUtility_private_17CB4D96(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_17CB4D96 [0x17CB4D96]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtility_private_EE7AC503(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_EE7AC503 [0xEE7AC503]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtility_private_5FF96ED3(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_5FF96ED3 [0x5FF96ED3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtility_private_9C9DD5BC(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_9C9DD5BC [0x9C9DD5BC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtility_private_4405BA38(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_4405BA38 [0x4405BA38]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtility_private_1DFA62EF(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_1DFA62EF [0x1DFA62EF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogSetStatus(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogSetStatus [0x680C0EA8]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogGetType(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogGetType [0xB222E887]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogGetParam(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogGetParam [0x4F2206BC]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtility_private_EF5BC2D1(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_EF5BC2D1 [0xEF5BC2D1]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogGetSpeed(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogGetSpeed [0xE01FE32A]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtility_private_19461966(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtility_private_19461966 [0x19461966]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogSetThreadId(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogSetThreadId [0x6F923BD3]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogLoadModule(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogLoadModule [0xA5168A5D]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogPowerLock(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogPowerLock [0x3CEAE1DF]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public void sceUtilityDialogPowerUnlock(Processor processor) {
		// CpuState cpu = processor.cpu; // New-Style Processor
		Processor cpu = processor; // Old-Style Processor
		Memory mem = Processor.memory;		
		/* put your own code here instead */
		// int a0 = cpu.gpr[4];  int a1 = cpu.gpr[5];  int a2 = cpu.gpr[6];  int a3 = cpu.gpr[7];  int t0 = cpu.gpr[8];  int t1 = cpu.gpr[9];  int t2 = cpu.gpr[10];  int t3 = cpu.gpr[11];
		// float f12 = cpu.fpr[12];  float f13 = cpu.fpr[13];  float f14 = cpu.fpr[14];  float f15 = cpu.fpr[15];  float f16 = cpu.fpr[16];  float f17 = cpu.fpr[17];  float f18 = cpu.fpr[18]; float f19 = cpu.fpr[19];
		System.out.println("Unimplemented NID function sceUtilityDialogPowerUnlock [0x56BEDCA4]");
		// cpu.gpr[2] = (int)(result & 0xffffffff);  cpu.gpr[3] = (int)(result  32);
		// cpu.fpr[0] = result;
	}
    
	public final HLEModuleFunction sceUtility_private_17CB4D96Function = new HLEModuleFunction("sceUtility_private", "sceUtility_private_17CB4D96") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_17CB4D96(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_17CB4D96Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtility_private_EE7AC503Function = new HLEModuleFunction("sceUtility_private", "sceUtility_private_EE7AC503") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_EE7AC503(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_EE7AC503Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtility_private_5FF96ED3Function = new HLEModuleFunction("sceUtility_private", "sceUtility_private_5FF96ED3") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_5FF96ED3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_5FF96ED3Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtility_private_9C9DD5BCFunction = new HLEModuleFunction("sceUtility_private", "sceUtility_private_9C9DD5BC") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_9C9DD5BC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_9C9DD5BCFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtility_private_4405BA38Function = new HLEModuleFunction("sceUtility_private", "sceUtility_private_4405BA38") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_4405BA38(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_4405BA38Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtility_private_1DFA62EFFunction = new HLEModuleFunction("sceUtility_private", "sceUtility_private_1DFA62EF") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_1DFA62EF(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_1DFA62EFFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogSetStatusFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogSetStatus") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogSetStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogSetStatusFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogGetTypeFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogGetType") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogGetType(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogGetTypeFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogGetParamFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogGetParam") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogGetParam(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogGetParamFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtility_private_EF5BC2D1Function = new HLEModuleFunction("sceUtility_private", "sceUtility_private_EF5BC2D1") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_EF5BC2D1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_EF5BC2D1Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogGetSpeedFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogGetSpeed") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogGetSpeed(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogGetSpeedFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtility_private_19461966Function = new HLEModuleFunction("sceUtility_private", "sceUtility_private_19461966") {
		@Override
		public final void execute(Processor processor) {
			sceUtility_private_19461966(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtility_private_19461966Function.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogSetThreadIdFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogSetThreadId") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogSetThreadId(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogSetThreadIdFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogLoadModuleFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogLoadModule") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogLoadModule(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogLoadModuleFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogPowerLockFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogPowerLock") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogPowerLock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogPowerLockFunction.execute(processor);";
		}
	};
    
	public final HLEModuleFunction sceUtilityDialogPowerUnlockFunction = new HLEModuleFunction("sceUtility_private", "sceUtilityDialogPowerUnlock") {
		@Override
		public final void execute(Processor processor) {
			sceUtilityDialogPowerUnlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.modules150.sceUtility_private.sceUtilityDialogPowerUnlockFunction.execute(processor);";
		}
	};
    
};
