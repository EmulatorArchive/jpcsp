/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class sceNetApctl_lib implements HLEModule {
	@Override
	public String getName() { return "sceNetApctl_lib"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(sceNetApctlScanFunction, 0xB3CF6849);
			mm.addFunction(sceNetApctlGetBSSDescIDListFunction, 0x0C7FFA5C);
			mm.addFunction(sceNetApctlGetBSSDescEntryFunction, 0x96BEB231);
			mm.addFunction(sceNetApctlAddInternalHandlerFunction, 0x7CFAB990);
			mm.addFunction(sceNetApctlDelInternalHandlerFunction, 0xE11BAFAB);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(sceNetApctlScanFunction);
			mm.removeFunction(sceNetApctlGetBSSDescIDListFunction);
			mm.removeFunction(sceNetApctlGetBSSDescEntryFunction);
			mm.removeFunction(sceNetApctlAddInternalHandlerFunction);
			mm.removeFunction(sceNetApctlDelInternalHandlerFunction);
			
		}
	}
	
	
	public void sceNetApctlScan(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceNetApctlScan [0xB3CF6849]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceNetApctlGetBSSDescIDList(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceNetApctlGetBSSDescIDList [0x0C7FFA5C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceNetApctlGetBSSDescEntry(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceNetApctlGetBSSDescEntry [0x96BEB231]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceNetApctlAddInternalHandler(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceNetApctlAddInternalHandler [0x7CFAB990]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceNetApctlDelInternalHandler(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceNetApctlDelInternalHandler [0xE11BAFAB]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction sceNetApctlScanFunction = new HLEModuleFunction("sceNetApctl_lib", "sceNetApctlScan") {
		@Override
		public final void execute(Processor processor) {
			sceNetApctlScan(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNetApctl_libModule.sceNetApctlScan(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetApctlGetBSSDescIDListFunction = new HLEModuleFunction("sceNetApctl_lib", "sceNetApctlGetBSSDescIDList") {
		@Override
		public final void execute(Processor processor) {
			sceNetApctlGetBSSDescIDList(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNetApctl_libModule.sceNetApctlGetBSSDescIDList(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetApctlGetBSSDescEntryFunction = new HLEModuleFunction("sceNetApctl_lib", "sceNetApctlGetBSSDescEntry") {
		@Override
		public final void execute(Processor processor) {
			sceNetApctlGetBSSDescEntry(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNetApctl_libModule.sceNetApctlGetBSSDescEntry(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetApctlAddInternalHandlerFunction = new HLEModuleFunction("sceNetApctl_lib", "sceNetApctlAddInternalHandler") {
		@Override
		public final void execute(Processor processor) {
			sceNetApctlAddInternalHandler(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNetApctl_libModule.sceNetApctlAddInternalHandler(processor);";
		}
	};
    
	public final HLEModuleFunction sceNetApctlDelInternalHandlerFunction = new HLEModuleFunction("sceNetApctl_lib", "sceNetApctlDelInternalHandler") {
		@Override
		public final void execute(Processor processor) {
			sceNetApctlDelInternalHandler(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceNetApctl_libModule.sceNetApctlDelInternalHandler(processor);";
		}
	};
    
};
