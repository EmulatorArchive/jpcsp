/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class sceSyscon_driver implements HLEModule {
	@Override
	public String getName() { return "sceSyscon_driver"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(sceSysconInitFunction, 0x0A771482);
			mm.addFunction(sceSysconEndFunction, 0x92D16FC7);
			mm.addFunction(sceSysconSuspendFunction, 0x081826B4);
			mm.addFunction(sceSysconResumeFunction, 0x56931095);
			mm.addFunction(sceSysconSetDebugHandlersFunction, 0x5EE92F3C);
			mm.addFunction(sceSysconSetPollingModeFunction, 0x5FF1D610);
			mm.addFunction(sceSysconSetLowBatteryCallbackFunction, 0xAD555CE5);
			mm.addFunction(sceSysconSetPowerSwitchCallbackFunction, 0xF281805D);
			mm.addFunction(sceSysconSetAlarmCallbackFunction, 0xA068B3D0);
			mm.addFunction(sceSysconSetAcSupplyCallbackFunction, 0xE540E532);
			mm.addFunction(sceSysconSetHPConnectCallbackFunction, 0xBBFB70C0);
			mm.addFunction(sceSysconSetHRPowerCallbackFunction, 0x805180D1);
			mm.addFunction(sceSysconSetWlanSwitchCallbackFunction, 0x53072985);
			mm.addFunction(sceSysconSetWlanPowerCallbackFunction, 0xF9193EC3);
			mm.addFunction(sceSysconSetHoldSwitchCallbackFunction, 0x7479DB05);
			mm.addFunction(sceSysconSetUmdSwitchCallbackFunction, 0x6848D817);
			mm.addFunction(sceSysconCmdExecFunction, 0x5B9ACC97);
			mm.addFunction(sceSysconCmdExecAsyncFunction, 0x3AC3D2A4);
			mm.addFunction(sceSysconCmdCancelFunction, 0x1602ED0D);
			mm.addFunction(sceSysconCmdSyncFunction, 0xF350F666);
			mm.addFunction(sceSysconGetBaryonStatusFunction, 0x86D4CAD8);
			mm.addFunction(sceSysconIsLowBatteryFunction, 0x32CFD20F);
			mm.addFunction(sceSysconGetPowerSwitchFunction, 0xEC0DE439);
			mm.addFunction(sceSysconIsAlarmedFunction, 0xEA5B9823);
			mm.addFunction(sceSyscon_driver_E20D08FEFunction, 0xE20D08FE);
			mm.addFunction(sceSysconGetHPConnectFunction, 0xE0DDFE18);
			mm.addFunction(sceSysconGetWlanSwitchFunction, 0xBDA16E46);
			mm.addFunction(sceSysconGetHoldSwitchFunction, 0xF6BB4649);
			mm.addFunction(sceSysconGetUmdSwitchFunction, 0x138747DE);
			mm.addFunction(sceSysconGetHRPowerStatusFunction, 0x71AE1BCE);
			mm.addFunction(sceSysconGetWlanPowerStatusFunction, 0x7016161C);
			mm.addFunction(sceSysconGetLeptonPowerCtrlFunction, 0x48AB0E44);
			mm.addFunction(sceSysconGetMsPowerCtrlFunction, 0x628F2351);
			mm.addFunction(sceSysconGetHRPowerCtrlFunction, 0x3C739F57);
			mm.addFunction(sceSysconGetWlanPowerCtrlFunction, 0xEC37C549);
			mm.addFunction(sceSysconGetTachyonVmePowerCtrlFunction, 0x8DDA4CA6);
			mm.addFunction(sceSysconGetTachyonAwPowerCtrlFunction, 0x52B74B6C);
			mm.addFunction(sceSysconGetTachyonAvcPowerCtrlFunction, 0x1B17D3E3);
			mm.addFunction(sceSysconGetLcdPowerCtrlFunction, 0x5F19C00F);
			mm.addFunction(sceSysconGetWlanLedCtrlFunction, 0xCC04A978);
			mm.addFunction(sceSysconNopFunction, 0xE6B74CB9);
			mm.addFunction(sceSysconGetBaryonVersionFunction, 0x7EC5A957);
			mm.addFunction(sceSysconGetTimeStampFunction, 0x7BCC5EAE);
			mm.addFunction(sceSysconGetTachyonTempFunction, 0x3B657A27);
			mm.addFunction(sceSysconGetPowerSupplyStatusFunction, 0xFC32141A);
			mm.addFunction(sceSysconGetWakeUpFactorFunction, 0xF775BC34);
			mm.addFunction(sceSysconGetWakeUpReqFunction, 0xA9AEF39F);
			mm.addFunction(sceSysconReadClockFunction, 0xC4D66C1D);
			mm.addFunction(sceSysconWriteClockFunction, 0xC7634A7A);
			mm.addFunction(sceSysconReadAlarmFunction, 0x7A805EE4);
			mm.addFunction(sceSysconWriteAlarmFunction, 0x6C911742);
			mm.addFunction(sceSyscon_driver_65EB6096Function, 0x65EB6096);
			mm.addFunction(sceSyscon_driver_EB277C88Function, 0xEB277C88);
			mm.addFunction(sceSysconSendSetParamFunction, 0x992C22C2);
			mm.addFunction(sceSysconReceiveSetParamFunction, 0x08234E6D);
			mm.addFunction(sceSysconGetTachyonWDTStatusFunction, 0x882F0AAB);
			mm.addFunction(sceSysconCtrlTachyonWDTFunction, 0x2EE82492);
			mm.addFunction(sceSysconResetDeviceFunction, 0x8CBC7987);
			mm.addFunction(sceSysconCtrlAnalogXYPollingFunction, 0x00E7B6C2);
			mm.addFunction(sceSysconCtrlHRPowerFunction, 0x44439604);
			mm.addFunction(sceSysconPowerStandbyFunction, 0xC8439C57);
			mm.addFunction(sceSysconPowerSuspendFunction, 0x91E183CB);
			mm.addFunction(sceSysconGetPommelVersionFunction, 0xE7E87741);
			mm.addFunction(sceSyscon_driver_FB148FB6Function, 0xFB148FB6);
			mm.addFunction(sceSysconCtrlVoltageFunction, 0x01677F91);
			mm.addFunction(sceSysconCtrlPowerFunction, 0xBE27FE66);
			mm.addFunction(sceSysconGetPowerStatusFunction, 0x09721F7F);
			mm.addFunction(sceSysconCtrlLEDFunction, 0x18BFBE65);
			mm.addFunction(sceSysconWritePommelRegFunction, 0xD1B501E8);
			mm.addFunction(sceSysconReadPommelRegFunction, 0x3DE38336);
			mm.addFunction(sceSysconGetPowerErrorFunction, 0x2B9E6A06);
			mm.addFunction(sceSysconCtrlLeptonPowerFunction, 0x8A4519F5);
			mm.addFunction(sceSysconCtrlMsPowerFunction, 0x99BBB24C);
			mm.addFunction(sceSysconCtrlWlanPowerFunction, 0xF0ED3255);
			mm.addFunction(sceSysconCtrlTachyonVmePowerFunction, 0x3C6DB1C5);
			mm.addFunction(sceSysconCtrlTachyonAwPowerFunction, 0xB2558E37);
			mm.addFunction(sceSysconCtrlTachyonAvcPowerFunction, 0xE5E35721);
			mm.addFunction(sceSysconCtrlLcdPowerFunction, 0x9478F399);
			mm.addFunction(sceSyscon_driver_806D4D6CFunction, 0x806D4D6C);
			mm.addFunction(sceSyscon_driver_D8471760Function, 0xD8471760);
			mm.addFunction(sceSysconPermitChargeBatteryFunction, 0xEAB13FBE);
			mm.addFunction(sceSysconForbidChargeBatteryFunction, 0xC5075828);
			mm.addFunction(sceSysconBatteryNopFunction, 0xE448FD3F);
			mm.addFunction(sceSysconBatteryGetStatusCapFunction, 0x6A53F3F8);
			mm.addFunction(sceSysconBatteryGetTempFunction, 0x70C10E61);
			mm.addFunction(sceSysconBatteryGetVoltFunction, 0x8BDEBB1E);
			mm.addFunction(sceSysconBatteryGetElecFunction, 0x373EC933);
			mm.addFunction(sceSysconBatteryGetRCapFunction, 0x82861DE2);
			mm.addFunction(sceSysconBatteryGetCapFunction, 0x876CA580);
			mm.addFunction(sceSysconBatteryGetFullCapFunction, 0x71135D7D);
			mm.addFunction(sceSysconBatteryGetIFCFunction, 0x7CBD4522);
			mm.addFunction(sceSysconBatteryGetLimitTimeFunction, 0x284FE366);
			mm.addFunction(sceSysconBatteryGetStatusFunction, 0x75025299);
			mm.addFunction(sceSysconBatteryGetCycleFunction, 0xB5105D51);
			mm.addFunction(sceSysconBatteryGetSerialFunction, 0xD5340103);
			mm.addFunction(sceSysconBatteryGetInfoFunction, 0xFA4C4518);
			mm.addFunction(sceSysconBatteryGetTempADFunction, 0xB71B98A8);
			mm.addFunction(sceSysconBatteryGetVoltADFunction, 0x87671B18);
			mm.addFunction(sceSysconBatteryGetElecADFunction, 0x75D22BF8);
			mm.addFunction(sceSysconBatteryGetTotalElecFunction, 0x4C539345);
			mm.addFunction(sceSysconBatteryGetChargeTimeFunction, 0x4C0EE2FA);
			mm.addFunction(sceSysconBatteryWriteNVMFunction, 0x1165C864);
			mm.addFunction(sceSysconBatteryReadNVMFunction, 0x68EF0BEF);
			mm.addFunction(sceSysconBatteryAuthFunction, 0x36E28C5F);
			mm.addFunction(sceSysconCtrlTachyonVoltageFunction, 0x08DA3752);
			mm.addFunction(sceSyscon_driver_9C4E3CA9Function, 0x9C4E3CA9);
			mm.addFunction(sceSysconGetDigitalKeyFunction, 0x34C36FF9);
			mm.addFunction(sceSysconMsOnFunction, 0xB8919D79);
			mm.addFunction(sceSysconMsOffFunction, 0x7BE86143);
			mm.addFunction(sceSysconWlanOnFunction, 0x0E8560F9);
			mm.addFunction(sceSysconWlanOffFunction, 0x1B60C8AD);
			mm.addFunction(sceSyscon_driver_E00BFC9EFunction, 0xE00BFC9E);
			mm.addFunction(sceSyscon_driver_C8D97773Function, 0xC8D97773);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(sceSysconInitFunction);
			mm.removeFunction(sceSysconEndFunction);
			mm.removeFunction(sceSysconSuspendFunction);
			mm.removeFunction(sceSysconResumeFunction);
			mm.removeFunction(sceSysconSetDebugHandlersFunction);
			mm.removeFunction(sceSysconSetPollingModeFunction);
			mm.removeFunction(sceSysconSetLowBatteryCallbackFunction);
			mm.removeFunction(sceSysconSetPowerSwitchCallbackFunction);
			mm.removeFunction(sceSysconSetAlarmCallbackFunction);
			mm.removeFunction(sceSysconSetAcSupplyCallbackFunction);
			mm.removeFunction(sceSysconSetHPConnectCallbackFunction);
			mm.removeFunction(sceSysconSetHRPowerCallbackFunction);
			mm.removeFunction(sceSysconSetWlanSwitchCallbackFunction);
			mm.removeFunction(sceSysconSetWlanPowerCallbackFunction);
			mm.removeFunction(sceSysconSetHoldSwitchCallbackFunction);
			mm.removeFunction(sceSysconSetUmdSwitchCallbackFunction);
			mm.removeFunction(sceSysconCmdExecFunction);
			mm.removeFunction(sceSysconCmdExecAsyncFunction);
			mm.removeFunction(sceSysconCmdCancelFunction);
			mm.removeFunction(sceSysconCmdSyncFunction);
			mm.removeFunction(sceSysconGetBaryonStatusFunction);
			mm.removeFunction(sceSysconIsLowBatteryFunction);
			mm.removeFunction(sceSysconGetPowerSwitchFunction);
			mm.removeFunction(sceSysconIsAlarmedFunction);
			mm.removeFunction(sceSyscon_driver_E20D08FEFunction);
			mm.removeFunction(sceSysconGetHPConnectFunction);
			mm.removeFunction(sceSysconGetWlanSwitchFunction);
			mm.removeFunction(sceSysconGetHoldSwitchFunction);
			mm.removeFunction(sceSysconGetUmdSwitchFunction);
			mm.removeFunction(sceSysconGetHRPowerStatusFunction);
			mm.removeFunction(sceSysconGetWlanPowerStatusFunction);
			mm.removeFunction(sceSysconGetLeptonPowerCtrlFunction);
			mm.removeFunction(sceSysconGetMsPowerCtrlFunction);
			mm.removeFunction(sceSysconGetHRPowerCtrlFunction);
			mm.removeFunction(sceSysconGetWlanPowerCtrlFunction);
			mm.removeFunction(sceSysconGetTachyonVmePowerCtrlFunction);
			mm.removeFunction(sceSysconGetTachyonAwPowerCtrlFunction);
			mm.removeFunction(sceSysconGetTachyonAvcPowerCtrlFunction);
			mm.removeFunction(sceSysconGetLcdPowerCtrlFunction);
			mm.removeFunction(sceSysconGetWlanLedCtrlFunction);
			mm.removeFunction(sceSysconNopFunction);
			mm.removeFunction(sceSysconGetBaryonVersionFunction);
			mm.removeFunction(sceSysconGetTimeStampFunction);
			mm.removeFunction(sceSysconGetTachyonTempFunction);
			mm.removeFunction(sceSysconGetPowerSupplyStatusFunction);
			mm.removeFunction(sceSysconGetWakeUpFactorFunction);
			mm.removeFunction(sceSysconGetWakeUpReqFunction);
			mm.removeFunction(sceSysconReadClockFunction);
			mm.removeFunction(sceSysconWriteClockFunction);
			mm.removeFunction(sceSysconReadAlarmFunction);
			mm.removeFunction(sceSysconWriteAlarmFunction);
			mm.removeFunction(sceSyscon_driver_65EB6096Function);
			mm.removeFunction(sceSyscon_driver_EB277C88Function);
			mm.removeFunction(sceSysconSendSetParamFunction);
			mm.removeFunction(sceSysconReceiveSetParamFunction);
			mm.removeFunction(sceSysconGetTachyonWDTStatusFunction);
			mm.removeFunction(sceSysconCtrlTachyonWDTFunction);
			mm.removeFunction(sceSysconResetDeviceFunction);
			mm.removeFunction(sceSysconCtrlAnalogXYPollingFunction);
			mm.removeFunction(sceSysconCtrlHRPowerFunction);
			mm.removeFunction(sceSysconPowerStandbyFunction);
			mm.removeFunction(sceSysconPowerSuspendFunction);
			mm.removeFunction(sceSysconGetPommelVersionFunction);
			mm.removeFunction(sceSyscon_driver_FB148FB6Function);
			mm.removeFunction(sceSysconCtrlVoltageFunction);
			mm.removeFunction(sceSysconCtrlPowerFunction);
			mm.removeFunction(sceSysconGetPowerStatusFunction);
			mm.removeFunction(sceSysconCtrlLEDFunction);
			mm.removeFunction(sceSysconWritePommelRegFunction);
			mm.removeFunction(sceSysconReadPommelRegFunction);
			mm.removeFunction(sceSysconGetPowerErrorFunction);
			mm.removeFunction(sceSysconCtrlLeptonPowerFunction);
			mm.removeFunction(sceSysconCtrlMsPowerFunction);
			mm.removeFunction(sceSysconCtrlWlanPowerFunction);
			mm.removeFunction(sceSysconCtrlTachyonVmePowerFunction);
			mm.removeFunction(sceSysconCtrlTachyonAwPowerFunction);
			mm.removeFunction(sceSysconCtrlTachyonAvcPowerFunction);
			mm.removeFunction(sceSysconCtrlLcdPowerFunction);
			mm.removeFunction(sceSyscon_driver_806D4D6CFunction);
			mm.removeFunction(sceSyscon_driver_D8471760Function);
			mm.removeFunction(sceSysconPermitChargeBatteryFunction);
			mm.removeFunction(sceSysconForbidChargeBatteryFunction);
			mm.removeFunction(sceSysconBatteryNopFunction);
			mm.removeFunction(sceSysconBatteryGetStatusCapFunction);
			mm.removeFunction(sceSysconBatteryGetTempFunction);
			mm.removeFunction(sceSysconBatteryGetVoltFunction);
			mm.removeFunction(sceSysconBatteryGetElecFunction);
			mm.removeFunction(sceSysconBatteryGetRCapFunction);
			mm.removeFunction(sceSysconBatteryGetCapFunction);
			mm.removeFunction(sceSysconBatteryGetFullCapFunction);
			mm.removeFunction(sceSysconBatteryGetIFCFunction);
			mm.removeFunction(sceSysconBatteryGetLimitTimeFunction);
			mm.removeFunction(sceSysconBatteryGetStatusFunction);
			mm.removeFunction(sceSysconBatteryGetCycleFunction);
			mm.removeFunction(sceSysconBatteryGetSerialFunction);
			mm.removeFunction(sceSysconBatteryGetInfoFunction);
			mm.removeFunction(sceSysconBatteryGetTempADFunction);
			mm.removeFunction(sceSysconBatteryGetVoltADFunction);
			mm.removeFunction(sceSysconBatteryGetElecADFunction);
			mm.removeFunction(sceSysconBatteryGetTotalElecFunction);
			mm.removeFunction(sceSysconBatteryGetChargeTimeFunction);
			mm.removeFunction(sceSysconBatteryWriteNVMFunction);
			mm.removeFunction(sceSysconBatteryReadNVMFunction);
			mm.removeFunction(sceSysconBatteryAuthFunction);
			mm.removeFunction(sceSysconCtrlTachyonVoltageFunction);
			mm.removeFunction(sceSyscon_driver_9C4E3CA9Function);
			mm.removeFunction(sceSysconGetDigitalKeyFunction);
			mm.removeFunction(sceSysconMsOnFunction);
			mm.removeFunction(sceSysconMsOffFunction);
			mm.removeFunction(sceSysconWlanOnFunction);
			mm.removeFunction(sceSysconWlanOffFunction);
			mm.removeFunction(sceSyscon_driver_E00BFC9EFunction);
			mm.removeFunction(sceSyscon_driver_C8D97773Function);
			
		}
	}
	
	
	public void sceSysconInit(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconInit [0x0A771482]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconEnd(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconEnd [0x92D16FC7]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSuspend(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSuspend [0x081826B4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconResume(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconResume [0x56931095]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetDebugHandlers(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetDebugHandlers [0x5EE92F3C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetPollingMode(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetPollingMode [0x5FF1D610]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetLowBatteryCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetLowBatteryCallback [0xAD555CE5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetPowerSwitchCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetPowerSwitchCallback [0xF281805D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetAlarmCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetAlarmCallback [0xA068B3D0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetAcSupplyCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetAcSupplyCallback [0xE540E532]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetHPConnectCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetHPConnectCallback [0xBBFB70C0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetHRPowerCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetHRPowerCallback [0x805180D1]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetWlanSwitchCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetWlanSwitchCallback [0x53072985]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetWlanPowerCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetWlanPowerCallback [0xF9193EC3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetHoldSwitchCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetHoldSwitchCallback [0x7479DB05]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSetUmdSwitchCallback(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSetUmdSwitchCallback [0x6848D817]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCmdExec(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCmdExec [0x5B9ACC97]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCmdExecAsync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCmdExecAsync [0x3AC3D2A4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCmdCancel(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCmdCancel [0x1602ED0D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCmdSync(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCmdSync [0xF350F666]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetBaryonStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetBaryonStatus [0x86D4CAD8]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconIsLowBattery(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconIsLowBattery [0x32CFD20F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetPowerSwitch(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetPowerSwitch [0xEC0DE439]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconIsAlarmed(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconIsAlarmed [0xEA5B9823]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_E20D08FE(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_E20D08FE [0xE20D08FE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetHPConnect(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetHPConnect [0xE0DDFE18]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetWlanSwitch(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetWlanSwitch [0xBDA16E46]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetHoldSwitch(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetHoldSwitch [0xF6BB4649]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetUmdSwitch(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetUmdSwitch [0x138747DE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetHRPowerStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetHRPowerStatus [0x71AE1BCE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetWlanPowerStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetWlanPowerStatus [0x7016161C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetLeptonPowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetLeptonPowerCtrl [0x48AB0E44]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetMsPowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetMsPowerCtrl [0x628F2351]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetHRPowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetHRPowerCtrl [0x3C739F57]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetWlanPowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetWlanPowerCtrl [0xEC37C549]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetTachyonVmePowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetTachyonVmePowerCtrl [0x8DDA4CA6]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetTachyonAwPowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetTachyonAwPowerCtrl [0x52B74B6C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetTachyonAvcPowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetTachyonAvcPowerCtrl [0x1B17D3E3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetLcdPowerCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetLcdPowerCtrl [0x5F19C00F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetWlanLedCtrl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetWlanLedCtrl [0xCC04A978]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconNop(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconNop [0xE6B74CB9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetBaryonVersion(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetBaryonVersion [0x7EC5A957]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetTimeStamp(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetTimeStamp [0x7BCC5EAE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetTachyonTemp(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetTachyonTemp [0x3B657A27]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetPowerSupplyStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetPowerSupplyStatus [0xFC32141A]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetWakeUpFactor(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetWakeUpFactor [0xF775BC34]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetWakeUpReq(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetWakeUpReq [0xA9AEF39F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconReadClock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconReadClock [0xC4D66C1D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconWriteClock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconWriteClock [0xC7634A7A]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconReadAlarm(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconReadAlarm [0x7A805EE4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconWriteAlarm(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconWriteAlarm [0x6C911742]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_65EB6096(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_65EB6096 [0x65EB6096]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_EB277C88(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_EB277C88 [0xEB277C88]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconSendSetParam(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconSendSetParam [0x992C22C2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconReceiveSetParam(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconReceiveSetParam [0x08234E6D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetTachyonWDTStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetTachyonWDTStatus [0x882F0AAB]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlTachyonWDT(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlTachyonWDT [0x2EE82492]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconResetDevice(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconResetDevice [0x8CBC7987]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlAnalogXYPolling(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlAnalogXYPolling [0x00E7B6C2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlHRPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlHRPower [0x44439604]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconPowerStandby(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconPowerStandby [0xC8439C57]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconPowerSuspend(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconPowerSuspend [0x91E183CB]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetPommelVersion(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetPommelVersion [0xE7E87741]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_FB148FB6(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_FB148FB6 [0xFB148FB6]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlVoltage(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlVoltage [0x01677F91]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlPower [0xBE27FE66]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetPowerStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetPowerStatus [0x09721F7F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlLED(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlLED [0x18BFBE65]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconWritePommelReg(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconWritePommelReg [0xD1B501E8]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconReadPommelReg(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconReadPommelReg [0x3DE38336]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetPowerError(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetPowerError [0x2B9E6A06]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlLeptonPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlLeptonPower [0x8A4519F5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlMsPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlMsPower [0x99BBB24C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlWlanPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlWlanPower [0xF0ED3255]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlTachyonVmePower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlTachyonVmePower [0x3C6DB1C5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlTachyonAwPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlTachyonAwPower [0xB2558E37]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlTachyonAvcPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlTachyonAvcPower [0xE5E35721]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlLcdPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlLcdPower [0x9478F399]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_806D4D6C(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_806D4D6C [0x806D4D6C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_D8471760(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_D8471760 [0xD8471760]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconPermitChargeBattery(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconPermitChargeBattery [0xEAB13FBE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconForbidChargeBattery(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconForbidChargeBattery [0xC5075828]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryNop(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryNop [0xE448FD3F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetStatusCap(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetStatusCap [0x6A53F3F8]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetTemp(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetTemp [0x70C10E61]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetVolt(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetVolt [0x8BDEBB1E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetElec(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetElec [0x373EC933]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetRCap(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetRCap [0x82861DE2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetCap(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetCap [0x876CA580]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetFullCap(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetFullCap [0x71135D7D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetIFC(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetIFC [0x7CBD4522]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetLimitTime(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetLimitTime [0x284FE366]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetStatus [0x75025299]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetCycle(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetCycle [0xB5105D51]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetSerial(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetSerial [0xD5340103]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetInfo(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetInfo [0xFA4C4518]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetTempAD(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetTempAD [0xB71B98A8]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetVoltAD(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetVoltAD [0x87671B18]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetElecAD(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetElecAD [0x75D22BF8]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetTotalElec(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetTotalElec [0x4C539345]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryGetChargeTime(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryGetChargeTime [0x4C0EE2FA]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryWriteNVM(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryWriteNVM [0x1165C864]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryReadNVM(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryReadNVM [0x68EF0BEF]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconBatteryAuth(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconBatteryAuth [0x36E28C5F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconCtrlTachyonVoltage(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconCtrlTachyonVoltage [0x08DA3752]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_9C4E3CA9(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_9C4E3CA9 [0x9C4E3CA9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconGetDigitalKey(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconGetDigitalKey [0x34C36FF9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconMsOn(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconMsOn [0xB8919D79]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconMsOff(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconMsOff [0x7BE86143]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconWlanOn(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconWlanOn [0x0E8560F9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSysconWlanOff(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSysconWlanOff [0x1B60C8AD]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_E00BFC9E(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_E00BFC9E [0xE00BFC9E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceSyscon_driver_C8D97773(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceSyscon_driver_C8D97773 [0xC8D97773]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction sceSysconInitFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconInit") {
		@Override
		public final void execute(Processor processor) {
			sceSysconInit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconInit(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconEndFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconEnd") {
		@Override
		public final void execute(Processor processor) {
			sceSysconEnd(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconEnd(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSuspendFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSuspend") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSuspend(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSuspend(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconResumeFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconResume") {
		@Override
		public final void execute(Processor processor) {
			sceSysconResume(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconResume(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetDebugHandlersFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetDebugHandlers") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetDebugHandlers(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetDebugHandlers(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetPollingModeFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetPollingMode") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetPollingMode(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetPollingMode(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetLowBatteryCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetLowBatteryCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetLowBatteryCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetLowBatteryCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetPowerSwitchCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetPowerSwitchCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetPowerSwitchCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetPowerSwitchCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetAlarmCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetAlarmCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetAlarmCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetAlarmCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetAcSupplyCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetAcSupplyCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetAcSupplyCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetAcSupplyCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetHPConnectCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetHPConnectCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetHPConnectCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetHPConnectCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetHRPowerCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetHRPowerCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetHRPowerCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetHRPowerCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetWlanSwitchCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetWlanSwitchCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetWlanSwitchCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetWlanSwitchCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetWlanPowerCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetWlanPowerCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetWlanPowerCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetWlanPowerCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetHoldSwitchCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetHoldSwitchCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetHoldSwitchCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetHoldSwitchCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSetUmdSwitchCallbackFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSetUmdSwitchCallback") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSetUmdSwitchCallback(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSetUmdSwitchCallback(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCmdExecFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdExec") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCmdExec(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCmdExec(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCmdExecAsyncFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdExecAsync") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCmdExecAsync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCmdExecAsync(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCmdCancelFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdCancel") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCmdCancel(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCmdCancel(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCmdSyncFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCmdSync") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCmdSync(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCmdSync(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetBaryonStatusFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetBaryonStatus") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetBaryonStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetBaryonStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconIsLowBatteryFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconIsLowBattery") {
		@Override
		public final void execute(Processor processor) {
			sceSysconIsLowBattery(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconIsLowBattery(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetPowerSwitchFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerSwitch") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetPowerSwitch(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetPowerSwitch(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconIsAlarmedFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconIsAlarmed") {
		@Override
		public final void execute(Processor processor) {
			sceSysconIsAlarmed(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconIsAlarmed(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_E20D08FEFunction = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_E20D08FE") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_E20D08FE(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_E20D08FE(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetHPConnectFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHPConnect") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetHPConnect(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetHPConnect(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetWlanSwitchFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanSwitch") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetWlanSwitch(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetWlanSwitch(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetHoldSwitchFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHoldSwitch") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetHoldSwitch(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetHoldSwitch(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetUmdSwitchFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetUmdSwitch") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetUmdSwitch(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetUmdSwitch(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetHRPowerStatusFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHRPowerStatus") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetHRPowerStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetHRPowerStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetWlanPowerStatusFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanPowerStatus") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetWlanPowerStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetWlanPowerStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetLeptonPowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetLeptonPowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetLeptonPowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetLeptonPowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetMsPowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetMsPowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetMsPowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetMsPowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetHRPowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetHRPowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetHRPowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetHRPowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetWlanPowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanPowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetWlanPowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetWlanPowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetTachyonVmePowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonVmePowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetTachyonVmePowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetTachyonVmePowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetTachyonAwPowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonAwPowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetTachyonAwPowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetTachyonAwPowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetTachyonAvcPowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonAvcPowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetTachyonAvcPowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetTachyonAvcPowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetLcdPowerCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetLcdPowerCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetLcdPowerCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetLcdPowerCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetWlanLedCtrlFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWlanLedCtrl") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetWlanLedCtrl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetWlanLedCtrl(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconNopFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconNop") {
		@Override
		public final void execute(Processor processor) {
			sceSysconNop(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconNop(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetBaryonVersionFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetBaryonVersion") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetBaryonVersion(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetBaryonVersion(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetTimeStampFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTimeStamp") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetTimeStamp(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetTimeStamp(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetTachyonTempFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonTemp") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetTachyonTemp(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetTachyonTemp(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetPowerSupplyStatusFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerSupplyStatus") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetPowerSupplyStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetPowerSupplyStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetWakeUpFactorFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWakeUpFactor") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetWakeUpFactor(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetWakeUpFactor(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetWakeUpReqFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetWakeUpReq") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetWakeUpReq(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetWakeUpReq(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconReadClockFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconReadClock") {
		@Override
		public final void execute(Processor processor) {
			sceSysconReadClock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconReadClock(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconWriteClockFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconWriteClock") {
		@Override
		public final void execute(Processor processor) {
			sceSysconWriteClock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconWriteClock(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconReadAlarmFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconReadAlarm") {
		@Override
		public final void execute(Processor processor) {
			sceSysconReadAlarm(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconReadAlarm(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconWriteAlarmFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconWriteAlarm") {
		@Override
		public final void execute(Processor processor) {
			sceSysconWriteAlarm(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconWriteAlarm(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_65EB6096Function = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_65EB6096") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_65EB6096(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_65EB6096(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_EB277C88Function = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_EB277C88") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_EB277C88(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_EB277C88(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconSendSetParamFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconSendSetParam") {
		@Override
		public final void execute(Processor processor) {
			sceSysconSendSetParam(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconSendSetParam(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconReceiveSetParamFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconReceiveSetParam") {
		@Override
		public final void execute(Processor processor) {
			sceSysconReceiveSetParam(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconReceiveSetParam(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetTachyonWDTStatusFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetTachyonWDTStatus") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetTachyonWDTStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetTachyonWDTStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlTachyonWDTFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonWDT") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlTachyonWDT(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlTachyonWDT(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconResetDeviceFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconResetDevice") {
		@Override
		public final void execute(Processor processor) {
			sceSysconResetDevice(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconResetDevice(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlAnalogXYPollingFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlAnalogXYPolling") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlAnalogXYPolling(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlAnalogXYPolling(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlHRPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlHRPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlHRPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlHRPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconPowerStandbyFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconPowerStandby") {
		@Override
		public final void execute(Processor processor) {
			sceSysconPowerStandby(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconPowerStandby(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconPowerSuspendFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconPowerSuspend") {
		@Override
		public final void execute(Processor processor) {
			sceSysconPowerSuspend(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconPowerSuspend(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetPommelVersionFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPommelVersion") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetPommelVersion(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetPommelVersion(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_FB148FB6Function = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_FB148FB6") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_FB148FB6(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_FB148FB6(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlVoltageFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlVoltage") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlVoltage(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlVoltage(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetPowerStatusFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerStatus") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetPowerStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetPowerStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlLEDFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlLED") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlLED(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlLED(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconWritePommelRegFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconWritePommelReg") {
		@Override
		public final void execute(Processor processor) {
			sceSysconWritePommelReg(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconWritePommelReg(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconReadPommelRegFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconReadPommelReg") {
		@Override
		public final void execute(Processor processor) {
			sceSysconReadPommelReg(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconReadPommelReg(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetPowerErrorFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetPowerError") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetPowerError(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetPowerError(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlLeptonPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlLeptonPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlLeptonPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlLeptonPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlMsPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlMsPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlMsPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlMsPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlWlanPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlWlanPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlWlanPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlWlanPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlTachyonVmePowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonVmePower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlTachyonVmePower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlTachyonVmePower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlTachyonAwPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonAwPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlTachyonAwPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlTachyonAwPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlTachyonAvcPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonAvcPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlTachyonAvcPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlTachyonAvcPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlLcdPowerFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlLcdPower") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlLcdPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlLcdPower(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_806D4D6CFunction = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_806D4D6C") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_806D4D6C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_806D4D6C(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_D8471760Function = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_D8471760") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_D8471760(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_D8471760(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconPermitChargeBatteryFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconPermitChargeBattery") {
		@Override
		public final void execute(Processor processor) {
			sceSysconPermitChargeBattery(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconPermitChargeBattery(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconForbidChargeBatteryFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconForbidChargeBattery") {
		@Override
		public final void execute(Processor processor) {
			sceSysconForbidChargeBattery(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconForbidChargeBattery(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryNopFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryNop") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryNop(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryNop(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetStatusCapFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetStatusCap") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetStatusCap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetStatusCap(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetTempFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetTemp") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetTemp(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetTemp(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetVoltFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetVolt") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetVolt(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetVolt(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetElecFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetElec") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetElec(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetElec(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetRCapFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetRCap") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetRCap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetRCap(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetCapFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetCap") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetCap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetCap(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetFullCapFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetFullCap") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetFullCap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetFullCap(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetIFCFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetIFC") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetIFC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetIFC(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetLimitTimeFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetLimitTime") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetLimitTime(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetLimitTime(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetStatusFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetStatus") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetCycleFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetCycle") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetCycle(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetCycle(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetSerialFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetSerial") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetSerial(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetSerial(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetInfoFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetInfo") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetInfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetInfo(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetTempADFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetTempAD") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetTempAD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetTempAD(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetVoltADFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetVoltAD") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetVoltAD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetVoltAD(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetElecADFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetElecAD") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetElecAD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetElecAD(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetTotalElecFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetTotalElec") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetTotalElec(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetTotalElec(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryGetChargeTimeFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryGetChargeTime") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryGetChargeTime(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryGetChargeTime(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryWriteNVMFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryWriteNVM") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryWriteNVM(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryWriteNVM(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryReadNVMFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryReadNVM") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryReadNVM(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryReadNVM(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconBatteryAuthFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconBatteryAuth") {
		@Override
		public final void execute(Processor processor) {
			sceSysconBatteryAuth(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconBatteryAuth(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconCtrlTachyonVoltageFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconCtrlTachyonVoltage") {
		@Override
		public final void execute(Processor processor) {
			sceSysconCtrlTachyonVoltage(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconCtrlTachyonVoltage(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_9C4E3CA9Function = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_9C4E3CA9") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_9C4E3CA9(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_9C4E3CA9(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconGetDigitalKeyFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconGetDigitalKey") {
		@Override
		public final void execute(Processor processor) {
			sceSysconGetDigitalKey(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconGetDigitalKey(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconMsOnFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconMsOn") {
		@Override
		public final void execute(Processor processor) {
			sceSysconMsOn(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconMsOn(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconMsOffFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconMsOff") {
		@Override
		public final void execute(Processor processor) {
			sceSysconMsOff(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconMsOff(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconWlanOnFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconWlanOn") {
		@Override
		public final void execute(Processor processor) {
			sceSysconWlanOn(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconWlanOn(processor);";
		}
	};
    
	public final HLEModuleFunction sceSysconWlanOffFunction = new HLEModuleFunction("sceSyscon_driver", "sceSysconWlanOff") {
		@Override
		public final void execute(Processor processor) {
			sceSysconWlanOff(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSysconWlanOff(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_E00BFC9EFunction = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_E00BFC9E") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_E00BFC9E(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_E00BFC9E(processor);";
		}
	};
    
	public final HLEModuleFunction sceSyscon_driver_C8D97773Function = new HLEModuleFunction("sceSyscon_driver", "sceSyscon_driver_C8D97773") {
		@Override
		public final void execute(Processor processor) {
			sceSyscon_driver_C8D97773(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceSyscon_driverModule.sceSyscon_driver_C8D97773(processor);";
		}
	};
    
};
