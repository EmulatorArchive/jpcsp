/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class sceVshBridge implements HLEModule {
	@Override
	public String getName() { return "sceVshBridge"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(vshKernelLoadModuleVSHFunction, 0xA5628F0D);
			mm.addFunction(vshKernelLoadModuleVSHByIDFunction, 0x41C54ADF);
			mm.addFunction(vshKernelLoadModuleBufferVSHFunction, 0xC9626587);
			mm.addFunction(vshChkregCheckRegionFunction, 0x5C2983C2);
			mm.addFunction(vshChkregGetPsCodeFunction, 0x61001D64);
			mm.addFunction(sceVshBridge_C949966CFunction, 0xC949966C);
			mm.addFunction(vshMePowerControlAvcPowerFunction, 0x5D4213EA);
			mm.addFunction(vshCtrlReadBufferPositiveFunction, 0xC6395C03);
			mm.addFunction(vshUmdManTermFunction, 0x0163A8E7);
			mm.addFunction(sceVshBridge_7C1658F2Function, 0x7C1658F2);
			mm.addFunction(vshDisplaySetHoldModeFunction, 0x0E10922A);
			mm.addFunction(vshImposeGetStatusFunction, 0xCA719C34);
			mm.addFunction(vshImposeSetStatusFunction, 0x4E4E4DA3);
			mm.addFunction(vshImposeGetParamFunction, 0x639C3CB3);
			mm.addFunction(vshImposeSetParamFunction, 0x4A596D2D);
			mm.addFunction(vshImposeChangesFunction, 0x5894C339);
			mm.addFunction(vshRtcSetConfFunction, 0x0FA48729);
			mm.addFunction(vshRtcSetCurrentTickFunction, 0x16415246);
			mm.addFunction(vshMSAudioFormatICVFunction, 0x5350C073);
			mm.addFunction(vshIoDevctlFunction, 0x2380DC08);
			mm.addFunction(vshIdStorageLookupFunction, 0x4DB43867);
			mm.addFunction(vshAudioSetFrequencyFunction, 0x7B67394E);
			mm.addFunction(vshMSAudioInitFunction, 0xCE32CBEF);
			mm.addFunction(vshMSAudioEndFunction, 0xE5DA5E95);
			mm.addFunction(vshMSAudioAuthFunction, 0x6CAEB765);
			mm.addFunction(vshMSAudioCheckICVFunction, 0x53BFD101);
			mm.addFunction(vshMSAudioCheckICVnFunction, 0xE174218C);
			mm.addFunction(vshMSAudioDeauthFunction, 0x7EA32357);
			mm.addFunction(sceVshBridge_14877197Function, 0x14877197);
			mm.addFunction(sceVshBridge_5BBB35E4Function, 0x5BBB35E4);
			mm.addFunction(sceVshBridge_B27C593FFunction, 0xB27C593F);
			mm.addFunction(sceVshBridge_0D2CEAD2Function, 0x0D2CEAD2);
			mm.addFunction(sceVshBridge_D120667DFunction, 0xD120667D);
			mm.addFunction(sceVshBridge_D907B6AAFunction, 0xD907B6AA);
			mm.addFunction(vshMSAudioInvalidateICVFunction, 0xD46D4528);
			mm.addFunction(sceVshBridge_7A63BE73Function, 0x7A63BE73);
			mm.addFunction(sceVshBridge_222A18C4Function, 0x222A18C4);
			mm.addFunction(sceVshBridge_04310D7CFunction, 0x04310D7C);
			mm.addFunction(vshMSAudioReadMACListFunction, 0x4E61C72E);
			mm.addFunction(vshMSAudioGetInitialEKBFunction, 0xE2DD0A81);
			mm.addFunction(vshMSAudioGetICVInfoFunction, 0x6396ACBD);
			mm.addFunction(vshVaudioOutputBlockingFunction, 0x274BB6AE);
			mm.addFunction(vshVaudioChReserveFunction, 0x8C440581);
			mm.addFunction(vshVaudioChReleaseFunction, 0x07EC5661);
			mm.addFunction(vshAudioSRCOutputBlockingFunction, 0x3B3D9F5D);
			mm.addFunction(vshAudioSRCChReserveFunction, 0xB7F233A2);
			mm.addFunction(vshAudioSRCChReleaseFunction, 0xC58D0939);
			mm.addFunction(vshMeRpcLockFunction, 0xCBDA2613);
			mm.addFunction(vshMeRpcUnlockFunction, 0xA7F0E8E0);
			mm.addFunction(vshKernelLoadExecBufferPlain0Function, 0x98B4117E);
			mm.addFunction(vshKernelLoadExecBufferPlainFunction, 0x8399A8AA);
			mm.addFunction(vshKernelLoadExecFromHostFunction, 0xE614F45F);
			mm.addFunction(vshKernelLoadExecFunction, 0xEEFB02BB);
			mm.addFunction(vshKernelExitVSHFunction, 0x9929DDA5);
			mm.addFunction(vshKernelLoadExecVSHDiscUpdaterFunction, 0xB7C46DCA);
			mm.addFunction(vshKernelLoadExecVSHDiskFunction, 0xF4873F4D);
			mm.addFunction(vshKernelLoadExecBufferVSHUsbWlanFunction, 0x83528906);
			mm.addFunction(vshKernelLoadExecVSHMs1Function, 0xF35BFB7D);
			mm.addFunction(vshKernelLoadExecVSHMs2Function, 0x97FB006F);
			mm.addFunction(vshKernelLoadExecVSHMs3Function, 0x029EF6C9);
			mm.addFunction(vshKernelExitVSHVSHFunction, 0x40716012);
			mm.addFunction(vshKernelLoadExecBufferVSHPlainFunction, 0x88DA81A5);
			mm.addFunction(vshKernelDipswSetFunction, 0xC1D3AE95);
			mm.addFunction(vshKernelDipswClearFunction, 0xD08C1FBE);
			mm.addFunction(vshKernelLoadExecVSHDiscDebugFunction, 0x04AEC74C);
			mm.addFunction(vshKernelLoadExecBufferVSHUsbWlanDebugFunction, 0x68BE3316);
			mm.addFunction(vshKernelLoadExecBufferVSHFromHostFunction, 0x88BD8364);
			mm.addFunction(vshLflashFatfmtStartFatfmtFunction, 0x74DA9D25);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(vshKernelLoadModuleVSHFunction);
			mm.removeFunction(vshKernelLoadModuleVSHByIDFunction);
			mm.removeFunction(vshKernelLoadModuleBufferVSHFunction);
			mm.removeFunction(vshChkregCheckRegionFunction);
			mm.removeFunction(vshChkregGetPsCodeFunction);
			mm.removeFunction(sceVshBridge_C949966CFunction);
			mm.removeFunction(vshMePowerControlAvcPowerFunction);
			mm.removeFunction(vshCtrlReadBufferPositiveFunction);
			mm.removeFunction(vshUmdManTermFunction);
			mm.removeFunction(sceVshBridge_7C1658F2Function);
			mm.removeFunction(vshDisplaySetHoldModeFunction);
			mm.removeFunction(vshImposeGetStatusFunction);
			mm.removeFunction(vshImposeSetStatusFunction);
			mm.removeFunction(vshImposeGetParamFunction);
			mm.removeFunction(vshImposeSetParamFunction);
			mm.removeFunction(vshImposeChangesFunction);
			mm.removeFunction(vshRtcSetConfFunction);
			mm.removeFunction(vshRtcSetCurrentTickFunction);
			mm.removeFunction(vshMSAudioFormatICVFunction);
			mm.removeFunction(vshIoDevctlFunction);
			mm.removeFunction(vshIdStorageLookupFunction);
			mm.removeFunction(vshAudioSetFrequencyFunction);
			mm.removeFunction(vshMSAudioInitFunction);
			mm.removeFunction(vshMSAudioEndFunction);
			mm.removeFunction(vshMSAudioAuthFunction);
			mm.removeFunction(vshMSAudioCheckICVFunction);
			mm.removeFunction(vshMSAudioCheckICVnFunction);
			mm.removeFunction(vshMSAudioDeauthFunction);
			mm.removeFunction(sceVshBridge_14877197Function);
			mm.removeFunction(sceVshBridge_5BBB35E4Function);
			mm.removeFunction(sceVshBridge_B27C593FFunction);
			mm.removeFunction(sceVshBridge_0D2CEAD2Function);
			mm.removeFunction(sceVshBridge_D120667DFunction);
			mm.removeFunction(sceVshBridge_D907B6AAFunction);
			mm.removeFunction(vshMSAudioInvalidateICVFunction);
			mm.removeFunction(sceVshBridge_7A63BE73Function);
			mm.removeFunction(sceVshBridge_222A18C4Function);
			mm.removeFunction(sceVshBridge_04310D7CFunction);
			mm.removeFunction(vshMSAudioReadMACListFunction);
			mm.removeFunction(vshMSAudioGetInitialEKBFunction);
			mm.removeFunction(vshMSAudioGetICVInfoFunction);
			mm.removeFunction(vshVaudioOutputBlockingFunction);
			mm.removeFunction(vshVaudioChReserveFunction);
			mm.removeFunction(vshVaudioChReleaseFunction);
			mm.removeFunction(vshAudioSRCOutputBlockingFunction);
			mm.removeFunction(vshAudioSRCChReserveFunction);
			mm.removeFunction(vshAudioSRCChReleaseFunction);
			mm.removeFunction(vshMeRpcLockFunction);
			mm.removeFunction(vshMeRpcUnlockFunction);
			mm.removeFunction(vshKernelLoadExecBufferPlain0Function);
			mm.removeFunction(vshKernelLoadExecBufferPlainFunction);
			mm.removeFunction(vshKernelLoadExecFromHostFunction);
			mm.removeFunction(vshKernelLoadExecFunction);
			mm.removeFunction(vshKernelExitVSHFunction);
			mm.removeFunction(vshKernelLoadExecVSHDiscUpdaterFunction);
			mm.removeFunction(vshKernelLoadExecVSHDiskFunction);
			mm.removeFunction(vshKernelLoadExecBufferVSHUsbWlanFunction);
			mm.removeFunction(vshKernelLoadExecVSHMs1Function);
			mm.removeFunction(vshKernelLoadExecVSHMs2Function);
			mm.removeFunction(vshKernelLoadExecVSHMs3Function);
			mm.removeFunction(vshKernelExitVSHVSHFunction);
			mm.removeFunction(vshKernelLoadExecBufferVSHPlainFunction);
			mm.removeFunction(vshKernelDipswSetFunction);
			mm.removeFunction(vshKernelDipswClearFunction);
			mm.removeFunction(vshKernelLoadExecVSHDiscDebugFunction);
			mm.removeFunction(vshKernelLoadExecBufferVSHUsbWlanDebugFunction);
			mm.removeFunction(vshKernelLoadExecBufferVSHFromHostFunction);
			mm.removeFunction(vshLflashFatfmtStartFatfmtFunction);
			
		}
	}
	
	
	public void vshKernelLoadModuleVSH(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadModuleVSH [0xA5628F0D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadModuleVSHByID(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadModuleVSHByID [0x41C54ADF]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadModuleBufferVSH(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadModuleBufferVSH [0xC9626587]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshChkregCheckRegion(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshChkregCheckRegion [0x5C2983C2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshChkregGetPsCode(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshChkregGetPsCode [0x61001D64]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_C949966C(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_C949966C [0xC949966C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMePowerControlAvcPower(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMePowerControlAvcPower [0x5D4213EA]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshCtrlReadBufferPositive(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshCtrlReadBufferPositive [0xC6395C03]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshUmdManTerm(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshUmdManTerm [0x0163A8E7]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_7C1658F2(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_7C1658F2 [0x7C1658F2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshDisplaySetHoldMode(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshDisplaySetHoldMode [0x0E10922A]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshImposeGetStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshImposeGetStatus [0xCA719C34]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshImposeSetStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshImposeSetStatus [0x4E4E4DA3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshImposeGetParam(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshImposeGetParam [0x639C3CB3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshImposeSetParam(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshImposeSetParam [0x4A596D2D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshImposeChanges(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshImposeChanges [0x5894C339]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshRtcSetConf(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshRtcSetConf [0x0FA48729]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshRtcSetCurrentTick(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshRtcSetCurrentTick [0x16415246]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioFormatICV(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioFormatICV [0x5350C073]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshIoDevctl(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshIoDevctl [0x2380DC08]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshIdStorageLookup(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshIdStorageLookup [0x4DB43867]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshAudioSetFrequency(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshAudioSetFrequency [0x7B67394E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioInit(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioInit [0xCE32CBEF]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioEnd(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioEnd [0xE5DA5E95]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioAuth(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioAuth [0x6CAEB765]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioCheckICV(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioCheckICV [0x53BFD101]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioCheckICVn(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioCheckICVn [0xE174218C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioDeauth(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioDeauth [0x7EA32357]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_14877197(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_14877197 [0x14877197]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_5BBB35E4(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_5BBB35E4 [0x5BBB35E4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_B27C593F(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_B27C593F [0xB27C593F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_0D2CEAD2(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_0D2CEAD2 [0x0D2CEAD2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_D120667D(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_D120667D [0xD120667D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_D907B6AA(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_D907B6AA [0xD907B6AA]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioInvalidateICV(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioInvalidateICV [0xD46D4528]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_7A63BE73(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_7A63BE73 [0x7A63BE73]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_222A18C4(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_222A18C4 [0x222A18C4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceVshBridge_04310D7C(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceVshBridge_04310D7C [0x04310D7C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioReadMACList(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioReadMACList [0x4E61C72E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioGetInitialEKB(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioGetInitialEKB [0xE2DD0A81]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMSAudioGetICVInfo(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMSAudioGetICVInfo [0x6396ACBD]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshVaudioOutputBlocking(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshVaudioOutputBlocking [0x274BB6AE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshVaudioChReserve(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshVaudioChReserve [0x8C440581]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshVaudioChRelease(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshVaudioChRelease [0x07EC5661]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshAudioSRCOutputBlocking(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshAudioSRCOutputBlocking [0x3B3D9F5D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshAudioSRCChReserve(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshAudioSRCChReserve [0xB7F233A2]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshAudioSRCChRelease(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshAudioSRCChRelease [0xC58D0939]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMeRpcLock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMeRpcLock [0xCBDA2613]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshMeRpcUnlock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshMeRpcUnlock [0xA7F0E8E0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecBufferPlain0(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecBufferPlain0 [0x98B4117E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecBufferPlain(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecBufferPlain [0x8399A8AA]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecFromHost(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecFromHost [0xE614F45F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExec(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExec [0xEEFB02BB]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelExitVSH(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelExitVSH [0x9929DDA5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecVSHDiscUpdater(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecVSHDiscUpdater [0xB7C46DCA]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecVSHDisk(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecVSHDisk [0xF4873F4D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecBufferVSHUsbWlan(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecBufferVSHUsbWlan [0x83528906]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecVSHMs1(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecVSHMs1 [0xF35BFB7D]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecVSHMs2(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecVSHMs2 [0x97FB006F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecVSHMs3(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecVSHMs3 [0x029EF6C9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelExitVSHVSH(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelExitVSHVSH [0x40716012]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecBufferVSHPlain(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecBufferVSHPlain [0x88DA81A5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelDipswSet(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelDipswSet [0xC1D3AE95]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelDipswClear(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelDipswClear [0xD08C1FBE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecVSHDiscDebug(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecVSHDiscDebug [0x04AEC74C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecBufferVSHUsbWlanDebug(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecBufferVSHUsbWlanDebug [0x68BE3316]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshKernelLoadExecBufferVSHFromHost(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshKernelLoadExecBufferVSHFromHost [0x88BD8364]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void vshLflashFatfmtStartFatfmt(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function vshLflashFatfmtStartFatfmt [0x74DA9D25]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction vshKernelLoadModuleVSHFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadModuleVSH") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadModuleVSH(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadModuleVSH(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadModuleVSHByIDFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadModuleVSHByID") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadModuleVSHByID(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadModuleVSHByID(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadModuleBufferVSHFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadModuleBufferVSH") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadModuleBufferVSH(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadModuleBufferVSH(processor);";
		}
	};
    
	public final HLEModuleFunction vshChkregCheckRegionFunction = new HLEModuleFunction("sceVshBridge", "vshChkregCheckRegion") {
		@Override
		public final void execute(Processor processor) {
			vshChkregCheckRegion(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshChkregCheckRegion(processor);";
		}
	};
    
	public final HLEModuleFunction vshChkregGetPsCodeFunction = new HLEModuleFunction("sceVshBridge", "vshChkregGetPsCode") {
		@Override
		public final void execute(Processor processor) {
			vshChkregGetPsCode(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshChkregGetPsCode(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_C949966CFunction = new HLEModuleFunction("sceVshBridge", "sceVshBridge_C949966C") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_C949966C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_C949966C(processor);";
		}
	};
    
	public final HLEModuleFunction vshMePowerControlAvcPowerFunction = new HLEModuleFunction("sceVshBridge", "vshMePowerControlAvcPower") {
		@Override
		public final void execute(Processor processor) {
			vshMePowerControlAvcPower(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMePowerControlAvcPower(processor);";
		}
	};
    
	public final HLEModuleFunction vshCtrlReadBufferPositiveFunction = new HLEModuleFunction("sceVshBridge", "vshCtrlReadBufferPositive") {
		@Override
		public final void execute(Processor processor) {
			vshCtrlReadBufferPositive(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshCtrlReadBufferPositive(processor);";
		}
	};
    
	public final HLEModuleFunction vshUmdManTermFunction = new HLEModuleFunction("sceVshBridge", "vshUmdManTerm") {
		@Override
		public final void execute(Processor processor) {
			vshUmdManTerm(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshUmdManTerm(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_7C1658F2Function = new HLEModuleFunction("sceVshBridge", "sceVshBridge_7C1658F2") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_7C1658F2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_7C1658F2(processor);";
		}
	};
    
	public final HLEModuleFunction vshDisplaySetHoldModeFunction = new HLEModuleFunction("sceVshBridge", "vshDisplaySetHoldMode") {
		@Override
		public final void execute(Processor processor) {
			vshDisplaySetHoldMode(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshDisplaySetHoldMode(processor);";
		}
	};
    
	public final HLEModuleFunction vshImposeGetStatusFunction = new HLEModuleFunction("sceVshBridge", "vshImposeGetStatus") {
		@Override
		public final void execute(Processor processor) {
			vshImposeGetStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshImposeGetStatus(processor);";
		}
	};
    
	public final HLEModuleFunction vshImposeSetStatusFunction = new HLEModuleFunction("sceVshBridge", "vshImposeSetStatus") {
		@Override
		public final void execute(Processor processor) {
			vshImposeSetStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshImposeSetStatus(processor);";
		}
	};
    
	public final HLEModuleFunction vshImposeGetParamFunction = new HLEModuleFunction("sceVshBridge", "vshImposeGetParam") {
		@Override
		public final void execute(Processor processor) {
			vshImposeGetParam(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshImposeGetParam(processor);";
		}
	};
    
	public final HLEModuleFunction vshImposeSetParamFunction = new HLEModuleFunction("sceVshBridge", "vshImposeSetParam") {
		@Override
		public final void execute(Processor processor) {
			vshImposeSetParam(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshImposeSetParam(processor);";
		}
	};
    
	public final HLEModuleFunction vshImposeChangesFunction = new HLEModuleFunction("sceVshBridge", "vshImposeChanges") {
		@Override
		public final void execute(Processor processor) {
			vshImposeChanges(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshImposeChanges(processor);";
		}
	};
    
	public final HLEModuleFunction vshRtcSetConfFunction = new HLEModuleFunction("sceVshBridge", "vshRtcSetConf") {
		@Override
		public final void execute(Processor processor) {
			vshRtcSetConf(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshRtcSetConf(processor);";
		}
	};
    
	public final HLEModuleFunction vshRtcSetCurrentTickFunction = new HLEModuleFunction("sceVshBridge", "vshRtcSetCurrentTick") {
		@Override
		public final void execute(Processor processor) {
			vshRtcSetCurrentTick(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshRtcSetCurrentTick(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioFormatICVFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioFormatICV") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioFormatICV(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioFormatICV(processor);";
		}
	};
    
	public final HLEModuleFunction vshIoDevctlFunction = new HLEModuleFunction("sceVshBridge", "vshIoDevctl") {
		@Override
		public final void execute(Processor processor) {
			vshIoDevctl(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshIoDevctl(processor);";
		}
	};
    
	public final HLEModuleFunction vshIdStorageLookupFunction = new HLEModuleFunction("sceVshBridge", "vshIdStorageLookup") {
		@Override
		public final void execute(Processor processor) {
			vshIdStorageLookup(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshIdStorageLookup(processor);";
		}
	};
    
	public final HLEModuleFunction vshAudioSetFrequencyFunction = new HLEModuleFunction("sceVshBridge", "vshAudioSetFrequency") {
		@Override
		public final void execute(Processor processor) {
			vshAudioSetFrequency(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshAudioSetFrequency(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioInitFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioInit") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioInit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioInit(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioEndFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioEnd") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioEnd(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioEnd(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioAuthFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioAuth") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioAuth(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioAuth(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioCheckICVFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioCheckICV") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioCheckICV(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioCheckICV(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioCheckICVnFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioCheckICVn") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioCheckICVn(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioCheckICVn(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioDeauthFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioDeauth") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioDeauth(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioDeauth(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_14877197Function = new HLEModuleFunction("sceVshBridge", "sceVshBridge_14877197") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_14877197(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_14877197(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_5BBB35E4Function = new HLEModuleFunction("sceVshBridge", "sceVshBridge_5BBB35E4") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_5BBB35E4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_5BBB35E4(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_B27C593FFunction = new HLEModuleFunction("sceVshBridge", "sceVshBridge_B27C593F") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_B27C593F(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_B27C593F(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_0D2CEAD2Function = new HLEModuleFunction("sceVshBridge", "sceVshBridge_0D2CEAD2") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_0D2CEAD2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_0D2CEAD2(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_D120667DFunction = new HLEModuleFunction("sceVshBridge", "sceVshBridge_D120667D") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_D120667D(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_D120667D(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_D907B6AAFunction = new HLEModuleFunction("sceVshBridge", "sceVshBridge_D907B6AA") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_D907B6AA(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_D907B6AA(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioInvalidateICVFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioInvalidateICV") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioInvalidateICV(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioInvalidateICV(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_7A63BE73Function = new HLEModuleFunction("sceVshBridge", "sceVshBridge_7A63BE73") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_7A63BE73(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_7A63BE73(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_222A18C4Function = new HLEModuleFunction("sceVshBridge", "sceVshBridge_222A18C4") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_222A18C4(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_222A18C4(processor);";
		}
	};
    
	public final HLEModuleFunction sceVshBridge_04310D7CFunction = new HLEModuleFunction("sceVshBridge", "sceVshBridge_04310D7C") {
		@Override
		public final void execute(Processor processor) {
			sceVshBridge_04310D7C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.sceVshBridge_04310D7C(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioReadMACListFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioReadMACList") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioReadMACList(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioReadMACList(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioGetInitialEKBFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioGetInitialEKB") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioGetInitialEKB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioGetInitialEKB(processor);";
		}
	};
    
	public final HLEModuleFunction vshMSAudioGetICVInfoFunction = new HLEModuleFunction("sceVshBridge", "vshMSAudioGetICVInfo") {
		@Override
		public final void execute(Processor processor) {
			vshMSAudioGetICVInfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMSAudioGetICVInfo(processor);";
		}
	};
    
	public final HLEModuleFunction vshVaudioOutputBlockingFunction = new HLEModuleFunction("sceVshBridge", "vshVaudioOutputBlocking") {
		@Override
		public final void execute(Processor processor) {
			vshVaudioOutputBlocking(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshVaudioOutputBlocking(processor);";
		}
	};
    
	public final HLEModuleFunction vshVaudioChReserveFunction = new HLEModuleFunction("sceVshBridge", "vshVaudioChReserve") {
		@Override
		public final void execute(Processor processor) {
			vshVaudioChReserve(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshVaudioChReserve(processor);";
		}
	};
    
	public final HLEModuleFunction vshVaudioChReleaseFunction = new HLEModuleFunction("sceVshBridge", "vshVaudioChRelease") {
		@Override
		public final void execute(Processor processor) {
			vshVaudioChRelease(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshVaudioChRelease(processor);";
		}
	};
    
	public final HLEModuleFunction vshAudioSRCOutputBlockingFunction = new HLEModuleFunction("sceVshBridge", "vshAudioSRCOutputBlocking") {
		@Override
		public final void execute(Processor processor) {
			vshAudioSRCOutputBlocking(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshAudioSRCOutputBlocking(processor);";
		}
	};
    
	public final HLEModuleFunction vshAudioSRCChReserveFunction = new HLEModuleFunction("sceVshBridge", "vshAudioSRCChReserve") {
		@Override
		public final void execute(Processor processor) {
			vshAudioSRCChReserve(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshAudioSRCChReserve(processor);";
		}
	};
    
	public final HLEModuleFunction vshAudioSRCChReleaseFunction = new HLEModuleFunction("sceVshBridge", "vshAudioSRCChRelease") {
		@Override
		public final void execute(Processor processor) {
			vshAudioSRCChRelease(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshAudioSRCChRelease(processor);";
		}
	};
    
	public final HLEModuleFunction vshMeRpcLockFunction = new HLEModuleFunction("sceVshBridge", "vshMeRpcLock") {
		@Override
		public final void execute(Processor processor) {
			vshMeRpcLock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMeRpcLock(processor);";
		}
	};
    
	public final HLEModuleFunction vshMeRpcUnlockFunction = new HLEModuleFunction("sceVshBridge", "vshMeRpcUnlock") {
		@Override
		public final void execute(Processor processor) {
			vshMeRpcUnlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshMeRpcUnlock(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecBufferPlain0Function = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecBufferPlain0") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecBufferPlain0(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecBufferPlain0(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecBufferPlainFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecBufferPlain") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecBufferPlain(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecBufferPlain(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecFromHostFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecFromHost") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecFromHost(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecFromHost(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExec") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExec(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExec(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelExitVSHFunction = new HLEModuleFunction("sceVshBridge", "vshKernelExitVSH") {
		@Override
		public final void execute(Processor processor) {
			vshKernelExitVSH(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelExitVSH(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecVSHDiscUpdaterFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecVSHDiscUpdater") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecVSHDiscUpdater(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecVSHDiscUpdater(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecVSHDiskFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecVSHDisk") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecVSHDisk(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecVSHDisk(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecBufferVSHUsbWlanFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecBufferVSHUsbWlan") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecBufferVSHUsbWlan(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecBufferVSHUsbWlan(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecVSHMs1Function = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecVSHMs1") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecVSHMs1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecVSHMs1(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecVSHMs2Function = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecVSHMs2") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecVSHMs2(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecVSHMs2(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecVSHMs3Function = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecVSHMs3") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecVSHMs3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecVSHMs3(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelExitVSHVSHFunction = new HLEModuleFunction("sceVshBridge", "vshKernelExitVSHVSH") {
		@Override
		public final void execute(Processor processor) {
			vshKernelExitVSHVSH(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelExitVSHVSH(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecBufferVSHPlainFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecBufferVSHPlain") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecBufferVSHPlain(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecBufferVSHPlain(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelDipswSetFunction = new HLEModuleFunction("sceVshBridge", "vshKernelDipswSet") {
		@Override
		public final void execute(Processor processor) {
			vshKernelDipswSet(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelDipswSet(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelDipswClearFunction = new HLEModuleFunction("sceVshBridge", "vshKernelDipswClear") {
		@Override
		public final void execute(Processor processor) {
			vshKernelDipswClear(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelDipswClear(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecVSHDiscDebugFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecVSHDiscDebug") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecVSHDiscDebug(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecVSHDiscDebug(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecBufferVSHUsbWlanDebugFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecBufferVSHUsbWlanDebug") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecBufferVSHUsbWlanDebug(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecBufferVSHUsbWlanDebug(processor);";
		}
	};
    
	public final HLEModuleFunction vshKernelLoadExecBufferVSHFromHostFunction = new HLEModuleFunction("sceVshBridge", "vshKernelLoadExecBufferVSHFromHost") {
		@Override
		public final void execute(Processor processor) {
			vshKernelLoadExecBufferVSHFromHost(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshKernelLoadExecBufferVSHFromHost(processor);";
		}
	};
    
	public final HLEModuleFunction vshLflashFatfmtStartFatfmtFunction = new HLEModuleFunction("sceVshBridge", "vshLflashFatfmtStartFatfmt") {
		@Override
		public final void execute(Processor processor) {
			vshLflashFatfmtStartFatfmt(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.sceVshBridgeModule.vshLflashFatfmtStartFatfmt(processor);";
		}
	};
    
};
