/* This autogenerated file is part of jpcsp. */
/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

package jpcsp.HLE.modules150;

import jpcsp.HLE.Modules;
import jpcsp.HLE.modules.HLEModule;
import jpcsp.HLE.modules.HLEModuleFunction;
import jpcsp.HLE.modules.HLEModuleManager;

import jpcsp.Memory;
import jpcsp.Processor;

import jpcsp.Allegrex.CpuState; // New-Style Processor

public class SysMemForKernel implements HLEModule {
	@Override
	public String getName() { return "SysMemForKernel"; }
	
	@Override
	public void installModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.addFunction(sceKernelCreateHeapFunction, 0x1C1FBFE7);
			mm.addFunction(sceKernelDeleteHeapFunction, 0xC9805775);
			mm.addFunction(sceKernelAllocHeapMemoryWithOptionFunction, 0xEB7A74DB);
			mm.addFunction(sceKernelAllocHeapMemoryFunction, 0x636C953B);
			mm.addFunction(sceKernelFreeHeapMemoryFunction, 0x7B749390);
			mm.addFunction(sceKernelHeapTotalFreeSizeFunction, 0xA823047E);
			mm.addFunction(sceKernelGetHeapTypeCBFunction, 0xB2163AA1);
			mm.addFunction(SysMemForKernel_EFF0C6DDFunction, 0xEFF0C6DD);
			mm.addFunction(SysMemForKernel_EFEEBAC7Function, 0xEFEEBAC7);
			mm.addFunction(sceKernelIsValidHeapFunction, 0x2DB687E9);
			mm.addFunction(sceKernelQueryMemoryPartitionInfoFunction, 0x55A40B2C);
			mm.addFunction(sceKernelPartitionMaxFreeMemSizeFunction, 0xE6581468);
			mm.addFunction(sceKernelPartitionTotalFreeMemSizeFunction, 0x9697CD32);
			mm.addFunction(sceKernelFillFreeBlockFunction, 0xA2A65F0E);
			mm.addFunction(sceKernelAllocPartitionMemoryFunction, 0x237DBD4F);
			mm.addFunction(sceKernelSizeLockMemoryBlockFunction, 0xEE867074);
			mm.addFunction(sceKernelResizeMemoryBlockFunction, 0xCE5544F4);
			mm.addFunction(sceKernelJointMemoryBlockFunction, 0x5EBE73DE);
			mm.addFunction(SysMemForKernel_915EF4ACFunction, 0x915EF4AC);
			mm.addFunction(sceKernelFreePartitionMemoryFunction, 0xB6D61D02);
			mm.addFunction(sceKernelQueryMemoryInfoFunction, 0x2A3E5280);
			mm.addFunction(sceKernelQueryBlockSizeFunction, 0xEB4C0E1B);
			mm.addFunction(sceKernelQueryMemoryBlockInfoFunction, 0x82CCA14F);
			mm.addFunction(sceKernelGetBlockHeadAddrFunction, 0x9D9A5BA1);
			mm.addFunction(SysMemForKernel_2F3B7611Function, 0x2F3B7611);
			mm.addFunction(sceKernelMemoryExtendSizeFunction, 0x7B3E7441);
			mm.addFunction(sceKernelSetDdrMemoryProtectionFunction, 0xB2C7AA36);
			mm.addFunction(sceKernelCallUIDFunctionFunction, 0x6C1DCD41);
			mm.addFunction(sceKernelCallUIDObjFunctionFunction, 0x5367923C);
			mm.addFunction(SysMemForKernel_CE05CCB7Function, 0xCE05CCB7);
			mm.addFunction(sceKernelLookupUIDFunctionFunction, 0x6CD838EC);
			mm.addFunction(sceKernelCreateUIDtypeInheritFunction, 0xAD09C397);
			mm.addFunction(sceKernelCreateUIDtypeFunction, 0xFEFC8666);
			mm.addFunction(sceKernelDeleteUIDtypeFunction, 0xD1BAB054);
			mm.addFunction(sceKernelGetUIDnameFunction, 0x1C221A08);
			mm.addFunction(sceKernelRenameUIDFunction, 0x2E3402CC);
			mm.addFunction(sceKernelGetUIDtypeFunction, 0x39357F07);
			mm.addFunction(sceKernelCreateUIDFunction, 0x89A74008);
			mm.addFunction(sceKernelDeleteUIDFunction, 0x8F20C4C0);
			mm.addFunction(sceKernelSearchUIDbyNameFunction, 0x55BFD686);
			mm.addFunction(sceKernelGetUIDcontrolBlockFunction, 0xCF4DE78C);
			mm.addFunction(sceKernelGetUIDcontrolBlockWithTypeFunction, 0x41FFC7F9);
			mm.addFunction(SysMemForKernel_82D3CEE3Function, 0x82D3CEE3);
			mm.addFunction(SysMemForKernel_FC207849Function, 0xFC207849);
			mm.addFunction(SysMemForKernel_536AD5E1Function, 0x536AD5E1);
			mm.addFunction(sceKernelIsHoldFunction, 0xDFAEBD5B);
			mm.addFunction(sceKernelHoldUIDFunction, 0x7BE95FA0);
			mm.addFunction(sceKernelReleaseUIDFunction, 0xFE8DEBE0);
			mm.addFunction(sceKernelSysmemIsValidAccessFunction, 0xBD5941B4);
			mm.addFunction(sceKernelIsValidUserAccessFunction, 0x80F25772);
			mm.addFunction(sceKernelSysMemCheckCtlBlkFunction, 0x3905D956);
			mm.addFunction(sceKernelSysMemDumpFunction, 0x26F96157);
			mm.addFunction(sceKernelSysMemDumpBlockFunction, 0x6D6200DD);
			mm.addFunction(sceKernelSysMemDumpTailFunction, 0x621037F5);
			mm.addFunction(sceKernelMemsetFunction, 0xA089ECA4);
			mm.addFunction(sceKernelMemset32Function, 0x2F808748);
			mm.addFunction(sceKernelMemmoveFunction, 0x1C4B1713);
			mm.addFunction(sceKernelSysMemInitFunction, 0xE400FDB0);
			mm.addFunction(sceKernelSysMemMemSizeFunction, 0x1890BE9C);
			mm.addFunction(sceKernelSysMemMaxFreeMemSizeFunction, 0x03072750);
			mm.addFunction(sceKernelSysMemTotalFreeMemSizeFunction, 0x811BED79);
			mm.addFunction(sceKernelGetSysMemoryInfoFunction, 0xF6C10E27);
			mm.addFunction(SysMemForKernel_CDA3A2F7Function, 0xCDA3A2F7);
			mm.addFunction(SysMemForKernel_960B888CFunction, 0x960B888C);
			mm.addFunction(sceKernelDevkitVersionFunction, 0x3FC9AE6A);
			mm.addFunction(sceKernelGetSystemStatusFunction, 0x452E3696);
			mm.addFunction(sceKernelSetSystemStatusFunction, 0x95F5E8DA);
			
		}
	}
	
	@Override
	public void uninstallModule(HLEModuleManager mm, int version) {
		if (version >= 150) {
		
			mm.removeFunction(sceKernelCreateHeapFunction);
			mm.removeFunction(sceKernelDeleteHeapFunction);
			mm.removeFunction(sceKernelAllocHeapMemoryWithOptionFunction);
			mm.removeFunction(sceKernelAllocHeapMemoryFunction);
			mm.removeFunction(sceKernelFreeHeapMemoryFunction);
			mm.removeFunction(sceKernelHeapTotalFreeSizeFunction);
			mm.removeFunction(sceKernelGetHeapTypeCBFunction);
			mm.removeFunction(SysMemForKernel_EFF0C6DDFunction);
			mm.removeFunction(SysMemForKernel_EFEEBAC7Function);
			mm.removeFunction(sceKernelIsValidHeapFunction);
			mm.removeFunction(sceKernelQueryMemoryPartitionInfoFunction);
			mm.removeFunction(sceKernelPartitionMaxFreeMemSizeFunction);
			mm.removeFunction(sceKernelPartitionTotalFreeMemSizeFunction);
			mm.removeFunction(sceKernelFillFreeBlockFunction);
			mm.removeFunction(sceKernelAllocPartitionMemoryFunction);
			mm.removeFunction(sceKernelSizeLockMemoryBlockFunction);
			mm.removeFunction(sceKernelResizeMemoryBlockFunction);
			mm.removeFunction(sceKernelJointMemoryBlockFunction);
			mm.removeFunction(SysMemForKernel_915EF4ACFunction);
			mm.removeFunction(sceKernelFreePartitionMemoryFunction);
			mm.removeFunction(sceKernelQueryMemoryInfoFunction);
			mm.removeFunction(sceKernelQueryBlockSizeFunction);
			mm.removeFunction(sceKernelQueryMemoryBlockInfoFunction);
			mm.removeFunction(sceKernelGetBlockHeadAddrFunction);
			mm.removeFunction(SysMemForKernel_2F3B7611Function);
			mm.removeFunction(sceKernelMemoryExtendSizeFunction);
			mm.removeFunction(sceKernelSetDdrMemoryProtectionFunction);
			mm.removeFunction(sceKernelCallUIDFunctionFunction);
			mm.removeFunction(sceKernelCallUIDObjFunctionFunction);
			mm.removeFunction(SysMemForKernel_CE05CCB7Function);
			mm.removeFunction(sceKernelLookupUIDFunctionFunction);
			mm.removeFunction(sceKernelCreateUIDtypeInheritFunction);
			mm.removeFunction(sceKernelCreateUIDtypeFunction);
			mm.removeFunction(sceKernelDeleteUIDtypeFunction);
			mm.removeFunction(sceKernelGetUIDnameFunction);
			mm.removeFunction(sceKernelRenameUIDFunction);
			mm.removeFunction(sceKernelGetUIDtypeFunction);
			mm.removeFunction(sceKernelCreateUIDFunction);
			mm.removeFunction(sceKernelDeleteUIDFunction);
			mm.removeFunction(sceKernelSearchUIDbyNameFunction);
			mm.removeFunction(sceKernelGetUIDcontrolBlockFunction);
			mm.removeFunction(sceKernelGetUIDcontrolBlockWithTypeFunction);
			mm.removeFunction(SysMemForKernel_82D3CEE3Function);
			mm.removeFunction(SysMemForKernel_FC207849Function);
			mm.removeFunction(SysMemForKernel_536AD5E1Function);
			mm.removeFunction(sceKernelIsHoldFunction);
			mm.removeFunction(sceKernelHoldUIDFunction);
			mm.removeFunction(sceKernelReleaseUIDFunction);
			mm.removeFunction(sceKernelSysmemIsValidAccessFunction);
			mm.removeFunction(sceKernelIsValidUserAccessFunction);
			mm.removeFunction(sceKernelSysMemCheckCtlBlkFunction);
			mm.removeFunction(sceKernelSysMemDumpFunction);
			mm.removeFunction(sceKernelSysMemDumpBlockFunction);
			mm.removeFunction(sceKernelSysMemDumpTailFunction);
			mm.removeFunction(sceKernelMemsetFunction);
			mm.removeFunction(sceKernelMemset32Function);
			mm.removeFunction(sceKernelMemmoveFunction);
			mm.removeFunction(sceKernelSysMemInitFunction);
			mm.removeFunction(sceKernelSysMemMemSizeFunction);
			mm.removeFunction(sceKernelSysMemMaxFreeMemSizeFunction);
			mm.removeFunction(sceKernelSysMemTotalFreeMemSizeFunction);
			mm.removeFunction(sceKernelGetSysMemoryInfoFunction);
			mm.removeFunction(SysMemForKernel_CDA3A2F7Function);
			mm.removeFunction(SysMemForKernel_960B888CFunction);
			mm.removeFunction(sceKernelDevkitVersionFunction);
			mm.removeFunction(sceKernelGetSystemStatusFunction);
			mm.removeFunction(sceKernelSetSystemStatusFunction);
			
		}
	}
	
	
	public void sceKernelCreateHeap(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelCreateHeap [0x1C1FBFE7]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelDeleteHeap(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelDeleteHeap [0xC9805775]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelAllocHeapMemoryWithOption(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelAllocHeapMemoryWithOption [0xEB7A74DB]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelAllocHeapMemory(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelAllocHeapMemory [0x636C953B]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelFreeHeapMemory(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelFreeHeapMemory [0x7B749390]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelHeapTotalFreeSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelHeapTotalFreeSize [0xA823047E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetHeapTypeCB(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetHeapTypeCB [0xB2163AA1]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_EFF0C6DD(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_EFF0C6DD [0xEFF0C6DD]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_EFEEBAC7(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_EFEEBAC7 [0xEFEEBAC7]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelIsValidHeap(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelIsValidHeap [0x2DB687E9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelQueryMemoryPartitionInfo(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelQueryMemoryPartitionInfo [0x55A40B2C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelPartitionMaxFreeMemSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelPartitionMaxFreeMemSize [0xE6581468]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelPartitionTotalFreeMemSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelPartitionTotalFreeMemSize [0x9697CD32]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelFillFreeBlock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelFillFreeBlock [0xA2A65F0E]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelAllocPartitionMemory(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelAllocPartitionMemory [0x237DBD4F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSizeLockMemoryBlock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSizeLockMemoryBlock [0xEE867074]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelResizeMemoryBlock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelResizeMemoryBlock [0xCE5544F4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelJointMemoryBlock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelJointMemoryBlock [0x5EBE73DE]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_915EF4AC(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_915EF4AC [0x915EF4AC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelFreePartitionMemory(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelFreePartitionMemory [0xB6D61D02]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelQueryMemoryInfo(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelQueryMemoryInfo [0x2A3E5280]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelQueryBlockSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelQueryBlockSize [0xEB4C0E1B]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelQueryMemoryBlockInfo(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelQueryMemoryBlockInfo [0x82CCA14F]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetBlockHeadAddr(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetBlockHeadAddr [0x9D9A5BA1]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_2F3B7611(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_2F3B7611 [0x2F3B7611]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelMemoryExtendSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelMemoryExtendSize [0x7B3E7441]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSetDdrMemoryProtection(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSetDdrMemoryProtection [0xB2C7AA36]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelCallUIDFunction(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelCallUIDFunction [0x6C1DCD41]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelCallUIDObjFunction(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelCallUIDObjFunction [0x5367923C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_CE05CCB7(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_CE05CCB7 [0xCE05CCB7]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelLookupUIDFunction(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelLookupUIDFunction [0x6CD838EC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelCreateUIDtypeInherit(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelCreateUIDtypeInherit [0xAD09C397]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelCreateUIDtype(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelCreateUIDtype [0xFEFC8666]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelDeleteUIDtype(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelDeleteUIDtype [0xD1BAB054]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetUIDname(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetUIDname [0x1C221A08]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelRenameUID(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelRenameUID [0x2E3402CC]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetUIDtype(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetUIDtype [0x39357F07]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelCreateUID(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelCreateUID [0x89A74008]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelDeleteUID(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelDeleteUID [0x8F20C4C0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSearchUIDbyName(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSearchUIDbyName [0x55BFD686]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetUIDcontrolBlock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetUIDcontrolBlock [0xCF4DE78C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetUIDcontrolBlockWithType(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetUIDcontrolBlockWithType [0x41FFC7F9]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_82D3CEE3(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_82D3CEE3 [0x82D3CEE3]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_FC207849(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_FC207849 [0xFC207849]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_536AD5E1(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_536AD5E1 [0x536AD5E1]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelIsHold(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelIsHold [0xDFAEBD5B]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelHoldUID(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelHoldUID [0x7BE95FA0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelReleaseUID(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelReleaseUID [0xFE8DEBE0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysmemIsValidAccess(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysmemIsValidAccess [0xBD5941B4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelIsValidUserAccess(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelIsValidUserAccess [0x80F25772]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemCheckCtlBlk(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemCheckCtlBlk [0x3905D956]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemDump(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemDump [0x26F96157]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemDumpBlock(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemDumpBlock [0x6D6200DD]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemDumpTail(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemDumpTail [0x621037F5]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelMemset(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelMemset [0xA089ECA4]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelMemset32(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelMemset32 [0x2F808748]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelMemmove(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelMemmove [0x1C4B1713]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemInit(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemInit [0xE400FDB0]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemMemSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemMemSize [0x1890BE9C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemMaxFreeMemSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemMaxFreeMemSize [0x03072750]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSysMemTotalFreeMemSize(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSysMemTotalFreeMemSize [0x811BED79]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetSysMemoryInfo(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetSysMemoryInfo [0xF6C10E27]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_CDA3A2F7(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_CDA3A2F7 [0xCDA3A2F7]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void SysMemForKernel_960B888C(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function SysMemForKernel_960B888C [0x960B888C]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelDevkitVersion(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelDevkitVersion [0x3FC9AE6A]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelGetSystemStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelGetSystemStatus [0x452E3696]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public void sceKernelSetSystemStatus(Processor processor) {
		CpuState cpu = processor.cpu;

		Modules.log.debug("Unimplemented NID function sceKernelSetSystemStatus [0x95F5E8DA]");

		cpu.gpr[2] = 0xDEADC0DE;
	}
    
	public final HLEModuleFunction sceKernelCreateHeapFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelCreateHeap") {
		@Override
		public final void execute(Processor processor) {
			sceKernelCreateHeap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelCreateHeap(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelDeleteHeapFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelDeleteHeap") {
		@Override
		public final void execute(Processor processor) {
			sceKernelDeleteHeap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelDeleteHeap(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelAllocHeapMemoryWithOptionFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelAllocHeapMemoryWithOption") {
		@Override
		public final void execute(Processor processor) {
			sceKernelAllocHeapMemoryWithOption(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelAllocHeapMemoryWithOption(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelAllocHeapMemoryFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelAllocHeapMemory") {
		@Override
		public final void execute(Processor processor) {
			sceKernelAllocHeapMemory(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelAllocHeapMemory(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelFreeHeapMemoryFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelFreeHeapMemory") {
		@Override
		public final void execute(Processor processor) {
			sceKernelFreeHeapMemory(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelFreeHeapMemory(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelHeapTotalFreeSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelHeapTotalFreeSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelHeapTotalFreeSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelHeapTotalFreeSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetHeapTypeCBFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetHeapTypeCB") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetHeapTypeCB(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetHeapTypeCB(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_EFF0C6DDFunction = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_EFF0C6DD") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_EFF0C6DD(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_EFF0C6DD(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_EFEEBAC7Function = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_EFEEBAC7") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_EFEEBAC7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_EFEEBAC7(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelIsValidHeapFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelIsValidHeap") {
		@Override
		public final void execute(Processor processor) {
			sceKernelIsValidHeap(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelIsValidHeap(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelQueryMemoryPartitionInfoFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelQueryMemoryPartitionInfo") {
		@Override
		public final void execute(Processor processor) {
			sceKernelQueryMemoryPartitionInfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelQueryMemoryPartitionInfo(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelPartitionMaxFreeMemSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelPartitionMaxFreeMemSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelPartitionMaxFreeMemSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelPartitionMaxFreeMemSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelPartitionTotalFreeMemSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelPartitionTotalFreeMemSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelPartitionTotalFreeMemSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelPartitionTotalFreeMemSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelFillFreeBlockFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelFillFreeBlock") {
		@Override
		public final void execute(Processor processor) {
			sceKernelFillFreeBlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelFillFreeBlock(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelAllocPartitionMemoryFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelAllocPartitionMemory") {
		@Override
		public final void execute(Processor processor) {
			sceKernelAllocPartitionMemory(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelAllocPartitionMemory(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSizeLockMemoryBlockFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSizeLockMemoryBlock") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSizeLockMemoryBlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSizeLockMemoryBlock(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelResizeMemoryBlockFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelResizeMemoryBlock") {
		@Override
		public final void execute(Processor processor) {
			sceKernelResizeMemoryBlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelResizeMemoryBlock(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelJointMemoryBlockFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelJointMemoryBlock") {
		@Override
		public final void execute(Processor processor) {
			sceKernelJointMemoryBlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelJointMemoryBlock(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_915EF4ACFunction = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_915EF4AC") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_915EF4AC(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_915EF4AC(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelFreePartitionMemoryFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelFreePartitionMemory") {
		@Override
		public final void execute(Processor processor) {
			sceKernelFreePartitionMemory(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelFreePartitionMemory(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelQueryMemoryInfoFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelQueryMemoryInfo") {
		@Override
		public final void execute(Processor processor) {
			sceKernelQueryMemoryInfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelQueryMemoryInfo(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelQueryBlockSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelQueryBlockSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelQueryBlockSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelQueryBlockSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelQueryMemoryBlockInfoFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelQueryMemoryBlockInfo") {
		@Override
		public final void execute(Processor processor) {
			sceKernelQueryMemoryBlockInfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelQueryMemoryBlockInfo(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetBlockHeadAddrFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetBlockHeadAddr") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetBlockHeadAddr(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetBlockHeadAddr(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_2F3B7611Function = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_2F3B7611") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_2F3B7611(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_2F3B7611(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelMemoryExtendSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelMemoryExtendSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelMemoryExtendSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelMemoryExtendSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSetDdrMemoryProtectionFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSetDdrMemoryProtection") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSetDdrMemoryProtection(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSetDdrMemoryProtection(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelCallUIDFunctionFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelCallUIDFunction") {
		@Override
		public final void execute(Processor processor) {
			sceKernelCallUIDFunction(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelCallUIDFunction(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelCallUIDObjFunctionFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelCallUIDObjFunction") {
		@Override
		public final void execute(Processor processor) {
			sceKernelCallUIDObjFunction(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelCallUIDObjFunction(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_CE05CCB7Function = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_CE05CCB7") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_CE05CCB7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_CE05CCB7(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelLookupUIDFunctionFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelLookupUIDFunction") {
		@Override
		public final void execute(Processor processor) {
			sceKernelLookupUIDFunction(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelLookupUIDFunction(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelCreateUIDtypeInheritFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelCreateUIDtypeInherit") {
		@Override
		public final void execute(Processor processor) {
			sceKernelCreateUIDtypeInherit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelCreateUIDtypeInherit(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelCreateUIDtypeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelCreateUIDtype") {
		@Override
		public final void execute(Processor processor) {
			sceKernelCreateUIDtype(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelCreateUIDtype(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelDeleteUIDtypeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelDeleteUIDtype") {
		@Override
		public final void execute(Processor processor) {
			sceKernelDeleteUIDtype(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelDeleteUIDtype(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetUIDnameFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetUIDname") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetUIDname(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetUIDname(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelRenameUIDFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelRenameUID") {
		@Override
		public final void execute(Processor processor) {
			sceKernelRenameUID(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelRenameUID(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetUIDtypeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetUIDtype") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetUIDtype(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetUIDtype(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelCreateUIDFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelCreateUID") {
		@Override
		public final void execute(Processor processor) {
			sceKernelCreateUID(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelCreateUID(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelDeleteUIDFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelDeleteUID") {
		@Override
		public final void execute(Processor processor) {
			sceKernelDeleteUID(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelDeleteUID(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSearchUIDbyNameFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSearchUIDbyName") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSearchUIDbyName(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSearchUIDbyName(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetUIDcontrolBlockFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetUIDcontrolBlock") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetUIDcontrolBlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetUIDcontrolBlock(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetUIDcontrolBlockWithTypeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetUIDcontrolBlockWithType") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetUIDcontrolBlockWithType(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetUIDcontrolBlockWithType(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_82D3CEE3Function = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_82D3CEE3") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_82D3CEE3(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_82D3CEE3(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_FC207849Function = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_FC207849") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_FC207849(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_FC207849(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_536AD5E1Function = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_536AD5E1") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_536AD5E1(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_536AD5E1(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelIsHoldFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelIsHold") {
		@Override
		public final void execute(Processor processor) {
			sceKernelIsHold(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelIsHold(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelHoldUIDFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelHoldUID") {
		@Override
		public final void execute(Processor processor) {
			sceKernelHoldUID(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelHoldUID(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelReleaseUIDFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelReleaseUID") {
		@Override
		public final void execute(Processor processor) {
			sceKernelReleaseUID(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelReleaseUID(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysmemIsValidAccessFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysmemIsValidAccess") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysmemIsValidAccess(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysmemIsValidAccess(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelIsValidUserAccessFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelIsValidUserAccess") {
		@Override
		public final void execute(Processor processor) {
			sceKernelIsValidUserAccess(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelIsValidUserAccess(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemCheckCtlBlkFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemCheckCtlBlk") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemCheckCtlBlk(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemCheckCtlBlk(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemDumpFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemDump") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemDump(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemDump(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemDumpBlockFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemDumpBlock") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemDumpBlock(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemDumpBlock(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemDumpTailFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemDumpTail") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemDumpTail(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemDumpTail(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelMemsetFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelMemset") {
		@Override
		public final void execute(Processor processor) {
			sceKernelMemset(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelMemset(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelMemset32Function = new HLEModuleFunction("SysMemForKernel", "sceKernelMemset32") {
		@Override
		public final void execute(Processor processor) {
			sceKernelMemset32(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelMemset32(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelMemmoveFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelMemmove") {
		@Override
		public final void execute(Processor processor) {
			sceKernelMemmove(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelMemmove(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemInitFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemInit") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemInit(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemInit(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemMemSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemMemSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemMemSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemMemSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemMaxFreeMemSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemMaxFreeMemSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemMaxFreeMemSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemMaxFreeMemSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSysMemTotalFreeMemSizeFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSysMemTotalFreeMemSize") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSysMemTotalFreeMemSize(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSysMemTotalFreeMemSize(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetSysMemoryInfoFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetSysMemoryInfo") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetSysMemoryInfo(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetSysMemoryInfo(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_CDA3A2F7Function = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_CDA3A2F7") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_CDA3A2F7(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_CDA3A2F7(processor);";
		}
	};
    
	public final HLEModuleFunction SysMemForKernel_960B888CFunction = new HLEModuleFunction("SysMemForKernel", "SysMemForKernel_960B888C") {
		@Override
		public final void execute(Processor processor) {
			SysMemForKernel_960B888C(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.SysMemForKernel_960B888C(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelDevkitVersionFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelDevkitVersion") {
		@Override
		public final void execute(Processor processor) {
			sceKernelDevkitVersion(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelDevkitVersion(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelGetSystemStatusFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelGetSystemStatus") {
		@Override
		public final void execute(Processor processor) {
			sceKernelGetSystemStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelGetSystemStatus(processor);";
		}
	};
    
	public final HLEModuleFunction sceKernelSetSystemStatusFunction = new HLEModuleFunction("SysMemForKernel", "sceKernelSetSystemStatus") {
		@Override
		public final void execute(Processor processor) {
			sceKernelSetSystemStatus(processor);
		}
		@Override
		public final String compiledString() {
			return "jpcsp.HLE.Modules.SysMemForKernelModule.sceKernelSetSystemStatus(processor);";
		}
	};
    
};
